[
  [
    {
      "template": "dns/caa-fingerprint.yaml",
      "template-url": "https://templates.nuclei.sh/public/caa-fingerprint",
      "template-id": "caa-fingerprint",
      "template-path": "/home/runner/nuclei-templates/dns/caa-fingerprint.yaml",
      "info": {
        "name": "CAA Record",
        "author": [
          "pdteam"
        ],
        "tags": [
          "dns",
          "caa"
        ],
        "description": "A CAA record was discovered. A CAA record is used to specify which certificate authorities (CAs) are allowed to issue certificates for a domain.",
        "reference": [
          "https://support.dnsimple.com/articles/caa-record/#whats-a-caa-record"
        ],
        "severity": "info",
        "metadata": {
          "max-request": 1
        },
        "classification": {
          "cve-id": null,
          "cwe-id": [
            "cwe-200"
          ]
        }
      },
      "type": "dns",
      "host": "proprietaire.dossierfacile.logement.gouv.fr.",
      "matched-at": "proprietaire.dossierfacile.logement.gouv.fr",
      "request": ";; opcode: QUERY, status: NOERROR, id: 56784\n;; flags: rd; QUERY: 1, ANSWER: 0, AUTHORITY: 0, ADDITIONAL: 1\n\n;; OPT PSEUDOSECTION:\n; EDNS: version 0; flags:; udp: 4096\n\n;; QUESTION SECTION:\n;proprietaire.dossierfacile.logement.gouv.fr.\tIN\t CAA\n",
      "response": ";; opcode: QUERY, status: NOERROR, id: 56784\n;; flags: qr rd ra; QUERY: 1, ANSWER: 2, AUTHORITY: 1, ADDITIONAL: 1\n\n;; OPT PSEUDOSECTION:\n; EDNS: version 0; flags:; udp: 1232\n\n;; QUESTION SECTION:\n;proprietaire.dossierfacile.logement.gouv.fr.\tIN\t CAA\n\n;; ANSWER SECTION:\nproprietaire.dossierfacile.logement.gouv.fr.\t300\tIN\tCNAME\tdossierfacile-front-prod-owner.osc-secnum-fr1.scalingo.io.\ndossierfacile-front-prod-owner.osc-secnum-fr1.scalingo.io.\t300\tIN\tCNAME\tsc-lb-pool-01.osc-secnum-fr1.scalingo-network.com.\n\n;; AUTHORITY SECTION:\nscalingo-network.com.\t1800\tIN\tSOA\tburt.ns.cloudflare.com. dns.cloudflare.com. 2339593448 10000 2400 604800 1800\n",
      "timestamp": "2024-05-26T00:22:16.982353471Z",
      "matcher-status": true
    },
    {
      "template": "dns/dns-saas-service-detection.yaml",
      "template-url": "https://templates.nuclei.sh/public/dns-saas-service-detection",
      "template-id": "dns-saas-service-detection",
      "template-path": "/home/runner/nuclei-templates/dns/dns-saas-service-detection.yaml",
      "info": {
        "name": "DNS SaaS Service Detection",
        "author": [
          "noah @thesubtlety",
          "pdteam"
        ],
        "tags": [
          "dns",
          "service"
        ],
        "description": "A CNAME DNS record was discovered",
        "reference": [
          "https://ns1.com/resources/cname",
          "https://www.theregister.com/2021/02/24/dns_cname_tracking/",
          "https://www.ionos.com/digitalguide/hosting/technical-matters/cname-record/"
        ],
        "severity": "info",
        "metadata": {
          "max-request": 1
        }
      },
      "type": "dns",
      "host": "proprietaire.dossierfacile.logement.gouv.fr.",
      "matched-at": "proprietaire.dossierfacile.logement.gouv.fr",
      "extracted-results": [
        "dossierfacile-front-prod-owner.osc-secnum-fr1.scalingo.io."
      ],
      "request": ";; opcode: QUERY, status: NOERROR, id: 37820\n;; flags: rd; QUERY: 1, ANSWER: 0, AUTHORITY: 0, ADDITIONAL: 1\n\n;; OPT PSEUDOSECTION:\n; EDNS: version 0; flags:; udp: 4096\n\n;; QUESTION SECTION:\n;proprietaire.dossierfacile.logement.gouv.fr.\tIN\t CNAME\n",
      "response": ";; opcode: QUERY, status: NOERROR, id: 37820\n;; flags: qr rd ra; QUERY: 1, ANSWER: 1, AUTHORITY: 0, ADDITIONAL: 1\n\n;; OPT PSEUDOSECTION:\n; EDNS: version 0; flags:; udp: 1232\n\n;; QUESTION SECTION:\n;proprietaire.dossierfacile.logement.gouv.fr.\tIN\t CNAME\n\n;; ANSWER SECTION:\nproprietaire.dossierfacile.logement.gouv.fr.\t300\tIN\tCNAME\tdossierfacile-front-prod-owner.osc-secnum-fr1.scalingo.io.\n",
      "timestamp": "2024-05-26T00:22:17.47018767Z",
      "matcher-status": true
    },
    {
      "template": "http/misconfiguration/http-missing-security-headers.yaml",
      "template-url": "https://templates.nuclei.sh/public/http-missing-security-headers",
      "template-id": "http-missing-security-headers",
      "template-path": "/home/runner/nuclei-templates/http/misconfiguration/http-missing-security-headers.yaml",
      "info": {
        "name": "HTTP Missing Security Headers",
        "author": [
          "socketz",
          "geeknik",
          "g4l1t0",
          "convisoappsec",
          "kurohost",
          "dawid-czarnecki",
          "forgedhallpass",
          "jub0bs"
        ],
        "tags": [
          "misconfig",
          "headers",
          "generic"
        ],
        "description": "This template searches for missing HTTP security headers. The impact of these missing headers can vary.\n",
        "severity": "info",
        "metadata": {
          "max-request": 1
        }
      },
      "matcher-name": "referrer-policy",
      "type": "http",
      "host": "https://proprietaire.dossierfacile.logement.gouv.fr/",
      "matched-at": "https://proprietaire.dossierfacile.logement.gouv.fr/",
      "request": "GET / HTTP/1.1\r\nHost: proprietaire.dossierfacile.logement.gouv.fr\r\nUser-Agent: Nuclei - Open-source project (github.com/projectdiscovery/nuclei)\r\nConnection: close\r\nAccept: */*\r\nAccept-Language: en\r\nAccept-Encoding: gzip\r\n\r\n",
      "response": "HTTP/1.1 200 OK\r\nConnection: close\r\nTransfer-Encoding: chunked\r\nCache-Control: public, max-age=0\r\nContent-Security-Policy: default-src 'self'; script-src 'self' *.dossierfacile.fr *.dossierfacile.logement.gouv.fr https://www.google.com https://www.gstatic.com https://beacon-v2.helpscout.net https://stats.beta.gouv.fr 'unsafe-inline' 'unsafe-eval' blob:; style-src 'self' https://cdn.jsdelivr.net/npm/remixicon@3.5.0/fonts/remixicon.min.css https://fonts.googleapis.com 'unsafe-inline'; img-src 'self' https://fonts.gstatic.com https://voxusagers.numerique.gouv.fr *.helpscout.net *.cloudfront.net *.gitbook.com data:; font-src 'self' https://cdn.jsdelivr.net/npm/remixicon@3.5.0/fonts/ data:; object-src 'none'; connect-src https://sentry.incubateur.net *.cloudfront.net *.dossierfacile.fr *.dossierfacile.logement.gouv.fr 'unsafe-eval' *.helpscout.net wss://ws-helpscout.pusher.com https://sockjs-helpscout.pusher.com https://dossierfacile-api-owner-prod.osc-secnum-fr1.scalingo.io https://stats.beta.gouv.fr blob:; frame-src https://www.google.com *.dossierfacile.fr *.dossierfacile.logement.gouv.fr ; child-src *.dossierfacile.fr *.dossierfacile.logement.gouv.fr\r\nContent-Type: text/html; charset=UTF-8\r\nDate: Sun, 26 May 2024 00:23:13 GMT\r\nEtag: W/\"5639b-18fa5fe2780\"\r\nLast-Modified: Thu, 23 May 2024 15:07:28 GMT\r\nStrict-Transport-Security: max-age=31536000\r\nX-Content-Type-Options: nosniff\r\nX-Frame-Options: deny\r\nX-Powered-By: Express\r\nX-Request-Id: aa2a2b3b-c26d-4f4a-81e8-705851fc89ea\r\n\r\n<!DOCTYPE html>\n<html lang=\"en\">\n  <head>\n    <meta charset=\"UTF-8\" />\n    <link rel=\"icon\" href=\"/favicon.svg\" />\n    <meta name=\"viewport\" content=\"width=device-width, initial-scale=1.0\" />\n    <title></title>\n  <script nomodule type=\"text/javascript\">\n    import(\"data:text/javascript;base64,\");\n  </script>\n    <script type=\"module\" crossorigin src=\"/assets/index-DY91ErW_.js\"></script>\n    <link rel=\"stylesheet\" crossorigin href=\"/assets/index-W_8dVt3q.css\">\n  </head>\n  <body>\n    <div id=\"app\"></div>\n  </body>\n</html>\n",
      "ip": "148.253.96.193",
      "timestamp": "2024-05-26T00:23:13.599971348Z",
      "curl-command": "curl -X 'GET' -H 'Accept: */*' -H 'Accept-Language: en' -H 'User-Agent: Nuclei - Open-source project (github.com/projectdiscovery/nuclei)' 'https://proprietaire.dossierfacile.logement.gouv.fr/'",
      "matcher-status": true
    },
    {
      "template": "http/misconfiguration/http-missing-security-headers.yaml",
      "template-url": "https://templates.nuclei.sh/public/http-missing-security-headers",
      "template-id": "http-missing-security-headers",
      "template-path": "/home/runner/nuclei-templates/http/misconfiguration/http-missing-security-headers.yaml",
      "info": {
        "name": "HTTP Missing Security Headers",
        "author": [
          "socketz",
          "geeknik",
          "g4l1t0",
          "convisoappsec",
          "kurohost",
          "dawid-czarnecki",
          "forgedhallpass",
          "jub0bs"
        ],
        "tags": [
          "misconfig",
          "headers",
          "generic"
        ],
        "description": "This template searches for missing HTTP security headers. The impact of these missing headers can vary.\n",
        "severity": "info",
        "metadata": {
          "max-request": 1
        }
      },
      "matcher-name": "clear-site-data",
      "type": "http",
      "host": "https://proprietaire.dossierfacile.logement.gouv.fr/",
      "matched-at": "https://proprietaire.dossierfacile.logement.gouv.fr/",
      "request": "GET / HTTP/1.1\r\nHost: proprietaire.dossierfacile.logement.gouv.fr\r\nUser-Agent: Nuclei - Open-source project (github.com/projectdiscovery/nuclei)\r\nConnection: close\r\nAccept: */*\r\nAccept-Language: en\r\nAccept-Encoding: gzip\r\n\r\n",
      "response": "HTTP/1.1 200 OK\r\nConnection: close\r\nTransfer-Encoding: chunked\r\nCache-Control: public, max-age=0\r\nContent-Security-Policy: default-src 'self'; script-src 'self' *.dossierfacile.fr *.dossierfacile.logement.gouv.fr https://www.google.com https://www.gstatic.com https://beacon-v2.helpscout.net https://stats.beta.gouv.fr 'unsafe-inline' 'unsafe-eval' blob:; style-src 'self' https://cdn.jsdelivr.net/npm/remixicon@3.5.0/fonts/remixicon.min.css https://fonts.googleapis.com 'unsafe-inline'; img-src 'self' https://fonts.gstatic.com https://voxusagers.numerique.gouv.fr *.helpscout.net *.cloudfront.net *.gitbook.com data:; font-src 'self' https://cdn.jsdelivr.net/npm/remixicon@3.5.0/fonts/ data:; object-src 'none'; connect-src https://sentry.incubateur.net *.cloudfront.net *.dossierfacile.fr *.dossierfacile.logement.gouv.fr 'unsafe-eval' *.helpscout.net wss://ws-helpscout.pusher.com https://sockjs-helpscout.pusher.com https://dossierfacile-api-owner-prod.osc-secnum-fr1.scalingo.io https://stats.beta.gouv.fr blob:; frame-src https://www.google.com *.dossierfacile.fr *.dossierfacile.logement.gouv.fr ; child-src *.dossierfacile.fr *.dossierfacile.logement.gouv.fr\r\nContent-Type: text/html; charset=UTF-8\r\nDate: Sun, 26 May 2024 00:23:13 GMT\r\nEtag: W/\"5639b-18fa5fe2780\"\r\nLast-Modified: Thu, 23 May 2024 15:07:28 GMT\r\nStrict-Transport-Security: max-age=31536000\r\nX-Content-Type-Options: nosniff\r\nX-Frame-Options: deny\r\nX-Powered-By: Express\r\nX-Request-Id: aa2a2b3b-c26d-4f4a-81e8-705851fc89ea\r\n\r\n<!DOCTYPE html>\n<html lang=\"en\">\n  <head>\n    <meta charset=\"UTF-8\" />\n    <link rel=\"icon\" href=\"/favicon.svg\" />\n    <meta name=\"viewport\" content=\"width=device-width, initial-scale=1.0\" />\n    <title></title>\n  <script nomodule type=\"text/javascript\">\n    import(\"data:text/javascript;base64,\");\n  </script>\n    <script type=\"module\" crossorigin src=\"/assets/index-DY91ErW_.js\"></script>\n    <link rel=\"stylesheet\" crossorigin href=\"/assets/index-W_8dVt3q.css\">\n  </head>\n  <body>\n    <div id=\"app\"></div>\n  </body>\n</html>\n",
      "ip": "148.253.96.193",
      "timestamp": "2024-05-26T00:23:13.600019458Z",
      "curl-command": "curl -X 'GET' -H 'Accept: */*' -H 'Accept-Language: en' -H 'User-Agent: Nuclei - Open-source project (github.com/projectdiscovery/nuclei)' 'https://proprietaire.dossierfacile.logement.gouv.fr/'",
      "matcher-status": true
    },
    {
      "template": "http/misconfiguration/http-missing-security-headers.yaml",
      "template-url": "https://templates.nuclei.sh/public/http-missing-security-headers",
      "template-id": "http-missing-security-headers",
      "template-path": "/home/runner/nuclei-templates/http/misconfiguration/http-missing-security-headers.yaml",
      "info": {
        "name": "HTTP Missing Security Headers",
        "author": [
          "socketz",
          "geeknik",
          "g4l1t0",
          "convisoappsec",
          "kurohost",
          "dawid-czarnecki",
          "forgedhallpass",
          "jub0bs"
        ],
        "tags": [
          "misconfig",
          "headers",
          "generic"
        ],
        "description": "This template searches for missing HTTP security headers. The impact of these missing headers can vary.\n",
        "severity": "info",
        "metadata": {
          "max-request": 1
        }
      },
      "matcher-name": "cross-origin-embedder-policy",
      "type": "http",
      "host": "https://proprietaire.dossierfacile.logement.gouv.fr/",
      "matched-at": "https://proprietaire.dossierfacile.logement.gouv.fr/",
      "request": "GET / HTTP/1.1\r\nHost: proprietaire.dossierfacile.logement.gouv.fr\r\nUser-Agent: Nuclei - Open-source project (github.com/projectdiscovery/nuclei)\r\nConnection: close\r\nAccept: */*\r\nAccept-Language: en\r\nAccept-Encoding: gzip\r\n\r\n",
      "response": "HTTP/1.1 200 OK\r\nConnection: close\r\nTransfer-Encoding: chunked\r\nCache-Control: public, max-age=0\r\nContent-Security-Policy: default-src 'self'; script-src 'self' *.dossierfacile.fr *.dossierfacile.logement.gouv.fr https://www.google.com https://www.gstatic.com https://beacon-v2.helpscout.net https://stats.beta.gouv.fr 'unsafe-inline' 'unsafe-eval' blob:; style-src 'self' https://cdn.jsdelivr.net/npm/remixicon@3.5.0/fonts/remixicon.min.css https://fonts.googleapis.com 'unsafe-inline'; img-src 'self' https://fonts.gstatic.com https://voxusagers.numerique.gouv.fr *.helpscout.net *.cloudfront.net *.gitbook.com data:; font-src 'self' https://cdn.jsdelivr.net/npm/remixicon@3.5.0/fonts/ data:; object-src 'none'; connect-src https://sentry.incubateur.net *.cloudfront.net *.dossierfacile.fr *.dossierfacile.logement.gouv.fr 'unsafe-eval' *.helpscout.net wss://ws-helpscout.pusher.com https://sockjs-helpscout.pusher.com https://dossierfacile-api-owner-prod.osc-secnum-fr1.scalingo.io https://stats.beta.gouv.fr blob:; frame-src https://www.google.com *.dossierfacile.fr *.dossierfacile.logement.gouv.fr ; child-src *.dossierfacile.fr *.dossierfacile.logement.gouv.fr\r\nContent-Type: text/html; charset=UTF-8\r\nDate: Sun, 26 May 2024 00:23:13 GMT\r\nEtag: W/\"5639b-18fa5fe2780\"\r\nLast-Modified: Thu, 23 May 2024 15:07:28 GMT\r\nStrict-Transport-Security: max-age=31536000\r\nX-Content-Type-Options: nosniff\r\nX-Frame-Options: deny\r\nX-Powered-By: Express\r\nX-Request-Id: aa2a2b3b-c26d-4f4a-81e8-705851fc89ea\r\n\r\n<!DOCTYPE html>\n<html lang=\"en\">\n  <head>\n    <meta charset=\"UTF-8\" />\n    <link rel=\"icon\" href=\"/favicon.svg\" />\n    <meta name=\"viewport\" content=\"width=device-width, initial-scale=1.0\" />\n    <title></title>\n  <script nomodule type=\"text/javascript\">\n    import(\"data:text/javascript;base64,\");\n  </script>\n    <script type=\"module\" crossorigin src=\"/assets/index-DY91ErW_.js\"></script>\n    <link rel=\"stylesheet\" crossorigin href=\"/assets/index-W_8dVt3q.css\">\n  </head>\n  <body>\n    <div id=\"app\"></div>\n  </body>\n</html>\n",
      "ip": "148.253.96.193",
      "timestamp": "2024-05-26T00:23:13.600035578Z",
      "curl-command": "curl -X 'GET' -H 'Accept: */*' -H 'Accept-Language: en' -H 'User-Agent: Nuclei - Open-source project (github.com/projectdiscovery/nuclei)' 'https://proprietaire.dossierfacile.logement.gouv.fr/'",
      "matcher-status": true
    },
    {
      "template": "http/misconfiguration/http-missing-security-headers.yaml",
      "template-url": "https://templates.nuclei.sh/public/http-missing-security-headers",
      "template-id": "http-missing-security-headers",
      "template-path": "/home/runner/nuclei-templates/http/misconfiguration/http-missing-security-headers.yaml",
      "info": {
        "name": "HTTP Missing Security Headers",
        "author": [
          "socketz",
          "geeknik",
          "g4l1t0",
          "convisoappsec",
          "kurohost",
          "dawid-czarnecki",
          "forgedhallpass",
          "jub0bs"
        ],
        "tags": [
          "misconfig",
          "headers",
          "generic"
        ],
        "description": "This template searches for missing HTTP security headers. The impact of these missing headers can vary.\n",
        "severity": "info",
        "metadata": {
          "max-request": 1
        }
      },
      "matcher-name": "cross-origin-opener-policy",
      "type": "http",
      "host": "https://proprietaire.dossierfacile.logement.gouv.fr/",
      "matched-at": "https://proprietaire.dossierfacile.logement.gouv.fr/",
      "request": "GET / HTTP/1.1\r\nHost: proprietaire.dossierfacile.logement.gouv.fr\r\nUser-Agent: Nuclei - Open-source project (github.com/projectdiscovery/nuclei)\r\nConnection: close\r\nAccept: */*\r\nAccept-Language: en\r\nAccept-Encoding: gzip\r\n\r\n",
      "response": "HTTP/1.1 200 OK\r\nConnection: close\r\nTransfer-Encoding: chunked\r\nCache-Control: public, max-age=0\r\nContent-Security-Policy: default-src 'self'; script-src 'self' *.dossierfacile.fr *.dossierfacile.logement.gouv.fr https://www.google.com https://www.gstatic.com https://beacon-v2.helpscout.net https://stats.beta.gouv.fr 'unsafe-inline' 'unsafe-eval' blob:; style-src 'self' https://cdn.jsdelivr.net/npm/remixicon@3.5.0/fonts/remixicon.min.css https://fonts.googleapis.com 'unsafe-inline'; img-src 'self' https://fonts.gstatic.com https://voxusagers.numerique.gouv.fr *.helpscout.net *.cloudfront.net *.gitbook.com data:; font-src 'self' https://cdn.jsdelivr.net/npm/remixicon@3.5.0/fonts/ data:; object-src 'none'; connect-src https://sentry.incubateur.net *.cloudfront.net *.dossierfacile.fr *.dossierfacile.logement.gouv.fr 'unsafe-eval' *.helpscout.net wss://ws-helpscout.pusher.com https://sockjs-helpscout.pusher.com https://dossierfacile-api-owner-prod.osc-secnum-fr1.scalingo.io https://stats.beta.gouv.fr blob:; frame-src https://www.google.com *.dossierfacile.fr *.dossierfacile.logement.gouv.fr ; child-src *.dossierfacile.fr *.dossierfacile.logement.gouv.fr\r\nContent-Type: text/html; charset=UTF-8\r\nDate: Sun, 26 May 2024 00:23:13 GMT\r\nEtag: W/\"5639b-18fa5fe2780\"\r\nLast-Modified: Thu, 23 May 2024 15:07:28 GMT\r\nStrict-Transport-Security: max-age=31536000\r\nX-Content-Type-Options: nosniff\r\nX-Frame-Options: deny\r\nX-Powered-By: Express\r\nX-Request-Id: aa2a2b3b-c26d-4f4a-81e8-705851fc89ea\r\n\r\n<!DOCTYPE html>\n<html lang=\"en\">\n  <head>\n    <meta charset=\"UTF-8\" />\n    <link rel=\"icon\" href=\"/favicon.svg\" />\n    <meta name=\"viewport\" content=\"width=device-width, initial-scale=1.0\" />\n    <title></title>\n  <script nomodule type=\"text/javascript\">\n    import(\"data:text/javascript;base64,\");\n  </script>\n    <script type=\"module\" crossorigin src=\"/assets/index-DY91ErW_.js\"></script>\n    <link rel=\"stylesheet\" crossorigin href=\"/assets/index-W_8dVt3q.css\">\n  </head>\n  <body>\n    <div id=\"app\"></div>\n  </body>\n</html>\n",
      "ip": "148.253.96.193",
      "timestamp": "2024-05-26T00:23:13.600051688Z",
      "curl-command": "curl -X 'GET' -H 'Accept: */*' -H 'Accept-Language: en' -H 'User-Agent: Nuclei - Open-source project (github.com/projectdiscovery/nuclei)' 'https://proprietaire.dossierfacile.logement.gouv.fr/'",
      "matcher-status": true
    },
    {
      "template": "http/misconfiguration/http-missing-security-headers.yaml",
      "template-url": "https://templates.nuclei.sh/public/http-missing-security-headers",
      "template-id": "http-missing-security-headers",
      "template-path": "/home/runner/nuclei-templates/http/misconfiguration/http-missing-security-headers.yaml",
      "info": {
        "name": "HTTP Missing Security Headers",
        "author": [
          "socketz",
          "geeknik",
          "g4l1t0",
          "convisoappsec",
          "kurohost",
          "dawid-czarnecki",
          "forgedhallpass",
          "jub0bs"
        ],
        "tags": [
          "misconfig",
          "headers",
          "generic"
        ],
        "description": "This template searches for missing HTTP security headers. The impact of these missing headers can vary.\n",
        "severity": "info",
        "metadata": {
          "max-request": 1
        }
      },
      "matcher-name": "cross-origin-resource-policy",
      "type": "http",
      "host": "https://proprietaire.dossierfacile.logement.gouv.fr/",
      "matched-at": "https://proprietaire.dossierfacile.logement.gouv.fr/",
      "request": "GET / HTTP/1.1\r\nHost: proprietaire.dossierfacile.logement.gouv.fr\r\nUser-Agent: Nuclei - Open-source project (github.com/projectdiscovery/nuclei)\r\nConnection: close\r\nAccept: */*\r\nAccept-Language: en\r\nAccept-Encoding: gzip\r\n\r\n",
      "response": "HTTP/1.1 200 OK\r\nConnection: close\r\nTransfer-Encoding: chunked\r\nCache-Control: public, max-age=0\r\nContent-Security-Policy: default-src 'self'; script-src 'self' *.dossierfacile.fr *.dossierfacile.logement.gouv.fr https://www.google.com https://www.gstatic.com https://beacon-v2.helpscout.net https://stats.beta.gouv.fr 'unsafe-inline' 'unsafe-eval' blob:; style-src 'self' https://cdn.jsdelivr.net/npm/remixicon@3.5.0/fonts/remixicon.min.css https://fonts.googleapis.com 'unsafe-inline'; img-src 'self' https://fonts.gstatic.com https://voxusagers.numerique.gouv.fr *.helpscout.net *.cloudfront.net *.gitbook.com data:; font-src 'self' https://cdn.jsdelivr.net/npm/remixicon@3.5.0/fonts/ data:; object-src 'none'; connect-src https://sentry.incubateur.net *.cloudfront.net *.dossierfacile.fr *.dossierfacile.logement.gouv.fr 'unsafe-eval' *.helpscout.net wss://ws-helpscout.pusher.com https://sockjs-helpscout.pusher.com https://dossierfacile-api-owner-prod.osc-secnum-fr1.scalingo.io https://stats.beta.gouv.fr blob:; frame-src https://www.google.com *.dossierfacile.fr *.dossierfacile.logement.gouv.fr ; child-src *.dossierfacile.fr *.dossierfacile.logement.gouv.fr\r\nContent-Type: text/html; charset=UTF-8\r\nDate: Sun, 26 May 2024 00:23:13 GMT\r\nEtag: W/\"5639b-18fa5fe2780\"\r\nLast-Modified: Thu, 23 May 2024 15:07:28 GMT\r\nStrict-Transport-Security: max-age=31536000\r\nX-Content-Type-Options: nosniff\r\nX-Frame-Options: deny\r\nX-Powered-By: Express\r\nX-Request-Id: aa2a2b3b-c26d-4f4a-81e8-705851fc89ea\r\n\r\n<!DOCTYPE html>\n<html lang=\"en\">\n  <head>\n    <meta charset=\"UTF-8\" />\n    <link rel=\"icon\" href=\"/favicon.svg\" />\n    <meta name=\"viewport\" content=\"width=device-width, initial-scale=1.0\" />\n    <title></title>\n  <script nomodule type=\"text/javascript\">\n    import(\"data:text/javascript;base64,\");\n  </script>\n    <script type=\"module\" crossorigin src=\"/assets/index-DY91ErW_.js\"></script>\n    <link rel=\"stylesheet\" crossorigin href=\"/assets/index-W_8dVt3q.css\">\n  </head>\n  <body>\n    <div id=\"app\"></div>\n  </body>\n</html>\n",
      "ip": "148.253.96.193",
      "timestamp": "2024-05-26T00:23:13.600065875Z",
      "curl-command": "curl -X 'GET' -H 'Accept: */*' -H 'Accept-Language: en' -H 'User-Agent: Nuclei - Open-source project (github.com/projectdiscovery/nuclei)' 'https://proprietaire.dossierfacile.logement.gouv.fr/'",
      "matcher-status": true
    },
    {
      "template": "http/misconfiguration/http-missing-security-headers.yaml",
      "template-url": "https://templates.nuclei.sh/public/http-missing-security-headers",
      "template-id": "http-missing-security-headers",
      "template-path": "/home/runner/nuclei-templates/http/misconfiguration/http-missing-security-headers.yaml",
      "info": {
        "name": "HTTP Missing Security Headers",
        "author": [
          "socketz",
          "geeknik",
          "g4l1t0",
          "convisoappsec",
          "kurohost",
          "dawid-czarnecki",
          "forgedhallpass",
          "jub0bs"
        ],
        "tags": [
          "misconfig",
          "headers",
          "generic"
        ],
        "description": "This template searches for missing HTTP security headers. The impact of these missing headers can vary.\n",
        "severity": "info",
        "metadata": {
          "max-request": 1
        }
      },
      "matcher-name": "permissions-policy",
      "type": "http",
      "host": "https://proprietaire.dossierfacile.logement.gouv.fr/",
      "matched-at": "https://proprietaire.dossierfacile.logement.gouv.fr/",
      "request": "GET / HTTP/1.1\r\nHost: proprietaire.dossierfacile.logement.gouv.fr\r\nUser-Agent: Nuclei - Open-source project (github.com/projectdiscovery/nuclei)\r\nConnection: close\r\nAccept: */*\r\nAccept-Language: en\r\nAccept-Encoding: gzip\r\n\r\n",
      "response": "HTTP/1.1 200 OK\r\nConnection: close\r\nTransfer-Encoding: chunked\r\nCache-Control: public, max-age=0\r\nContent-Security-Policy: default-src 'self'; script-src 'self' *.dossierfacile.fr *.dossierfacile.logement.gouv.fr https://www.google.com https://www.gstatic.com https://beacon-v2.helpscout.net https://stats.beta.gouv.fr 'unsafe-inline' 'unsafe-eval' blob:; style-src 'self' https://cdn.jsdelivr.net/npm/remixicon@3.5.0/fonts/remixicon.min.css https://fonts.googleapis.com 'unsafe-inline'; img-src 'self' https://fonts.gstatic.com https://voxusagers.numerique.gouv.fr *.helpscout.net *.cloudfront.net *.gitbook.com data:; font-src 'self' https://cdn.jsdelivr.net/npm/remixicon@3.5.0/fonts/ data:; object-src 'none'; connect-src https://sentry.incubateur.net *.cloudfront.net *.dossierfacile.fr *.dossierfacile.logement.gouv.fr 'unsafe-eval' *.helpscout.net wss://ws-helpscout.pusher.com https://sockjs-helpscout.pusher.com https://dossierfacile-api-owner-prod.osc-secnum-fr1.scalingo.io https://stats.beta.gouv.fr blob:; frame-src https://www.google.com *.dossierfacile.fr *.dossierfacile.logement.gouv.fr ; child-src *.dossierfacile.fr *.dossierfacile.logement.gouv.fr\r\nContent-Type: text/html; charset=UTF-8\r\nDate: Sun, 26 May 2024 00:23:13 GMT\r\nEtag: W/\"5639b-18fa5fe2780\"\r\nLast-Modified: Thu, 23 May 2024 15:07:28 GMT\r\nStrict-Transport-Security: max-age=31536000\r\nX-Content-Type-Options: nosniff\r\nX-Frame-Options: deny\r\nX-Powered-By: Express\r\nX-Request-Id: aa2a2b3b-c26d-4f4a-81e8-705851fc89ea\r\n\r\n<!DOCTYPE html>\n<html lang=\"en\">\n  <head>\n    <meta charset=\"UTF-8\" />\n    <link rel=\"icon\" href=\"/favicon.svg\" />\n    <meta name=\"viewport\" content=\"width=device-width, initial-scale=1.0\" />\n    <title></title>\n  <script nomodule type=\"text/javascript\">\n    import(\"data:text/javascript;base64,\");\n  </script>\n    <script type=\"module\" crossorigin src=\"/assets/index-DY91ErW_.js\"></script>\n    <link rel=\"stylesheet\" crossorigin href=\"/assets/index-W_8dVt3q.css\">\n  </head>\n  <body>\n    <div id=\"app\"></div>\n  </body>\n</html>\n",
      "ip": "148.253.96.193",
      "timestamp": "2024-05-26T00:23:13.600078819Z",
      "curl-command": "curl -X 'GET' -H 'Accept: */*' -H 'Accept-Language: en' -H 'User-Agent: Nuclei - Open-source project (github.com/projectdiscovery/nuclei)' 'https://proprietaire.dossierfacile.logement.gouv.fr/'",
      "matcher-status": true
    },
    {
      "template": "http/misconfiguration/http-missing-security-headers.yaml",
      "template-url": "https://templates.nuclei.sh/public/http-missing-security-headers",
      "template-id": "http-missing-security-headers",
      "template-path": "/home/runner/nuclei-templates/http/misconfiguration/http-missing-security-headers.yaml",
      "info": {
        "name": "HTTP Missing Security Headers",
        "author": [
          "socketz",
          "geeknik",
          "g4l1t0",
          "convisoappsec",
          "kurohost",
          "dawid-czarnecki",
          "forgedhallpass",
          "jub0bs"
        ],
        "tags": [
          "misconfig",
          "headers",
          "generic"
        ],
        "description": "This template searches for missing HTTP security headers. The impact of these missing headers can vary.\n",
        "severity": "info",
        "metadata": {
          "max-request": 1
        }
      },
      "matcher-name": "x-permitted-cross-domain-policies",
      "type": "http",
      "host": "https://proprietaire.dossierfacile.logement.gouv.fr/",
      "matched-at": "https://proprietaire.dossierfacile.logement.gouv.fr/",
      "request": "GET / HTTP/1.1\r\nHost: proprietaire.dossierfacile.logement.gouv.fr\r\nUser-Agent: Nuclei - Open-source project (github.com/projectdiscovery/nuclei)\r\nConnection: close\r\nAccept: */*\r\nAccept-Language: en\r\nAccept-Encoding: gzip\r\n\r\n",
      "response": "HTTP/1.1 200 OK\r\nConnection: close\r\nTransfer-Encoding: chunked\r\nCache-Control: public, max-age=0\r\nContent-Security-Policy: default-src 'self'; script-src 'self' *.dossierfacile.fr *.dossierfacile.logement.gouv.fr https://www.google.com https://www.gstatic.com https://beacon-v2.helpscout.net https://stats.beta.gouv.fr 'unsafe-inline' 'unsafe-eval' blob:; style-src 'self' https://cdn.jsdelivr.net/npm/remixicon@3.5.0/fonts/remixicon.min.css https://fonts.googleapis.com 'unsafe-inline'; img-src 'self' https://fonts.gstatic.com https://voxusagers.numerique.gouv.fr *.helpscout.net *.cloudfront.net *.gitbook.com data:; font-src 'self' https://cdn.jsdelivr.net/npm/remixicon@3.5.0/fonts/ data:; object-src 'none'; connect-src https://sentry.incubateur.net *.cloudfront.net *.dossierfacile.fr *.dossierfacile.logement.gouv.fr 'unsafe-eval' *.helpscout.net wss://ws-helpscout.pusher.com https://sockjs-helpscout.pusher.com https://dossierfacile-api-owner-prod.osc-secnum-fr1.scalingo.io https://stats.beta.gouv.fr blob:; frame-src https://www.google.com *.dossierfacile.fr *.dossierfacile.logement.gouv.fr ; child-src *.dossierfacile.fr *.dossierfacile.logement.gouv.fr\r\nContent-Type: text/html; charset=UTF-8\r\nDate: Sun, 26 May 2024 00:23:13 GMT\r\nEtag: W/\"5639b-18fa5fe2780\"\r\nLast-Modified: Thu, 23 May 2024 15:07:28 GMT\r\nStrict-Transport-Security: max-age=31536000\r\nX-Content-Type-Options: nosniff\r\nX-Frame-Options: deny\r\nX-Powered-By: Express\r\nX-Request-Id: aa2a2b3b-c26d-4f4a-81e8-705851fc89ea\r\n\r\n<!DOCTYPE html>\n<html lang=\"en\">\n  <head>\n    <meta charset=\"UTF-8\" />\n    <link rel=\"icon\" href=\"/favicon.svg\" />\n    <meta name=\"viewport\" content=\"width=device-width, initial-scale=1.0\" />\n    <title></title>\n  <script nomodule type=\"text/javascript\">\n    import(\"data:text/javascript;base64,\");\n  </script>\n    <script type=\"module\" crossorigin src=\"/assets/index-DY91ErW_.js\"></script>\n    <link rel=\"stylesheet\" crossorigin href=\"/assets/index-W_8dVt3q.css\">\n  </head>\n  <body>\n    <div id=\"app\"></div>\n  </body>\n</html>\n",
      "ip": "148.253.96.193",
      "timestamp": "2024-05-26T00:23:13.600090811Z",
      "curl-command": "curl -X 'GET' -H 'Accept: */*' -H 'Accept-Language: en' -H 'User-Agent: Nuclei - Open-source project (github.com/projectdiscovery/nuclei)' 'https://proprietaire.dossierfacile.logement.gouv.fr/'",
      "matcher-status": true
    },
    {
      "template": "http/technologies/tech-detect.yaml",
      "template-url": "https://templates.nuclei.sh/public/tech-detect",
      "template-id": "tech-detect",
      "template-path": "/home/runner/nuclei-templates/http/technologies/tech-detect.yaml",
      "info": {
        "name": "Wappalyzer Technology Detection",
        "author": [
          "hakluke"
        ],
        "tags": [
          "tech"
        ],
        "severity": "info",
        "metadata": {
          "max-request": 1
        }
      },
      "matcher-name": "express",
      "type": "http",
      "host": "https://proprietaire.dossierfacile.logement.gouv.fr/",
      "matched-at": "https://proprietaire.dossierfacile.logement.gouv.fr/",
      "request": "GET / HTTP/1.1\r\nHost: proprietaire.dossierfacile.logement.gouv.fr\r\nUser-Agent: Nuclei - Open-source project (github.com/projectdiscovery/nuclei)\r\nConnection: close\r\nAccept: */*\r\nAccept-Language: en\r\nAccept-Encoding: gzip\r\n\r\n",
      "response": "HTTP/1.1 200 OK\r\nConnection: close\r\nTransfer-Encoding: chunked\r\nCache-Control: public, max-age=0\r\nContent-Security-Policy: default-src 'self'; script-src 'self' *.dossierfacile.fr *.dossierfacile.logement.gouv.fr https://www.google.com https://www.gstatic.com https://beacon-v2.helpscout.net https://stats.beta.gouv.fr 'unsafe-inline' 'unsafe-eval' blob:; style-src 'self' https://cdn.jsdelivr.net/npm/remixicon@3.5.0/fonts/remixicon.min.css https://fonts.googleapis.com 'unsafe-inline'; img-src 'self' https://fonts.gstatic.com https://voxusagers.numerique.gouv.fr *.helpscout.net *.cloudfront.net *.gitbook.com data:; font-src 'self' https://cdn.jsdelivr.net/npm/remixicon@3.5.0/fonts/ data:; object-src 'none'; connect-src https://sentry.incubateur.net *.cloudfront.net *.dossierfacile.fr *.dossierfacile.logement.gouv.fr 'unsafe-eval' *.helpscout.net wss://ws-helpscout.pusher.com https://sockjs-helpscout.pusher.com https://dossierfacile-api-owner-prod.osc-secnum-fr1.scalingo.io https://stats.beta.gouv.fr blob:; frame-src https://www.google.com *.dossierfacile.fr *.dossierfacile.logement.gouv.fr ; child-src *.dossierfacile.fr *.dossierfacile.logement.gouv.fr\r\nContent-Type: text/html; charset=UTF-8\r\nDate: Sun, 26 May 2024 00:22:58 GMT\r\nEtag: W/\"5639b-18fa5fe2780\"\r\nLast-Modified: Thu, 23 May 2024 15:07:28 GMT\r\nStrict-Transport-Security: max-age=31536000\r\nX-Content-Type-Options: nosniff\r\nX-Frame-Options: deny\r\nX-Powered-By: Express\r\nX-Request-Id: 3f683ed5-89cc-43f2-88e9-544ac5d373da\r\n\r\n<!DOCTYPE html>\n<html lang=\"en\">\n  <head>\n    <meta charset=\"UTF-8\" />\n    <link rel=\"icon\" href=\"/favicon.svg\" />\n    <meta name=\"viewport\" content=\"width=device-width, initial-scale=1.0\" />\n    <title></title>\n  <script nomodule type=\"text/javascript\">\n    import(\"data:text/javascript;base64,LyohIERTRlIgdjEuMTEuMiB8IFNQRFgtTGljZW5zZS1JZGVudGlmaWVyOiBNSVQgfCBMaWNlbnNlLUZpbGVuYW1lOiBMSUNFTlNFLm1kIHwgcmVzdHJpY3RlZCB1c2UgKHNlZSB0ZXJtcyBhbmQgY29uZGl0aW9ucykgKi8KIWZ1bmN0aW9uKCl7InVzZSBzdHJpY3QiO3ZhciB0PWZ1bmN0aW9uKCl7dGhpcy5tb2R1bGVzPXt9fSxlPXtpc0FjdGl2ZTp7Y29uZmlndXJhYmxlOiEwfSxpc0xlZ2FjeTp7Y29uZmlndXJhYmxlOiEwfX07dC5wcm90b3R5cGUuY3JlYXRlPWZ1bmN0aW9uKHQpe3ZhciBlPW5ldyB0O3RoaXMubW9kdWxlc1tlLnR5cGVdPWV9LHQucHJvdG90eXBlLmdldE1vZHVsZT1mdW5jdGlvbih0KXtyZXR1cm4gdGhpcy5tb2R1bGVzW3RdfSx0LnByb3RvdHlwZS5hZGQ9ZnVuY3Rpb24odCxlKXt0aGlzLm1vZHVsZXNbdF0uYWRkKGUpfSx0LnByb3RvdHlwZS5yZW1vdmU9ZnVuY3Rpb24odCxlKXt0aGlzLm1vZHVsZXNbdF0ucmVtb3ZlKGUpfSxlLmlzQWN0aXZlLmdldD1mdW5jdGlvbigpe3JldHVybiB0aGlzLl9pc0FjdGl2ZX0sZS5pc0FjdGl2ZS5zZXQ9ZnVuY3Rpb24odCl7dmFyIGU9dGhpcztpZih0IT09dGhpcy5faXNBY3RpdmUpe3RoaXMuX2lzQWN0aXZlPXQ7dmFyIHI9T2JqZWN0LmtleXModGhpcy5tb2R1bGVzKS5tYXAoKGZ1bmN0aW9uKHQpe3JldHVybiBlLm1vZHVsZXNbdF19KSk7aWYodClmb3IodmFyIG49MCxpPXI7bjxpLmxlbmd0aDtuKz0xKXtpW25dLmFjdGl2YXRlKCl9ZWxzZSBmb3IodmFyIG89MCxzPXI7bzxzLmxlbmd0aDtvKz0xKXtzW29dLmRlYWN0aXZhdGUoKX19fSxlLmlzTGVnYWN5LmdldD1mdW5jdGlvbigpe3JldHVybiB0aGlzLl9pc0xlZ2FjeX0sZS5pc0xlZ2FjeS5zZXQ9ZnVuY3Rpb24odCl7dCE9PXRoaXMuX2lzTGVnYWN5JiYodGhpcy5faXNMZWdhY3k9dCl9LE9iamVjdC5kZWZpbmVQcm9wZXJ0aWVzKHQucHJvdG90eXBlLGUpO3ZhciByPW5ldyB0LG49ImZyIixpPSJkc2ZyIixvPSJAZ291dmZyIixzPSIxLjExLjIiLGE9ZnVuY3Rpb24odCxlLHIsbil7c3dpdGNoKHRoaXMubGV2ZWw9dCx0aGlzLmxpZ2h0PWUsdGhpcy5kYXJrPXIsbil7Y2FzZSJ3YXJuIjp0aGlzLmxvZ2dlcj1jb25zb2xlLndhcm47YnJlYWs7Y2FzZSJlcnJvciI6dGhpcy5sb2dnZXI9Y29uc29sZS5lcnJvcjticmVhaztkZWZhdWx0OnRoaXMubG9nZ2VyPWNvbnNvbGUubG9nfX0sYz17Y29sb3I6e2NvbmZpZ3VyYWJsZTohMH19O2EucHJvdG90eXBlLmxvZz1mdW5jdGlvbigpe2Zvcih2YXIgdD1bXSxlPWFyZ3VtZW50cy5sZW5ndGg7ZS0tOyl0W2VdPWFyZ3VtZW50c1tlXTtmb3IodmFyIHI9bmV3IGwoaSksbj0wLG89dDtuPG8ubGVuZ3RoO24rPTEpe3ZhciBzPW9bbl07ci5hZGQocyl9dGhpcy5wcmludChyKX0sYS5wcm90b3R5cGUucHJpbnQ9ZnVuY3Rpb24odCl7dC5zZXRDb2xvcih0aGlzLmNvbG9yKSx0aGlzLmxvZ2dlci5hcHBseShjb25zb2xlLHQuZ2V0TWVzc2FnZSgpKX0sYy5jb2xvci5nZXQ9ZnVuY3Rpb24oKXtyZXR1cm4gd2luZG93Lm1hdGNoTWVkaWEoIihwcmVmZXJzLWNvbG9yLXNjaGVtZTogZGFyaykiKS5tYXRjaGVzP3RoaXMuZGFyazp0aGlzLmxpZ2h0fSxPYmplY3QuZGVmaW5lUHJvcGVydGllcyhhLnByb3RvdHlwZSxjKTt2YXIgbD1mdW5jdGlvbih0KXt0aGlzLmlucHV0cz1bIiVjIl0sdGhpcy5zdHlsZXM9WyJmb250LWZhbWlseTpNYXJpYW5uZSIsImxpbmUtaGVpZ2h0OiAxLjUiXSx0aGlzLm9iamVjdHM9W10sdCYmdGhpcy5hZGQodCsiIDoiKX07bC5wcm90b3R5cGUuYWRkPWZ1bmN0aW9uKHQpe3N3aXRjaCh0eXBlb2YgdCl7Y2FzZSJvYmplY3QiOmNhc2UiZnVuY3Rpb24iOnRoaXMuaW5wdXRzLnB1c2goIiVvICIpLHRoaXMub2JqZWN0cy5wdXNoKHQpO2JyZWFrO2RlZmF1bHQ6dGhpcy5pbnB1dHMucHVzaCh0KyIgIil9fSxsLnByb3RvdHlwZS5zZXRDb2xvcj1mdW5jdGlvbih0KXt0aGlzLnN0eWxlcy5wdXNoKCJjb2xvcjoiK3QpfSxsLnByb3RvdHlwZS5nZXRNZXNzYWdlPWZ1bmN0aW9uKCl7cmV0dXJuW3RoaXMuaW5wdXRzLmpvaW4oIiIpLHRoaXMuc3R5bGVzLmpvaW4oIjsiKV0uY29uY2F0KHRoaXMub2JqZWN0cyl9O3ZhciB1PXtsb2c6bmV3IGEoMCwiIzYxNjE2MSIsIiM5ODk4OTgiKSxkZWJ1ZzpuZXcgYSgxLCIjMDAwMDkxIiwiIzhCOEJGRiIpLGluZm86bmV3IGEoMiwiIzAwN2MzYiIsIiMwMGVkNzAiKSx3YXJuOm5ldyBhKDMsIiNiYTQ1MDAiLCIjZmE1YzAwIiwid2FybiIpLGVycm9yOm5ldyBhKDQsIiNEODA2MDAiLCIjRkY0NjQxIiwiZXJyb3IiKX0scD1mdW5jdGlvbigpe3ZhciB0PXRoaXM7dGhpcy5sZXZlbD0yO3ZhciBlPWZ1bmN0aW9uKGUpe3ZhciByPXVbZV07dFtlXT1mdW5jdGlvbigpe2Zvcih2YXIgZT1bXSxuPWFyZ3VtZW50cy5sZW5ndGg7bi0tOyllW25dPWFyZ3VtZW50c1tuXTt0LmxldmVsPD1yLmxldmVsJiZyLmxvZy5hcHBseShyLGUpfSx0W2VdLnByaW50PXIucHJpbnQuYmluZChyKX07Zm9yKHZhciByIGluIHUpZShyKX07cC5wcm90b3R5cGUuc3RhdGU9ZnVuY3Rpb24oKXt2YXIgdD1uZXcgbDt0LmFkZChyKSx0aGlzLmxvZy5wcmludCh0KX0scC5wcm90b3R5cGUudHJlZT1mdW5jdGlvbigpe3ZhciB0PXIuZ2V0TW9kdWxlKCJzdGFnZSIpO2lmKHQpe3ZhciBlPW5ldyBsO3RoaXMuX2JyYW5jaCh0LnJvb3QsMCxlKSx0aGlzLmxvZy5wcmludChlKX19LHAucHJvdG90eXBlLl9icmFuY2g9ZnVuY3Rpb24odCxlLHIpe3ZhciBuPSIiO2lmKGU+MCl7Zm9yKHZhciBpPSIiLG89MDtvPGU7bysrKWkrPSIgICAgIjtuKz1pKyLilJTilIAgIn1uKz0iWyIrdC5pZCsiXSAiK3QuaHRtbCxyLmFkZChuKSxyLmFkZCh7IkAiOnR9KSxyLmFkZCgiXG4iKTtmb3IodmFyIHM9MCxhPXQuY2hpbGRyZW47czxhLmxlbmd0aDtzKz0xKXt2YXIgYz1hW3NdO24rPXRoaXMuX2JyYW5jaChjLGUrMSxyKX19O3ZhciBoPW5ldyBwLGY9ZnVuY3Rpb24odCl7ImxvYWRpbmciIT09ZG9jdW1lbnQucmVhZHlTdGF0ZT93aW5kb3cucmVxdWVzdEFuaW1hdGlvbkZyYW1lKHQpOmRvY3VtZW50LmFkZEV2ZW50TGlzdGVuZXIoIkRPTUNvbnRlbnRMb2FkZWQiLHQpfSxkPXtBVVRPOiJhdXRvIixNQU5VQUw6Im1hbnVhbCIsUlVOVElNRToicnVudGltZSIsTE9BREVEOiJsb2FkZWQiLFZVRToidnVlIixBTkdVTEFSOiJhbmd1bGFyIixSRUFDVDoicmVhY3QifSx5PWZ1bmN0aW9uKCl7dGhpcy5fbW9kZT1kLkFVVE8sdGhpcy5pc1N0YXJ0ZWQ9ITEsdGhpcy5zdGFydGluZz10aGlzLnN0YXJ0LmJpbmQodGhpcyksdGhpcy5wcmV2ZW50TWFuaXB1bGF0aW9uPSExfSxiPXttb2RlOntjb25maWd1cmFibGU6ITB9fTt5LnByb3RvdHlwZS5jb25maWd1cmU9ZnVuY3Rpb24odCxlLHIpe3ZvaWQgMD09PXQmJih0PXt9KSx0aGlzLnN0YXJ0Q2FsbGJhY2s9ZTt2YXIgbj10LnByb2R1Y3Rpb24mJighcnx8ImZhbHNlIiE9PXIucHJvZHVjdGlvbik7c3dpdGNoKCEwKXtjYXNlIHImJiFpc05hTihyLmxldmVsKTpoLmxldmVsPU51bWJlcihyLmxldmVsKTticmVhaztjYXNlIHImJnIudmVyYm9zZSYmKCJ0cnVlIj09PXIudmVyYm9zZXx8MT09PXIudmVyYm9zZSk6aC5sZXZlbD0wO2JyZWFrO2Nhc2UgbjpoLmxldmVsPTk5OTticmVhaztjYXNlIHQudmVyYm9zZTpoLmxldmVsPTB9aC5pbmZvKCJ2ZXJzaW9uICIrcyksdGhpcy5tb2RlPXQubW9kZXx8ZC5BVVRPfSxiLm1vZGUuc2V0PWZ1bmN0aW9uKHQpe3N3aXRjaCh0KXtjYXNlIGQuQVVUTzp0aGlzLnByZXZlbnRNYW5pcHVsYXRpb249ITEsZT10aGlzLnN0YXJ0aW5nLGYoZSk7YnJlYWs7Y2FzZSBkLkxPQURFRDp0aGlzLnByZXZlbnRNYW5pcHVsYXRpb249ITEsZih0aGlzLnN0YXJ0aW5nKTticmVhaztjYXNlIGQuUlVOVElNRTp0aGlzLnByZXZlbnRNYW5pcHVsYXRpb249ITEsdGhpcy5zdGFydCgpO2JyZWFrO2Nhc2UgZC5NQU5VQUw6dGhpcy5wcmV2ZW50TWFuaXB1bGF0aW9uPSExO2JyZWFrO2Nhc2UgZC5WVUU6Y2FzZSBkLkFOR1VMQVI6Y2FzZSBkLlJFQUNUOnRoaXMucHJldmVudE1hbmlwdWxhdGlvbj0hMDticmVhaztkZWZhdWx0OnJldHVybiB2b2lkIGguZXJyb3IoIklsbGVnYWwgbW9kZSIpfXZhciBlO3RoaXMuX21vZGU9dCxoLmluZm8oIm1vZGUgc2V0IHRvICIrdCl9LGIubW9kZS5nZXQ9ZnVuY3Rpb24oKXtyZXR1cm4gdGhpcy5fbW9kZX0seS5wcm90b3R5cGUuc3RhcnQ9ZnVuY3Rpb24oKXtoLmluZm8oInN0YXJ0IiksdGhpcy5zdGFydENhbGxiYWNrKCl9LE9iamVjdC5kZWZpbmVQcm9wZXJ0aWVzKHkucHJvdG90eXBlLGIpO3ZhciBnPW5ldyB5LHY9ZnVuY3Rpb24oKXt0aGlzLl9jb2xsZWN0aW9uPVtdfSxtPXtsZW5ndGg6e2NvbmZpZ3VyYWJsZTohMH0sY29sbGVjdGlvbjp7Y29uZmlndXJhYmxlOiEwfX07di5wcm90b3R5cGUuZm9yRWFjaD1mdW5jdGlvbih0KXt0aGlzLl9jb2xsZWN0aW9uLmZvckVhY2godCl9LHYucHJvdG90eXBlLm1hcD1mdW5jdGlvbih0KXtyZXR1cm4gdGhpcy5fY29sbGVjdGlvbi5tYXAodCl9LG0ubGVuZ3RoLmdldD1mdW5jdGlvbigpe3JldHVybiB0aGlzLl9jb2xsZWN0aW9uLmxlbmd0aH0sdi5wcm90b3R5cGUuYWRkPWZ1bmN0aW9uKHQpe3JldHVybiEodGhpcy5fY29sbGVjdGlvbi5pbmRleE9mKHQpPi0xKSYmKHRoaXMuX2NvbGxlY3Rpb24ucHVzaCh0KSx0aGlzLm9uQWRkJiZ0aGlzLm9uQWRkKCksdGhpcy5vblBvcHVsYXRlJiYxPT09dGhpcy5fY29sbGVjdGlvbi5sZW5ndGgmJnRoaXMub25Qb3B1bGF0ZSgpLCEwKX0sdi5wcm90b3R5cGUucmVtb3ZlPWZ1bmN0aW9uKHQpe3ZhciBlPXRoaXMuX2NvbGxlY3Rpb24uaW5kZXhPZih0KTtpZigtMT09PWUpcmV0dXJuITE7dGhpcy5fY29sbGVjdGlvbi5zcGxpY2UoZSwxKSx0aGlzLm9uUmVtb3ZlJiZ0aGlzLm9uUmVtb3ZlKCksdGhpcy5vbkVtcHR5JiYwPT09dGhpcy5fY29sbGVjdGlvbi5sZW5ndGgmJnRoaXMub25FbXB0eSgpfSx2LnByb3RvdHlwZS5leGVjdXRlPWZ1bmN0aW9uKCl7Zm9yKHZhciB0PVtdLGU9YXJndW1lbnRzLmxlbmd0aDtlLS07KXRbZV09YXJndW1lbnRzW2VdO2Zvcih2YXIgcj0wLG49dGhpcy5fY29sbGVjdGlvbjtyPG4ubGVuZ3RoO3IrPTEpe3ZhciBpPW5bcl07aSYmaS5hcHBseShudWxsLHQpfX0sdi5wcm90b3R5cGUuY2xlYXI9ZnVuY3Rpb24oKXt0aGlzLl9jb2xsZWN0aW9uLmxlbmd0aD0wfSx2LnByb3RvdHlwZS5jbG9uZT1mdW5jdGlvbigpe3ZhciB0PW5ldyB2O3JldHVybiB0Ll9jb2xsZWN0aW9uPXRoaXMuX2NvbGxlY3Rpb24uc2xpY2UoKSx0fSxtLmNvbGxlY3Rpb24uZ2V0PWZ1bmN0aW9uKCl7cmV0dXJuIHRoaXMuX2NvbGxlY3Rpb259LE9iamVjdC5kZWZpbmVQcm9wZXJ0aWVzKHYucHJvdG90eXBlLG0pO3ZhciBfPWZ1bmN0aW9uKHQpe2Z1bmN0aW9uIGUoZSl7dC5jYWxsKHRoaXMpLHRoaXMudHlwZT1lLHRoaXMuaXNBY3RpdmU9ITF9cmV0dXJuIHQmJihlLl9fcHJvdG9fXz10KSxlLnByb3RvdHlwZT1PYmplY3QuY3JlYXRlKHQmJnQucHJvdG90eXBlKSxlLnByb3RvdHlwZS5jb25zdHJ1Y3Rvcj1lLGUucHJvdG90eXBlLmFjdGl2YXRlPWZ1bmN0aW9uKCl7fSxlLnByb3RvdHlwZS5kZWFjdGl2YXRlPWZ1bmN0aW9uKCl7fSxlfSh2KSx3PWZ1bmN0aW9uKHQpe3JldHVybiBuKyItIit0fTt3LnNlbGVjdG9yPWZ1bmN0aW9uKHQsZSl7cmV0dXJuIHZvaWQgMD09PWUmJihlPSIuIiksIiIrZSt3KHQpfSwody5hdHRyPWZ1bmN0aW9uKHQpe3JldHVybiJkYXRhLSIrdyh0KX0pLnNlbGVjdG9yPWZ1bmN0aW9uKHQsZSl7dmFyIHI9dy5hdHRyKHQpO3JldHVybiB2b2lkIDAhPT1lJiYocis9Jz0iJytlKyciJyksIlsiK3IrIl0ifSx3LmV2ZW50PWZ1bmN0aW9uKHQpe3JldHVybiBpKyIuIit0fSx3LmVtaXNzaW9uPWZ1bmN0aW9uKHQsZSl7cmV0dXJuImVtaXNzaW9uOiIrdCsiLiIrZX07dmFyIFM9ZnVuY3Rpb24odCxlKXtyZXR1cm4gQXJyYXkucHJvdG90eXBlLnNsaWNlLmNhbGwodC5xdWVyeVNlbGVjdG9yQWxsKGUpKX0sRT1mdW5jdGlvbih0LGUpe3ZhciByPXQucGFyZW50RWxlbWVudDtyZXR1cm4gci5tYXRjaGVzKGUpP3I6cj09PWRvY3VtZW50LmRvY3VtZW50RWxlbWVudD9udWxsOkUocixlKX0sTz1mdW5jdGlvbih0LGUscil7dGhpcy5zZWxlY3Rvcj10LHRoaXMuSW5zdGFuY2VDbGFzcz1lLHRoaXMuY3JlYXRvcj1yLHRoaXMuaW5zdGFuY2VzPW5ldyB2LHRoaXMuaXNJbnRyb2R1Y2VkPSExLHRoaXMuX2luc3RhbmNlQ2xhc3NOYW1lPXRoaXMuSW5zdGFuY2VDbGFzcy5pbnN0YW5jZUNsYXNzTmFtZSx0aGlzLl9pbnN0YW5jZUNsYXNzTmFtZXM9dGhpcy5nZXRJbnN0YW5jZUNsYXNzTmFtZXModGhpcy5JbnN0YW5jZUNsYXNzKSx0aGlzLl9wcm9wZXJ0eT10aGlzLl9pbnN0YW5jZUNsYXNzTmFtZS5zdWJzdHJpbmcoMCwxKS50b0xvd2VyQ2FzZSgpK3RoaXMuX2luc3RhbmNlQ2xhc3NOYW1lLnN1YnN0cmluZygxKTt2YXIgbj10aGlzLl9pbnN0YW5jZUNsYXNzTmFtZS5yZXBsYWNlKC9bXmEtekEtWjAtOV0rL2csIi0iKS5yZXBsYWNlKC8oW0EtWl0rKShbQS1aXVthLXpdKS9nLCIkMS0kMiIpLnJlcGxhY2UoLyhbYS16XSkoW0EtWl0pL2csIiQxLSQyIikucmVwbGFjZSgvKFswLTldKShbXjAtOV0pL2csIiQxLSQyIikucmVwbGFjZSgvKFteMC05XSkoWzAtOV0pL2csIiQxLSQyIikudG9Mb3dlckNhc2UoKTt0aGlzLl9hdHRyaWJ1dGU9dy5hdHRyKCJqcy0iK24pfSxqPXtpbnN0YW5jZUNsYXNzTmFtZTp7Y29uZmlndXJhYmxlOiEwfSxpbnN0YW5jZUNsYXNzTmFtZXM6e2NvbmZpZ3VyYWJsZTohMH0scHJvcGVydHk6e2NvbmZpZ3VyYWJsZTohMH0sYXR0cmlidXRlOntjb25maWd1cmFibGU6ITB9fTtPLnByb3RvdHlwZS5nZXRJbnN0YW5jZUNsYXNzTmFtZXM9ZnVuY3Rpb24odCl7dmFyIGU9T2JqZWN0LmdldFByb3RvdHlwZU9mKHQpO3JldHVybiBlJiYiSW5zdGFuY2UiIT09ZS5pbnN0YW5jZUNsYXNzTmFtZT90aGlzLmdldEluc3RhbmNlQ2xhc3NOYW1lcyhlKS5jb25jYXQoW3QuaW5zdGFuY2VDbGFzc05hbWVdKTpbdC5pbnN0YW5jZUNsYXNzTmFtZV19LE8ucHJvdG90eXBlLmhhc0luc3RhbmNlQ2xhc3NOYW1lPWZ1bmN0aW9uKHQpe3JldHVybiB0aGlzLl9pbnN0YW5jZUNsYXNzTmFtZXMuaW5kZXhPZih0KT4tMX0sTy5wcm90b3R5cGUuaW50cm9kdWNlPWZ1bmN0aW9uKCl7dGhpcy5pc0ludHJvZHVjZWR8fCh0aGlzLmlzSW50cm9kdWNlZD0hMCxyLmdldE1vZHVsZSgic3RhZ2UiKS5wYXJzZShkb2N1bWVudC5kb2N1bWVudEVsZW1lbnQsdGhpcykpfSxPLnByb3RvdHlwZS5wYXJzZT1mdW5jdGlvbih0LGUpe3ZhciByPVtdO3JldHVybiB0Lm1hdGNoZXMmJnQubWF0Y2hlcyh0aGlzLnNlbGVjdG9yKSYmci5wdXNoKHQpLCFlJiZ0LnF1ZXJ5U2VsZWN0b3JBbGwmJnQucXVlcnlTZWxlY3Rvcih0aGlzLnNlbGVjdG9yKSYmci5wdXNoLmFwcGx5KHIsUyh0LHRoaXMuc2VsZWN0b3IpKSxyfSxPLnByb3RvdHlwZS5jcmVhdGU9ZnVuY3Rpb24odCl7aWYodC5ub2RlLm1hdGNoZXModGhpcy5zZWxlY3Rvcikpe3ZhciBlPW5ldyB0aGlzLkluc3RhbmNlQ2xhc3M7cmV0dXJuIHRoaXMuaW5zdGFuY2VzLmFkZChlKSxlfX0sTy5wcm90b3R5cGUucmVtb3ZlPWZ1bmN0aW9uKHQpe3RoaXMuaW5zdGFuY2VzLnJlbW92ZSh0KX0sTy5wcm90b3R5cGUuZGlzcG9zZT1mdW5jdGlvbigpe2Zvcih2YXIgdD10aGlzLmluc3RhbmNlcy5jb2xsZWN0aW9uLGU9dC5sZW5ndGgtMTtlPi0xO2UtLSl0W2VdLl9kaXNwb3NlKCk7dGhpcy5jcmVhdG9yPW51bGx9LGouaW5zdGFuY2VDbGFzc05hbWUuZ2V0PWZ1bmN0aW9uKCl7cmV0dXJuIHRoaXMuX2luc3RhbmNlQ2xhc3NOYW1lfSxqLmluc3RhbmNlQ2xhc3NOYW1lcy5nZXQ9ZnVuY3Rpb24oKXtyZXR1cm4gdGhpcy5faW5zdGFuY2VDbGFzc05hbWVzfSxqLnByb3BlcnR5LmdldD1mdW5jdGlvbigpe3JldHVybiB0aGlzLl9wcm9wZXJ0eX0sai5hdHRyaWJ1dGUuZ2V0PWZ1bmN0aW9uKCl7cmV0dXJuIHRoaXMuX2F0dHJpYnV0ZX0sT2JqZWN0LmRlZmluZVByb3BlcnRpZXMoTy5wcm90b3R5cGUsaik7dmFyIFQ9ZnVuY3Rpb24odCl7ZnVuY3Rpb24gZSgpe3QuY2FsbCh0aGlzLCJyZWdpc3RlciIpfXJldHVybiB0JiYoZS5fX3Byb3RvX189dCksZS5wcm90b3R5cGU9T2JqZWN0LmNyZWF0ZSh0JiZ0LnByb3RvdHlwZSksZS5wcm90b3R5cGUuY29uc3RydWN0b3I9ZSxlLnByb3RvdHlwZS5yZWdpc3Rlcj1mdW5jdGlvbih0LGUsbil7dmFyIGk9bmV3IE8odCxlLG4pO3JldHVybiB0aGlzLmFkZChpKSxyLmlzQWN0aXZlJiZpLmludHJvZHVjZSgpLGl9LGUucHJvdG90eXBlLmFjdGl2YXRlPWZ1bmN0aW9uKCl7Zm9yKHZhciB0PTAsZT10aGlzLmNvbGxlY3Rpb247dDxlLmxlbmd0aDt0Kz0xKXtlW3RdLmludHJvZHVjZSgpfX0sZS5wcm90b3R5cGUucmVtb3ZlPWZ1bmN0aW9uKGUpe2UuZGlzcG9zZSgpLHQucHJvdG90eXBlLnJlbW92ZS5jYWxsKHRoaXMsZSl9LGV9KF8pLFA9MCxBPWZ1bmN0aW9uKHQsZSl7ZT90aGlzLmlkPWU6KFArKyx0aGlzLmlkPVApLHRoaXMubm9kZT10LHRoaXMuYXR0cmlidXRlTmFtZXM9W10sdGhpcy5pbnN0YW5jZXM9W10sdGhpcy5fY2hpbGRyZW49W10sdGhpcy5fcGFyZW50PW51bGwsdGhpcy5fcHJvamVjdHM9W119LE49e3Byb3h5Ontjb25maWd1cmFibGU6ITB9LGh0bWw6e2NvbmZpZ3VyYWJsZTohMH0scGFyZW50Ontjb25maWd1cmFibGU6ITB9LGFzY2VuZGFudHM6e2NvbmZpZ3VyYWJsZTohMH0sY2hpbGRyZW46e2NvbmZpZ3VyYWJsZTohMH0sZGVzY2VuZGFudHM6e2NvbmZpZ3VyYWJsZTohMH19O04ucHJveHkuZ2V0PWZ1bmN0aW9uKCl7dmFyIHQ9dGhpcztpZighdGhpcy5fcHJveHkpe3RoaXMuX3Byb3h5PXtpZDp0aGlzLmlkLGdldCBwYXJlbnQoKXtyZXR1cm4gdC5wYXJlbnQ/dC5wYXJlbnQucHJveHk6bnVsbH0sZ2V0IGNoaWxkcmVuKCl7cmV0dXJuIHQuY2hpbGRyZW4ubWFwKChmdW5jdGlvbih0KXtyZXR1cm4gdC5wcm94eX0pKX19O2Zvcih2YXIgZT0wLHI9dGhpcy5pbnN0YW5jZXM7ZTxyLmxlbmd0aDtlKz0xKXt2YXIgbj1yW2VdO3RoaXMuX3Byb3h5W24ucmVnaXN0cmF0aW9uLnByb3BlcnR5XT1uLnByb3h5fX1yZXR1cm4gdGhpcy5fcHJveHl9LE4uaHRtbC5nZXQ9ZnVuY3Rpb24oKXtpZighdGhpcy5ub2RlfHwhdGhpcy5ub2RlLm91dGVySFRNTClyZXR1cm4iIjt2YXIgdD10aGlzLm5vZGUub3V0ZXJIVE1MLmluZGV4T2YoIj4iKTtyZXR1cm4gdGhpcy5ub2RlLm91dGVySFRNTC5zdWJzdHJpbmcoMCx0KzEpfSxBLnByb3RvdHlwZS5wcm9qZWN0PWZ1bmN0aW9uKHQpey0xPT09dGhpcy5fcHJvamVjdHMuaW5kZXhPZih0KSYmdGhpcy5fcHJvamVjdHMucHVzaCh0KX0sQS5wcm90b3R5cGUucG9wdWxhdGU9ZnVuY3Rpb24oKXt2YXIgdD10aGlzLl9wcm9qZWN0cy5zbGljZSgpO3RoaXMuX3Byb2plY3RzLmxlbmd0aD0wO2Zvcih2YXIgZT0wLHI9dDtlPHIubGVuZ3RoO2UrPTEpe3ZhciBuPXJbZV07dGhpcy5jcmVhdGUobil9fSxBLnByb3RvdHlwZS5jcmVhdGU9ZnVuY3Rpb24odCl7aWYoIXRoaXMuaGFzSW5zdGFuY2UodC5pbnN0YW5jZUNsYXNzTmFtZSkpe2guZGVidWcoImNyZWF0ZSBpbnN0YW5jZSBvZiAiK3QuaW5zdGFuY2VDbGFzc05hbWUrIiBvbiBlbGVtZW50IFsiK3RoaXMuaWQrIl0iKTt2YXIgZT10LmNyZWF0ZSh0aGlzKTt0aGlzLmluc3RhbmNlcy5wdXNoKGUpLGUuX2NvbmZpZyh0aGlzLHQpLHRoaXMuX3Byb3h5JiYodGhpcy5fcHJveHlbdC5wcm9wZXJ0eV09ZS5wcm94eSl9fSxBLnByb3RvdHlwZS5yZW1vdmU9ZnVuY3Rpb24odCl7dmFyIGU9dGhpcy5pbnN0YW5jZXMuaW5kZXhPZih0KTtlPi0xJiZ0aGlzLmluc3RhbmNlcy5zcGxpY2UoZSwxKSx0aGlzLl9wcm94eSYmZGVsZXRlIHRoaXMuX3Byb3h5W3QucmVnaXN0cmF0aW9uLnByb3BlcnR5XX0sTi5wYXJlbnQuZ2V0PWZ1bmN0aW9uKCl7cmV0dXJuIHRoaXMuX3BhcmVudH0sTi5hc2NlbmRhbnRzLmdldD1mdW5jdGlvbigpe3JldHVyblt0aGlzLnBhcmVudF0uY29uY2F0KHRoaXMucGFyZW50LmFzY2VuZGFudHMpfSxOLmNoaWxkcmVuLmdldD1mdW5jdGlvbigpe3JldHVybiB0aGlzLl9jaGlsZHJlbn0sTi5kZXNjZW5kYW50cy5nZXQ9ZnVuY3Rpb24oKXt2YXIgdD1bXS5jb25jYXQodGhpcy5fY2hpbGRyZW4pO3JldHVybiB0aGlzLl9jaGlsZHJlbi5mb3JFYWNoKChmdW5jdGlvbihlKXtyZXR1cm4gdC5wdXNoLmFwcGx5KHQsZS5kZXNjZW5kYW50cyl9KSksdH0sQS5wcm90b3R5cGUuYWRkQ2hpbGQ9ZnVuY3Rpb24odCxlKXtyZXR1cm4gdGhpcy5fY2hpbGRyZW4uaW5kZXhPZih0KT4tMT9udWxsOih0Ll9wYXJlbnQ9dGhpcywhaXNOYU4oZSkmJmU+LTEmJmU8dGhpcy5fY2hpbGRyZW4ubGVuZ3RoP3RoaXMuX2NoaWxkcmVuLnNwbGljZShlLDAsdCk6dGhpcy5fY2hpbGRyZW4ucHVzaCh0KSx0KX0sQS5wcm90b3R5cGUucmVtb3ZlQ2hpbGQ9ZnVuY3Rpb24odCl7dmFyIGU9dGhpcy5fY2hpbGRyZW4uaW5kZXhPZih0KTtpZigtMT09PWUpcmV0dXJuIG51bGw7dC5fcGFyZW50PW51bGwsdGhpcy5fY2hpbGRyZW4uc3BsaWNlKGUsMSl9LEEucHJvdG90eXBlLmVtaXQ9ZnVuY3Rpb24odCxlKXtmb3IodmFyIG49W10saT0wLG89ci5nZXRNb2R1bGUoInN0YWdlIikuY29sbGVjdGlvbjtpPG8ubGVuZ3RoO2krPTEpe3ZhciBzPW9baV07bi5wdXNoLmFwcGx5KG4scy5fZW1pdCh0LGUpKX1yZXR1cm4gbn0sQS5wcm90b3R5cGUuX2VtaXQ9ZnVuY3Rpb24odCxlKXtmb3IodmFyIHI9W10sbj0wLGk9dGhpcy5pbnN0YW5jZXM7bjxpLmxlbmd0aDtuKz0xKXt2YXIgbz1pW25dO3IucHVzaC5hcHBseShyLG8uX2VtaXR0ZXIuZW1pdCh0LGUpKX1yZXR1cm4gcn0sQS5wcm90b3R5cGUuYXNjZW5kPWZ1bmN0aW9uKHQsZSl7cmV0dXJuIHRoaXMuX3BhcmVudD90aGlzLl9wYXJlbnQuX2FzY2VuZCh0LGUpOltdfSxBLnByb3RvdHlwZS5fYXNjZW5kPWZ1bmN0aW9uKHQsZSl7Zm9yKHZhciByPVtdLG49MCxpPXRoaXMuaW5zdGFuY2VzO248aS5sZW5ndGg7bis9MSl7dmFyIG89aVtuXTtyLnB1c2guYXBwbHkocixvLl9hc2NlbnQuZW1pdCh0LGUpKX1yZXR1cm4gdGhpcy5fcGFyZW50JiZyLnB1c2guYXBwbHkocix0aGlzLl9wYXJlbnQuX2FzY2VuZCh0LGUpKSxyfSxBLnByb3RvdHlwZS5kZXNjZW5kPWZ1bmN0aW9uKHQsZSl7Zm9yKHZhciByPVtdLG49MCxpPXRoaXMuX2NoaWxkcmVuO248aS5sZW5ndGg7bis9MSl7dmFyIG89aVtuXTtyLnB1c2guYXBwbHkocixvLl9kZXNjZW5kKHQsZSkpfXJldHVybiByfSxBLnByb3RvdHlwZS5fZGVzY2VuZD1mdW5jdGlvbih0LGUpe2Zvcih2YXIgcj1bXSxuPTAsaT10aGlzLmluc3RhbmNlcztuPGkubGVuZ3RoO24rPTEpe3ZhciBvPWlbbl07ci5wdXNoLmFwcGx5KHIsby5fZGVzY2VudC5lbWl0KHQsZSkpfWZvcih2YXIgcz0wLGE9dGhpcy5fY2hpbGRyZW47czxhLmxlbmd0aDtzKz0xKXt2YXIgYz1hW3NdO3IucHVzaC5hcHBseShyLGMuX2Rlc2NlbmQodCxlKSl9cmV0dXJuIHJ9LEEucHJvdG90eXBlLmdldEluc3RhbmNlPWZ1bmN0aW9uKHQpe2Zvcih2YXIgZT0wLHI9dGhpcy5pbnN0YW5jZXM7ZTxyLmxlbmd0aDtlKz0xKXt2YXIgbj1yW2VdO2lmKG4ucmVnaXN0cmF0aW9uLmhhc0luc3RhbmNlQ2xhc3NOYW1lKHQpKXJldHVybiBufXJldHVybiBudWxsfSxBLnByb3RvdHlwZS5oYXNJbnN0YW5jZT1mdW5jdGlvbih0KXtyZXR1cm4gbnVsbCE9PXRoaXMuZ2V0SW5zdGFuY2UodCl9LEEucHJvdG90eXBlLmdldERlc2NlbmRhbnRJbnN0YW5jZXM9ZnVuY3Rpb24odCxlLHIpe2lmKCF0KXJldHVybltdO2Zvcih2YXIgbj1bXSxpPTAsbz10aGlzLl9jaGlsZHJlbjtpPG8ubGVuZ3RoO2krPTEpe3ZhciBzPW9baV0sYT1zLmdldEluc3RhbmNlKHQpO2EmJihuLnB1c2goYSkscil8fChlJiZzLmhhc0luc3RhbmNlKGUpfHwhcy5jaGlsZHJlbi5sZW5ndGh8fG4ucHVzaC5hcHBseShuLHMuZ2V0RGVzY2VuZGFudEluc3RhbmNlcyh0LGUscikpKX1yZXR1cm4gbn0sQS5wcm90b3R5cGUuZ2V0QXNjZW5kYW50SW5zdGFuY2U9ZnVuY3Rpb24odCxlKXtpZighdHx8IXRoaXMuX3BhcmVudClyZXR1cm4gbnVsbDt2YXIgcj10aGlzLl9wYXJlbnQuZ2V0SW5zdGFuY2UodCk7cmV0dXJuIHJ8fChlJiZ0aGlzLl9wYXJlbnQuaGFzSW5zdGFuY2UoZSk/bnVsbDp0aGlzLl9wYXJlbnQuZ2V0QXNjZW5kYW50SW5zdGFuY2UodCxlKSl9LEEucHJvdG90eXBlLmRpc3Bvc2U9ZnVuY3Rpb24oKXtmb3IodmFyIHQ9dGhpcy5pbnN0YW5jZXMubGVuZ3RoLTE7dD49MDt0LS0pe3ZhciBlPXRoaXMuaW5zdGFuY2VzW3RdO2UmJmUuX2Rpc3Bvc2UoKX10aGlzLmluc3RhbmNlcy5sZW5ndGg9MCxyLnJlbW92ZSgic3RhZ2UiLHRoaXMpLHRoaXMucGFyZW50LnJlbW92ZUNoaWxkKHRoaXMpLHRoaXMuX2NoaWxkcmVuLmxlbmd0aD0wLGguZGVidWcoInJlbW92ZSBlbGVtZW50IFsiK3RoaXMuaWQrIl0gIit0aGlzLmh0bWwpfSxBLnByb3RvdHlwZS5wcmVwYXJlPWZ1bmN0aW9uKHQpey0xPT09dGhpcy5hdHRyaWJ1dGVOYW1lcy5pbmRleE9mKHQpJiZ0aGlzLmF0dHJpYnV0ZU5hbWVzLnB1c2godCl9LEEucHJvdG90eXBlLmV4YW1pbmU9ZnVuY3Rpb24oKXt2YXIgdD10aGlzLmF0dHJpYnV0ZU5hbWVzLnNsaWNlKCk7dGhpcy5hdHRyaWJ1dGVOYW1lcy5sZW5ndGg9MDtmb3IodmFyIGU9dGhpcy5pbnN0YW5jZXMubGVuZ3RoLTE7ZT4tMTtlLS0pdGhpcy5pbnN0YW5jZXNbZV0uZXhhbWluZSh0KX0sT2JqZWN0LmRlZmluZVByb3BlcnRpZXMoQS5wcm90b3R5cGUsTik7dmFyIEM9e0NMSUNLOncuZW1pc3Npb24oInJvb3QiLCJjbGljayIpLEtFWURPV046dy5lbWlzc2lvbigicm9vdCIsImtleWRvd24iKSxLRVlVUDp3LmVtaXNzaW9uKCJyb290Iiwia2V5dXAiKX0sST17VEFCOntpZDoidGFiIix2YWx1ZTo5fSxFU0NBUEU6e2lkOiJlc2NhcGUiLHZhbHVlOjI3fSxFTkQ6e2lkOiJlbmQiLHZhbHVlOjM1fSxIT01FOntpZDoiaG9tZSIsdmFsdWU6MzZ9LExFRlQ6e2lkOiJsZWZ0Iix2YWx1ZTozN30sVVA6e2lkOiJ1cCIsdmFsdWU6Mzh9LFJJR0hUOntpZDoicmlnaHQiLHZhbHVlOjM5fSxET1dOOntpZDoiZG93biIsdmFsdWU6NDB9fSxMPWZ1bmN0aW9uKHQpe3JldHVybiBPYmplY3QudmFsdWVzKEkpLmZpbHRlcigoZnVuY3Rpb24oZSl7cmV0dXJuIGUudmFsdWU9PT10fSkpWzBdfSxNPWZ1bmN0aW9uKHQpe2Z1bmN0aW9uIGUoKXt0LmNhbGwodGhpcyxkb2N1bWVudC5kb2N1bWVudEVsZW1lbnQsInJvb3QiKSx0aGlzLm5vZGUuc2V0QXR0cmlidXRlKHcuYXR0cigianMiKSwhMCksdGhpcy5saXN0ZW4oKX1yZXR1cm4gdCYmKGUuX19wcm90b19fPXQpLGUucHJvdG90eXBlPU9iamVjdC5jcmVhdGUodCYmdC5wcm90b3R5cGUpLGUucHJvdG90eXBlLmNvbnN0cnVjdG9yPWUsZS5wcm90b3R5cGUubGlzdGVuPWZ1bmN0aW9uKCl7ZG9jdW1lbnQuZG9jdW1lbnRFbGVtZW50LmFkZEV2ZW50TGlzdGVuZXIoImNsaWNrIix0aGlzLmNsaWNrLmJpbmQodGhpcykse2NhcHR1cmU6ITB9KSxkb2N1bWVudC5kb2N1bWVudEVsZW1lbnQuYWRkRXZlbnRMaXN0ZW5lcigia2V5ZG93biIsdGhpcy5rZXlkb3duLmJpbmQodGhpcykse2NhcHR1cmU6ITB9KSxkb2N1bWVudC5kb2N1bWVudEVsZW1lbnQuYWRkRXZlbnRMaXN0ZW5lcigia2V5dXAiLHRoaXMua2V5dXAuYmluZCh0aGlzKSx7Y2FwdHVyZTohMH0pfSxlLnByb3RvdHlwZS5jbGljaz1mdW5jdGlvbih0KXt0aGlzLmVtaXQoQy5DTElDSyx0LnRhcmdldCl9LGUucHJvdG90eXBlLmtleWRvd249ZnVuY3Rpb24odCl7dGhpcy5lbWl0KEMuS0VZRE9XTixMKHQua2V5Q29kZSkpfSxlLnByb3RvdHlwZS5rZXl1cD1mdW5jdGlvbih0KXt0aGlzLmVtaXQoQy5LRVlVUCxMKHQua2V5Q29kZSkpfSxlfShBKSxEPWZ1bmN0aW9uKHQpe2Z1bmN0aW9uIGUoKXt0LmNhbGwodGhpcywic3RhZ2UiKSx0aGlzLnJvb3Q9bmV3IE0sdC5wcm90b3R5cGUuYWRkLmNhbGwodGhpcyx0aGlzLnJvb3QpLHRoaXMub2JzZXJ2ZXI9bmV3IE11dGF0aW9uT2JzZXJ2ZXIodGhpcy5tdXRhdGUuYmluZCh0aGlzKSksdGhpcy5tb2RpZmljYXRpb25zPVtdLHRoaXMud2lsbE1vZGlmeT0hMSx0aGlzLm1vZGlmeWluZz10aGlzLm1vZGlmeS5iaW5kKHRoaXMpfXJldHVybiB0JiYoZS5fX3Byb3RvX189dCksZS5wcm90b3R5cGU9T2JqZWN0LmNyZWF0ZSh0JiZ0LnByb3RvdHlwZSksZS5wcm90b3R5cGUuY29uc3RydWN0b3I9ZSxlLnByb3RvdHlwZS5oYXNFbGVtZW50PWZ1bmN0aW9uKHQpe2Zvcih2YXIgZT0wLHI9dGhpcy5jb2xsZWN0aW9uO2U8ci5sZW5ndGg7ZSs9MSl7aWYocltlXS5ub2RlPT09dClyZXR1cm4hMH1yZXR1cm4hMX0sZS5wcm90b3R5cGUuZ2V0RWxlbWVudD1mdW5jdGlvbih0KXtmb3IodmFyIGU9MCxyPXRoaXMuY29sbGVjdGlvbjtlPHIubGVuZ3RoO2UrPTEpe3ZhciBuPXJbZV07aWYobi5ub2RlPT09dClyZXR1cm4gbn12YXIgaT1uZXcgQSh0KTtyZXR1cm4gdGhpcy5hZGQoaSksaC5kZWJ1ZygiYWRkIGVsZW1lbnQgWyIraS5pZCsiXSAiK2kuaHRtbCksaX0sZS5wcm90b3R5cGUuZ2V0UHJveHk9ZnVuY3Rpb24odCl7cmV0dXJuIHRoaXMuaGFzRWxlbWVudCh0KT90aGlzLmdldEVsZW1lbnQodCkucHJveHk6bnVsbH0sZS5wcm90b3R5cGUuYWRkPWZ1bmN0aW9uKGUpe3QucHJvdG90eXBlLmFkZC5jYWxsKHRoaXMsZSksdGhpcy5wdXQoZSx0aGlzLnJvb3QpfSxlLnByb3RvdHlwZS5wdXQ9ZnVuY3Rpb24odCxlKXtmb3IodmFyIHI9MCxuPWUuY2hpbGRyZW4ubGVuZ3RoLTE7bj4tMTtuLS0pe3ZhciBpPWUuY2hpbGRyZW5bbl0sbz10Lm5vZGUuY29tcGFyZURvY3VtZW50UG9zaXRpb24oaS5ub2RlKTtpZihvJk5vZGUuRE9DVU1FTlRfUE9TSVRJT05fQ09OVEFJTlMpcmV0dXJuIHZvaWQgdGhpcy5wdXQodCxpKTtpZihvJk5vZGUuRE9DVU1FTlRfUE9TSVRJT05fQ09OVEFJTkVEX0JZKWUucmVtb3ZlQ2hpbGQoaSksdC5hZGRDaGlsZChpLDApO2Vsc2UgaWYobyZOb2RlLkRPQ1VNRU5UX1BPU0lUSU9OX1BSRUNFRElORyl7cj1uKzE7YnJlYWt9fWUuYWRkQ2hpbGQodCxyKX0sZS5wcm90b3R5cGUuYWN0aXZhdGU9ZnVuY3Rpb24oKXt0aGlzLm9ic2VydmVyLm9ic2VydmUoZG9jdW1lbnQuZG9jdW1lbnRFbGVtZW50LHtjaGlsZExpc3Q6ITAsc3VidHJlZTohMCxhdHRyaWJ1dGVzOiEwfSl9LGUucHJvdG90eXBlLmRlYWN0aXZhdGU9ZnVuY3Rpb24oKXt0aGlzLm9ic2VydmVyLmRpc2Nvbm5lY3QoKX0sZS5wcm90b3R5cGUubXV0YXRlPWZ1bmN0aW9uKHQpe3ZhciBlPXRoaXMscj1bXTt0LmZvckVhY2goKGZ1bmN0aW9uKHQpe3N3aXRjaCh0LnR5cGUpe2Nhc2UiY2hpbGRMaXN0Ijp0LnJlbW92ZWROb2Rlcy5mb3JFYWNoKChmdW5jdGlvbih0KXtyZXR1cm4gZS5kaXNwb3NlKHQpfSkpLHQuYWRkZWROb2Rlcy5mb3JFYWNoKChmdW5jdGlvbih0KXtyZXR1cm4gZS5wYXJzZSh0KX0pKTticmVhaztjYXNlImF0dHJpYnV0ZXMiOmlmKGUuaGFzRWxlbWVudCh0LnRhcmdldCkpe3ZhciBuPWUuZ2V0RWxlbWVudCh0LnRhcmdldCk7bi5wcmVwYXJlKHQuYXR0cmlidXRlTmFtZSksLTE9PT1yLmluZGV4T2YobikmJnIucHVzaChuKTtmb3IodmFyIGk9MCxvPW4uZGVzY2VuZGFudHM7aTxvLmxlbmd0aDtpKz0xKXt2YXIgcz1vW2ldOy0xPT09ci5pbmRleE9mKHMpJiZyLnB1c2gocyl9fS0xPT09ZS5tb2RpZmljYXRpb25zLmluZGV4T2YodC50YXJnZXQpJiZlLm1vZGlmaWNhdGlvbnMucHVzaCh0LnRhcmdldCl9fSkpLHIuZm9yRWFjaCgoZnVuY3Rpb24odCl7cmV0dXJuIHQuZXhhbWluZSgpfSkpLHRoaXMubW9kaWZpY2F0aW9ucy5sZW5ndGgmJiF0aGlzLndpbGxNb2RpZnkmJih0aGlzLndpbGxNb2RpZnk9ITAsd2luZG93LnJlcXVlc3RBbmltYXRpb25GcmFtZSh0aGlzLm1vZGlmeWluZykpfSxlLnByb3RvdHlwZS5tb2RpZnk9ZnVuY3Rpb24oKXt0aGlzLndpbGxNb2RpZnk9ITE7dmFyIHQ9dGhpcy5tb2RpZmljYXRpb25zLnNsaWNlKCk7dGhpcy5tb2RpZmljYXRpb25zLmxlbmd0aD0wO2Zvcih2YXIgZT0wLHI9dDtlPHIubGVuZ3RoO2UrPTEpe3ZhciBuPXJbZV07ZG9jdW1lbnQuZG9jdW1lbnRFbGVtZW50LmNvbnRhaW5zKG4pJiZ0aGlzLnBhcnNlKG4pfX0sZS5wcm90b3R5cGUuZGlzcG9zZT1mdW5jdGlvbih0KXt2YXIgZT1bXTt0aGlzLmZvckVhY2goKGZ1bmN0aW9uKHIpe3QuY29udGFpbnMoci5ub2RlKSYmZS5wdXNoKHIpfSkpO2Zvcih2YXIgcj0wLG49ZTtyPG4ubGVuZ3RoO3IrPTEpe3ZhciBpPW5bcl07aS5kaXNwb3NlKCksdGhpcy5yZW1vdmUoaSl9fSxlLnByb3RvdHlwZS5wYXJzZT1mdW5jdGlvbih0LGUsbil7Zm9yKHZhciBpPVtdLG89MCxzPWU/W2VdOnIuZ2V0TW9kdWxlKCJyZWdpc3RlciIpLmNvbGxlY3Rpb247bzxzLmxlbmd0aDtvKz0xKWZvcih2YXIgYT1zW29dLGM9MCxsPWEucGFyc2UodCxuKTtjPGwubGVuZ3RoO2MrPTEpe3ZhciB1PWxbY10scD10aGlzLmdldEVsZW1lbnQodSk7cC5wcm9qZWN0KGEpLC0xPT09aS5pbmRleE9mKHApJiZpLnB1c2gocCl9Zm9yKHZhciBoPTAsZj1pO2g8Zi5sZW5ndGg7aCs9MSl7ZltoXS5wb3B1bGF0ZSgpfX0sZX0oXykseD1mdW5jdGlvbih0KXtmdW5jdGlvbiBlKCl7dC5jYWxsKHRoaXMsInJlbmRlciIpLHRoaXMucmVuZGVyaW5nPXRoaXMucmVuZGVyLmJpbmQodGhpcyksdGhpcy5uZXh0cz1uZXcgdn1yZXR1cm4gdCYmKGUuX19wcm90b19fPXQpLGUucHJvdG90eXBlPU9iamVjdC5jcmVhdGUodCYmdC5wcm90b3R5cGUpLGUucHJvdG90eXBlLmNvbnN0cnVjdG9yPWUsZS5wcm90b3R5cGUuYWN0aXZhdGU9ZnVuY3Rpb24oKXt3aW5kb3cucmVxdWVzdEFuaW1hdGlvbkZyYW1lKHRoaXMucmVuZGVyaW5nKX0sZS5wcm90b3R5cGUucmVxdWVzdD1mdW5jdGlvbih0KXt0aGlzLm5leHRzLmFkZCh0KX0sZS5wcm90b3R5cGUucmVuZGVyPWZ1bmN0aW9uKCl7aWYoci5pc0FjdGl2ZSYmKHdpbmRvdy5yZXF1ZXN0QW5pbWF0aW9uRnJhbWUodGhpcy5yZW5kZXJpbmcpLHRoaXMuZm9yRWFjaCgoZnVuY3Rpb24odCl7cmV0dXJuIHQucmVuZGVyKCl9KSksdGhpcy5uZXh0cy5sZW5ndGgpKXt2YXIgdD10aGlzLm5leHRzLmNsb25lKCk7dGhpcy5uZXh0cy5jbGVhcigpLHQuZm9yRWFjaCgoZnVuY3Rpb24odCl7cmV0dXJuIHQubmV4dCgpfSkpfX0sZX0oXyksUj1mdW5jdGlvbih0KXtmdW5jdGlvbiBlKCl7dC5jYWxsKHRoaXMsInJlc2l6ZSIpLHRoaXMucmVxdWlyZVJlc2l6ZT0hMSx0aGlzLnJlc2l6aW5nPXRoaXMucmVzaXplLmJpbmQodGhpcyk7dmFyIGU9dGhpcy5yZXF1ZXN0LmJpbmQodGhpcyk7ZG9jdW1lbnQuZm9udHMmJmRvY3VtZW50LmZvbnRzLnJlYWR5LnRoZW4oZSksd2luZG93LmFkZEV2ZW50TGlzdGVuZXIoInJlc2l6ZSIsZSksd2luZG93LmFkZEV2ZW50TGlzdGVuZXIoIm9yaWVudGF0aW9uY2hhbmdlIixlKX1yZXR1cm4gdCYmKGUuX19wcm90b19fPXQpLGUucHJvdG90eXBlPU9iamVjdC5jcmVhdGUodCYmdC5wcm90b3R5cGUpLGUucHJvdG90eXBlLmNvbnN0cnVjdG9yPWUsZS5wcm90b3R5cGUuYWN0aXZhdGU9ZnVuY3Rpb24oKXt0aGlzLnJlcXVlc3QoKX0sZS5wcm90b3R5cGUucmVxdWVzdD1mdW5jdGlvbigpe3RoaXMucmVxdWlyZVJlc2l6ZXx8KHRoaXMucmVxdWlyZVJlc2l6ZT0hMCx3aW5kb3cucmVxdWVzdEFuaW1hdGlvbkZyYW1lKHRoaXMucmVzaXppbmcpKX0sZS5wcm90b3R5cGUucmVzaXplPWZ1bmN0aW9uKCl7dGhpcy5yZXF1aXJlUmVzaXplJiYodGhpcy5mb3JFYWNoKChmdW5jdGlvbih0KXtyZXR1cm4gdC5yZXNpemUoKX0pKSx0aGlzLnJlcXVpcmVSZXNpemU9ITEpfSxlfShfKSxrPWZ1bmN0aW9uKHQpe2Z1bmN0aW9uIGUoKXt0LmNhbGwodGhpcywibG9jayIpLHRoaXMuX2lzTG9ja2VkPSExLHRoaXMuX3Njcm9sbFk9MCx0aGlzLm9uUG9wdWxhdGU9dGhpcy5sb2NrLmJpbmQodGhpcyksdGhpcy5vbkVtcHR5PXRoaXMudW5sb2NrLmJpbmQodGhpcyl9dCYmKGUuX19wcm90b19fPXQpLGUucHJvdG90eXBlPU9iamVjdC5jcmVhdGUodCYmdC5wcm90b3R5cGUpLGUucHJvdG90eXBlLmNvbnN0cnVjdG9yPWU7dmFyIHI9e2lzTG9ja2VkOntjb25maWd1cmFibGU6ITB9fTtyZXR1cm4gci5pc0xvY2tlZC5nZXQ9ZnVuY3Rpb24oKXtyZXR1cm4gdGhpcy5faXNMb2NrZWR9LGUucHJvdG90eXBlLmxvY2s9ZnVuY3Rpb24oKXtpZighdGhpcy5faXNMb2NrZWQpe3RoaXMuX2lzTG9ja2VkPSEwLHRoaXMuX3Njcm9sbFk9d2luZG93LnNjcm9sbFk7dmFyIHQ9d2luZG93LmlubmVyV2lkdGgtZG9jdW1lbnQuZG9jdW1lbnRFbGVtZW50LmNsaWVudFdpZHRoO2RvY3VtZW50LmRvY3VtZW50RWxlbWVudC5zZXRBdHRyaWJ1dGUody5hdHRyKCJzY3JvbGxpbmciKSwiZmFsc2UiKSxkb2N1bWVudC5ib2R5LnN0eWxlLnRvcD0tdGhpcy5fc2Nyb2xsWSsicHgiLHRoaXMuYmVoYXZpb3I9Z2V0Q29tcHV0ZWRTdHlsZShkb2N1bWVudC5kb2N1bWVudEVsZW1lbnQpLmdldFByb3BlcnR5VmFsdWUoInNjcm9sbC1iZWhhdmlvciIpLCJzbW9vdGgiPT09dGhpcy5iZWhhdmlvciYmKGRvY3VtZW50LmRvY3VtZW50RWxlbWVudC5zdHlsZS5zY3JvbGxCZWhhdmlvcj0iYXV0byIpLHQ+MCYmZG9jdW1lbnQuZG9jdW1lbnRFbGVtZW50LnN0eWxlLnNldFByb3BlcnR5KCItLXNjcm9sbGJhci13aWR0aCIsdCsicHgiKX19LGUucHJvdG90eXBlLnVubG9jaz1mdW5jdGlvbigpe3RoaXMuX2lzTG9ja2VkJiYodGhpcy5faXNMb2NrZWQ9ITEsZG9jdW1lbnQuZG9jdW1lbnRFbGVtZW50LnJlbW92ZUF0dHJpYnV0ZSh3LmF0dHIoInNjcm9sbGluZyIpKSxkb2N1bWVudC5ib2R5LnN0eWxlLnRvcD0iIix3aW5kb3cuc2Nyb2xsVG8oMCx0aGlzLl9zY3JvbGxZKSwic21vb3RoIj09PXRoaXMuYmVoYXZpb3ImJmRvY3VtZW50LmRvY3VtZW50RWxlbWVudC5zdHlsZS5yZW1vdmVQcm9wZXJ0eSgic2Nyb2xsLWJlaGF2aW9yIiksZG9jdW1lbnQuZG9jdW1lbnRFbGVtZW50LnN0eWxlLnJlbW92ZVByb3BlcnR5KCItLXNjcm9sbGJhci13aWR0aCIpKX0sZS5wcm90b3R5cGUubW92ZT1mdW5jdGlvbih0KXt0aGlzLl9pc0xvY2tlZD8odGhpcy5fc2Nyb2xsWSs9dCxkb2N1bWVudC5ib2R5LnN0eWxlLnRvcD0tdGhpcy5fc2Nyb2xsWSsicHgiKTp3aW5kb3cuc2Nyb2xsVG8oMCx3aW5kb3cuc2Nyb2xsWSt0KX0sT2JqZWN0LmRlZmluZVByb3BlcnRpZXMoZS5wcm90b3R5cGUsciksZX0oXyksSD1mdW5jdGlvbih0KXtmdW5jdGlvbiBlKCl7dC5jYWxsKHRoaXMsImxvYWQiKSx0aGlzLmxvYWRpbmc9dGhpcy5sb2FkLmJpbmQodGhpcyl9cmV0dXJuIHQmJihlLl9fcHJvdG9fXz10KSxlLnByb3RvdHlwZT1PYmplY3QuY3JlYXRlKHQmJnQucHJvdG90eXBlKSxlLnByb3RvdHlwZS5jb25zdHJ1Y3Rvcj1lLGUucHJvdG90eXBlLmFjdGl2YXRlPWZ1bmN0aW9uKCl7d2luZG93LmFkZEV2ZW50TGlzdGVuZXIoImxvYWQiLHRoaXMubG9hZGluZyl9LGUucHJvdG90eXBlLmxvYWQ9ZnVuY3Rpb24oKXt0aGlzLmZvckVhY2goKGZ1bmN0aW9uKHQpe3JldHVybiB0LmxvYWQoKX0pKX0sZX0oXyksRz1bIk1hcmlhbm5lIiwiU3BlY3RyYWwiXSwkPWZ1bmN0aW9uKHQpe2Z1bmN0aW9uIGUoKXt0LmNhbGwodGhpcywiZm9udC1zd2FwIiksdGhpcy5zd2FwcGluZz10aGlzLnN3YXAuYmluZCh0aGlzKX1yZXR1cm4gdCYmKGUuX19wcm90b19fPXQpLGUucHJvdG90eXBlPU9iamVjdC5jcmVhdGUodCYmdC5wcm90b3R5cGUpLGUucHJvdG90eXBlLmNvbnN0cnVjdG9yPWUsZS5wcm90b3R5cGUuYWN0aXZhdGU9ZnVuY3Rpb24oKXtkb2N1bWVudC5mb250cyYmZG9jdW1lbnQuZm9udHMuYWRkRXZlbnRMaXN0ZW5lcigibG9hZGluZ2RvbmUiLHRoaXMuc3dhcHBpbmcpfSxlLnByb3RvdHlwZS5zd2FwPWZ1bmN0aW9uKCl7dmFyIHQ9Ry5maWx0ZXIoKGZ1bmN0aW9uKHQpe3JldHVybiBkb2N1bWVudC5mb250cy5jaGVjaygiMTZweCAiK3QpfSkpO3RoaXMuZm9yRWFjaCgoZnVuY3Rpb24oZSl7cmV0dXJuIGUuc3dhcEZvbnQodCl9KSl9LGV9KF8pLEY9ZnVuY3Rpb24odCl7ZnVuY3Rpb24gZSgpe3QuY2FsbCh0aGlzLCJtb3VzZS1tb3ZlIiksdGhpcy5yZXF1aXJlTW92ZT0hMSx0aGlzLl9pc01vdmluZz0hMSx0aGlzLm1vdmluZz10aGlzLm1vdmUuYmluZCh0aGlzKSx0aGlzLnJlcXVlc3Rpbmc9dGhpcy5yZXF1ZXN0LmJpbmQodGhpcyksdGhpcy5vblBvcHVsYXRlPXRoaXMubGlzdGVuLmJpbmQodGhpcyksdGhpcy5vbkVtcHR5PXRoaXMudW5saXN0ZW4uYmluZCh0aGlzKX1yZXR1cm4gdCYmKGUuX19wcm90b19fPXQpLGUucHJvdG90eXBlPU9iamVjdC5jcmVhdGUodCYmdC5wcm90b3R5cGUpLGUucHJvdG90eXBlLmNvbnN0cnVjdG9yPWUsZS5wcm90b3R5cGUubGlzdGVuPWZ1bmN0aW9uKCl7dGhpcy5faXNNb3Zpbmd8fCh0aGlzLl9pc01vdmluZz0hMCx0aGlzLnJlcXVpcmVNb3ZlPSExLGRvY3VtZW50LmRvY3VtZW50RWxlbWVudC5hZGRFdmVudExpc3RlbmVyKCJtb3VzZW1vdmUiLHRoaXMucmVxdWVzdGluZykpfSxlLnByb3RvdHlwZS51bmxpc3Rlbj1mdW5jdGlvbigpe3RoaXMuX2lzTW92aW5nJiYodGhpcy5faXNNb3Zpbmc9ITEsdGhpcy5yZXF1aXJlTW92ZT0hMSxkb2N1bWVudC5kb2N1bWVudEVsZW1lbnQucmVtb3ZlRXZlbnRMaXN0ZW5lcigibW91c2Vtb3ZlIix0aGlzLnJlcXVlc3RpbmcpKX0sZS5wcm90b3R5cGUucmVxdWVzdD1mdW5jdGlvbih0KXt0aGlzLl9pc01vdmluZyYmKHRoaXMucG9pbnQ9e3g6dC5jbGllbnRYLHk6dC5jbGllbnRZfSx0aGlzLnJlcXVpcmVNb3ZlfHwodGhpcy5yZXF1aXJlTW92ZT0hMCx3aW5kb3cucmVxdWVzdEFuaW1hdGlvbkZyYW1lKHRoaXMubW92aW5nKSkpfSxlLnByb3RvdHlwZS5tb3ZlPWZ1bmN0aW9uKCl7dmFyIHQ9dGhpczt0aGlzLnJlcXVpcmVNb3ZlJiYodGhpcy5mb3JFYWNoKChmdW5jdGlvbihlKXtyZXR1cm4gZS5tb3VzZU1vdmUodC5wb2ludCl9KSksdGhpcy5yZXF1aXJlTW92ZT0hMSl9LGV9KF8pLFU9ZnVuY3Rpb24odCl7ZnVuY3Rpb24gZSgpe3QuY2FsbCh0aGlzLCJoYXNoIiksdGhpcy5oYW5kbGluZz10aGlzLmhhbmRsZS5iaW5kKHRoaXMpLHRoaXMuZ2V0TG9jYXRpb25IYXNoKCl9dCYmKGUuX19wcm90b19fPXQpLGUucHJvdG90eXBlPU9iamVjdC5jcmVhdGUodCYmdC5wcm90b3R5cGUpLGUucHJvdG90eXBlLmNvbnN0cnVjdG9yPWU7dmFyIHI9e2hhc2g6e2NvbmZpZ3VyYWJsZTohMH19O3JldHVybiBlLnByb3RvdHlwZS5hY3RpdmF0ZT1mdW5jdGlvbigpe3dpbmRvdy5hZGRFdmVudExpc3RlbmVyKCJoYXNoY2hhbmdlIix0aGlzLmhhbmRsaW5nKX0sZS5wcm90b3R5cGUuZGVhY3RpdmF0ZT1mdW5jdGlvbigpe3dpbmRvdy5yZW1vdmVFdmVudExpc3RlbmVyKCJoYXNoY2hhbmdlIix0aGlzLmhhbmRsaW5nKX0sZS5wcm90b3R5cGUuX3Nhbml0aXplPWZ1bmN0aW9uKHQpe3JldHVybiIjIj09PXQuY2hhckF0KDApP3Quc3Vic3RyaW5nKDEpOnR9LHIuaGFzaC5zZXQ9ZnVuY3Rpb24odCl7dmFyIGU9dGhpcy5fc2FuaXRpemUodCk7dGhpcy5faGFzaCE9PWUmJih3aW5kb3cubG9jYXRpb24uaGFzaD1lKX0sci5oYXNoLmdldD1mdW5jdGlvbigpe3JldHVybiB0aGlzLl9oYXNofSxlLnByb3RvdHlwZS5nZXRMb2NhdGlvbkhhc2g9ZnVuY3Rpb24oKXt2YXIgdD13aW5kb3cubG9jYXRpb24uaGFzaDt0aGlzLl9oYXNoPXRoaXMuX3Nhbml0aXplKHQpfSxlLnByb3RvdHlwZS5oYW5kbGU9ZnVuY3Rpb24odCl7dmFyIGU9dGhpczt0aGlzLmdldExvY2F0aW9uSGFzaCgpLHRoaXMuZm9yRWFjaCgoZnVuY3Rpb24ocil7cmV0dXJuIHIuaGFuZGxlSGFzaChlLl9oYXNoLHQpfSkpfSxPYmplY3QuZGVmaW5lUHJvcGVydGllcyhlLnByb3RvdHlwZSxyKSxlfShfKSx6PWZ1bmN0aW9uKCl7ci5jcmVhdGUoVCksci5jcmVhdGUoRCksci5jcmVhdGUoeCksci5jcmVhdGUoUiksci5jcmVhdGUoayksci5jcmVhdGUoSCksci5jcmVhdGUoJCksci5jcmVhdGUoRiksci5jcmVhdGUoVSk7dmFyIHQ9ci5nZXRNb2R1bGUoInJlZ2lzdGVyIik7dGhpcy5yZWdpc3Rlcj10LnJlZ2lzdGVyLmJpbmQodCl9LEI9e2lzQWN0aXZlOntjb25maWd1cmFibGU6ITB9fTtCLmlzQWN0aXZlLmdldD1mdW5jdGlvbigpe3JldHVybiByLmlzQWN0aXZlfSx6LnByb3RvdHlwZS5zdGFydD1mdW5jdGlvbigpe2guZGVidWcoIlNUQVJUIiksci5pc0FjdGl2ZT0hMH0sei5wcm90b3R5cGUuc3RvcD1mdW5jdGlvbigpe2guZGVidWcoIlNUT1AiKSxyLmlzQWN0aXZlPSExfSxPYmplY3QuZGVmaW5lUHJvcGVydGllcyh6LnByb3RvdHlwZSxCKTt2YXIgVz1uZXcgeixxPWZ1bmN0aW9uKCl7fTtxLnByb3RvdHlwZS5nZXRDb2xvcj1mdW5jdGlvbih0LGUscixuKXt2b2lkIDA9PT1uJiYobj17fSk7dmFyIGk9Ii0tIit0KyItIitlKyItIityK0sobik7cmV0dXJuIGdldENvbXB1dGVkU3R5bGUoZG9jdW1lbnQuZG9jdW1lbnRFbGVtZW50KS5nZXRQcm9wZXJ0eVZhbHVlKGkpLnRyaW0oKXx8bnVsbH07dmFyIEs9ZnVuY3Rpb24odCl7c3dpdGNoKCEwKXtjYXNlIHQuaG92ZXI6cmV0dXJuIi1ob3ZlciI7Y2FzZSB0LmFjdGl2ZTpyZXR1cm4iLWFjdGl2ZSI7ZGVmYXVsdDpyZXR1cm4iIn19LFY9bmV3IHEsWT1mdW5jdGlvbih0KXtyZXR1cm4iLiI9PT10LmNoYXJBdCgwKT90LnN1YnN0cigxKTp0fSxYPWZ1bmN0aW9uKHQpe3N3aXRjaCghMCl7Y2FzZSF0LmNsYXNzTmFtZTpyZXR1cm5bXTtjYXNlInN0cmluZyI9PXR5cGVvZiB0LmNsYXNzTmFtZTpyZXR1cm4gdC5jbGFzc05hbWUuc3BsaXQoIiAiKTtjYXNlInN0cmluZyI9PXR5cGVvZiB0LmNsYXNzTmFtZS5iYXNlVmFsOnJldHVybiB0LmNsYXNzTmFtZS5iYXNlVmFsLnNwbGl0KCIgIil9cmV0dXJuW119LFE9ZnVuY3Rpb24odCxlLHIpe2U9WShlKTt2YXIgbj1YKHQpLGk9bi5pbmRleE9mKGUpOyEwPT09cj9pPi0xJiZuLnNwbGljZShpLDEpOi0xPT09aSYmbi5wdXNoKGUpLHQuY2xhc3NOYW1lPW4uam9pbigiICIpfSxKPWZ1bmN0aW9uKHQsZSl7cmV0dXJuIFEodCxlKX0sWj1mdW5jdGlvbih0LGUpe3JldHVybiBRKHQsZSwhMCl9LHR0PWZ1bmN0aW9uKHQsZSl7cmV0dXJuIFgodCkuaW5kZXhPZihZKGUpKT4tMX0sZXQ9WydbdGFiaW5kZXhdOm5vdChbdGFiaW5kZXg9Ii0xIl0pJywiYVtocmVmXSIsImJ1dHRvbjpub3QoW2Rpc2FibGVkXSkiLCJpbnB1dDpub3QoW2Rpc2FibGVkXSkiLCJzZWxlY3Q6bm90KFtkaXNhYmxlZF0pIiwidGV4dGFyZWE6bm90KFtkaXNhYmxlZF0pIiwiYXVkaW9bY29udHJvbHNdIiwidmlkZW9bY29udHJvbHNdIiwnW2NvbnRlbnRlZGl0YWJsZV06bm90KFtjb250ZW50ZWRpdGFibGU9ImZhbHNlIl0pJywiZGV0YWlscz5zdW1tYXJ5OmZpcnN0LW9mLXR5cGUiLCJkZXRhaWxzIiwiaWZyYW1lIl0uam9pbigpLHJ0PWZ1bmN0aW9uKHQpe3JldHVybiB0LnF1ZXJ5U2VsZWN0b3JBbGwoZXQpfSxudD0wLGl0PWZ1bmN0aW9uKHQpe2lmKCFkb2N1bWVudC5nZXRFbGVtZW50QnlJZCh0KSlyZXR1cm4gdDtmb3IodmFyIGU9ITAscj10O2U7KXQ9cisiLSIrICsrbnQsZT1kb2N1bWVudC5nZXRFbGVtZW50QnlJZCh0KTtyZXR1cm4gdH0sb3Q9e2FkZENsYXNzOkosaGFzQ2xhc3M6dHQscmVtb3ZlQ2xhc3M6WixxdWVyeVBhcmVudFNlbGVjdG9yOkUscXVlcnlTZWxlY3RvckFsbEFycmF5OlMscXVlcnlBY3Rpb25zOnJ0LHVuaXF1ZUlkOml0fSxzdD1mdW5jdGlvbih0LGUpe3ZvaWQgMD09PXQmJih0PTApLHZvaWQgMD09PWUmJihlPTApLHRoaXMuX3dpZHRoPXQsdGhpcy5faGVpZ2h0PWUsdGhpcy5fY29udGVudD0iIn0sYXQ9e3dpZHRoOntjb25maWd1cmFibGU6ITB9LGhlaWdodDp7Y29uZmlndXJhYmxlOiEwfSxjb250ZW50Ontjb25maWd1cmFibGU6ITB9fTthdC53aWR0aC5nZXQ9ZnVuY3Rpb24oKXtyZXR1cm4gdGhpcy5fd2lkdGh9LGF0LndpZHRoLnNldD1mdW5jdGlvbih0KXt0aGlzLl93aWR0aD10fSxhdC5oZWlnaHQuZ2V0PWZ1bmN0aW9uKCl7cmV0dXJuIHRoaXMuX2hlaWdodH0sYXQuaGVpZ2h0LnNldD1mdW5jdGlvbih0KXt0aGlzLl9oZWlnaHQ9dH0sYXQuY29udGVudC5nZXQ9ZnVuY3Rpb24oKXtyZXR1cm4gdGhpcy5fY29udGVudH0sYXQuY29udGVudC5zZXQ9ZnVuY3Rpb24odCl7dGhpcy5fY29udGVudD10fSxzdC5wcm90b3R5cGUuZ2V0RGF0YVVSST1mdW5jdGlvbih0KXt2b2lkIDA9PT10JiYodD0hMSk7dmFyIGU9IjxzdmcgeG1sbnM9J2h0dHA6Ly93d3cudzMub3JnLzIwMDAvc3ZnJyB2aWV3Ym94PScwIDAgIit0aGlzLl93aWR0aCsiICIrdGhpcy5faGVpZ2h0KyInIHdpZHRoPSciK3RoaXMuX3dpZHRoKyJweCcgaGVpZ2h0PSciK3RoaXMuX2hlaWdodCsicHgnPiIrdGhpcy5fY29udGVudCsiPC9zdmc+IjtyZXR1cm4gZT1lLnJlcGxhY2UoLyMvZ2ksIiUyMyIpLHQmJihlPShlPShlPShlPShlPWUucmVwbGFjZSgvPC9naSwiJTNDIikpLnJlcGxhY2UoLz4vZ2ksIiUzRSIpKS5yZXBsYWNlKC8iL2dpLCInIikpLnJlcGxhY2UoL3svZ2ksIiU3QiIpKS5yZXBsYWNlKC99L2dpLCIlN0QiKSksImRhdGE6aW1hZ2Uvc3ZnK3htbDtjaGFyc2V0PXV0ZjgsIitlfSxPYmplY3QuZGVmaW5lUHJvcGVydGllcyhzdC5wcm90b3R5cGUsYXQpO3ZhciBjdD17RGF0YVVSSVNWRzpzdH0sbHQ9e3N1cHBvcnRMb2NhbFN0b3JhZ2U6ZnVuY3Rpb24oKXt0cnl7cmV0dXJuImxvY2FsU3RvcmFnZSJpbiB3aW5kb3cmJm51bGwhPT13aW5kb3cubG9jYWxTdG9yYWdlfWNhdGNoKHQpe3JldHVybiExfX0sc3VwcG9ydEFzcGVjdFJhdGlvOmZ1bmN0aW9uKCl7cmV0dXJuISF3aW5kb3cuQ1NTJiZDU1Muc3VwcG9ydHMoImFzcGVjdC1yYXRpbzogMTYgLyA5Iil9fSx1dD17VHJhbnNpdGlvblNlbGVjdG9yOntOT05FOncuc2VsZWN0b3IoInRyYW5zaXRpb24tbm9uZSIpfX0scHQ9ZnVuY3Rpb24odCl7Zm9yKHZhciBlPVtdLHI9YXJndW1lbnRzLmxlbmd0aC0xO3ItLSA+MDspZVtyXT1hcmd1bWVudHNbcisxXTtyZXR1cm4gZS5mb3JFYWNoKChmdW5jdGlvbihlKXt2YXIgcj1PYmplY3Qua2V5cyhlKS5yZWR1Y2UoKGZ1bmN0aW9uKHQscil7cmV0dXJuIHRbcl09T2JqZWN0LmdldE93blByb3BlcnR5RGVzY3JpcHRvcihlLHIpLHR9KSx7fSk7T2JqZWN0LmdldE93blByb3BlcnR5U3ltYm9scyhlKS5mb3JFYWNoKChmdW5jdGlvbih0KXt2YXIgbj1PYmplY3QuZ2V0T3duUHJvcGVydHlEZXNjcmlwdG9yKGUsdCk7bi5lbnVtZXJhYmxlJiYoclt0XT1uKX0pKSxPYmplY3QuZGVmaW5lUHJvcGVydGllcyh0LHIpfSkpLHR9LGh0PXtjb21wbGV0ZUFzc2lnbjpwdH0sZnQ9e30sZHQ9e307T2JqZWN0LmRlZmluZVByb3BlcnR5KGR0LCJpc0xlZ2FjeSIse2dldDpmdW5jdGlvbigpe3JldHVybiByLmlzTGVnYWN5fX0pLGR0LnNldExlZ2FjeT1mdW5jdGlvbigpe3IuaXNMZWdhY3k9ITB9LGZ0LmxlZ2FjeT1kdCxmdC5kb209b3QsZnQuaW1hZ2U9Y3QsZnQuc3VwcG9ydD1sdCxmdC5tb3Rpb249dXQsZnQucHJvcGVydHk9aHQsZnQubnM9dyxmdC5yZWdpc3Rlcj1XLnJlZ2lzdGVyLGZ0LnN0YXRlPXIsZnQucXVlcnk9ZnVuY3Rpb24odCl7aWYodCYmdC5zZWFyY2gpe3ZhciBlPW5ldyBVUkxTZWFyY2hQYXJhbXMod2luZG93LmxvY2F0aW9uLnNlYXJjaCkuZW50cmllcygpO3JldHVybiBPYmplY3QuZnJvbUVudHJpZXMoZSl9cmV0dXJuIG51bGx9KHdpbmRvdy5sb2NhdGlvbiksT2JqZWN0LmRlZmluZVByb3BlcnR5KGZ0LCJwcmV2ZW50TWFuaXB1bGF0aW9uIix7Z2V0OmZ1bmN0aW9uKCl7cmV0dXJuIGcucHJldmVudE1hbmlwdWxhdGlvbn19KSxPYmplY3QuZGVmaW5lUHJvcGVydHkoZnQsInN0YWdlIix7Z2V0OmZ1bmN0aW9uKCl7cmV0dXJuIHIuZ2V0TW9kdWxlKCJzdGFnZSIpfX0pO3ZhciB5dD1mdW5jdGlvbih0KXtyZXR1cm4gci5nZXRNb2R1bGUoInN0YWdlIikuZ2V0UHJveHkodCl9O3l0LnZlcnNpb249cyx5dC5wcmVmaXg9bix5dC5vcmdhbmlzYXRpb249byx5dC5Nb2Rlcz1kLE9iamVjdC5kZWZpbmVQcm9wZXJ0eSh5dCwibW9kZSIse3NldDpmdW5jdGlvbih0KXtnLm1vZGU9dH0sZ2V0OmZ1bmN0aW9uKCl7cmV0dXJuIGcubW9kZX19KSx5dC5pbnRlcm5hbHM9ZnQseXQudmVyc2lvbj1zLHl0LnN0YXJ0PVcuc3RhcnQseXQuc3RvcD1XLnN0b3AseXQuaW5zcGVjdG9yPWgseXQuY29sb3JzPVY7dmFyIGJ0PXdpbmRvd1tpXTt5dC5pbnRlcm5hbHMuY29uZmlndXJhdGlvbj1idCxnLmNvbmZpZ3VyZShidCx5dC5zdGFydCx5dC5pbnRlcm5hbHMucXVlcnkpLHdpbmRvd1tpXT15dDt2YXIgZ3Q9ZnVuY3Rpb24oKXt0aGlzLmVtaXNzaW9ucz17fX07Z3QucHJvdG90eXBlLmFkZD1mdW5jdGlvbih0LGUpe2lmKCJmdW5jdGlvbiIhPXR5cGVvZiBlKXRocm93IG5ldyBFcnJvcigiY2xvc3VyZSBtdXN0IGJlIGEgZnVuY3Rpb24iKTt0aGlzLmVtaXNzaW9uc1t0XXx8KHRoaXMuZW1pc3Npb25zW3RdPVtdKSx0aGlzLmVtaXNzaW9uc1t0XS5wdXNoKGUpfSxndC5wcm90b3R5cGUucmVtb3ZlPWZ1bmN0aW9uKHQsZSl7aWYodGhpcy5lbWlzc2lvbnNbdF0paWYoZSl7dmFyIHI9dGhpcy5lbWlzc2lvbnNbdF0uaW5kZXhPZihlKTtyPi0xJiZ0aGlzLmVtaXNzaW9uc1t0XS5zcGxpY2Uocil9ZWxzZSBkZWxldGUgdGhpcy5lbWlzc2lvbnNbdF19LGd0LnByb3RvdHlwZS5lbWl0PWZ1bmN0aW9uKHQsZSl7aWYoIXRoaXMuZW1pc3Npb25zW3RdKXJldHVybltdO2Zvcih2YXIgcj1bXSxuPTAsaT10aGlzLmVtaXNzaW9uc1t0XTtuPGkubGVuZ3RoO24rPTEpe3ZhciBvPWlbbl07byYmci5wdXNoKG8oZSkpfXJldHVybiByfSxndC5wcm90b3R5cGUuZGlzcG9zZT1mdW5jdGlvbigpe3RoaXMuZW1pc3Npb25zPW51bGx9O3ZhciB2dD1mdW5jdGlvbih0LGUpe3RoaXMuaWQ9dCx0aGlzLm1pbldpZHRoPWV9O3Z0LnByb3RvdHlwZS50ZXN0PWZ1bmN0aW9uKCl7cmV0dXJuIHdpbmRvdy5tYXRjaE1lZGlhKCIobWluLXdpZHRoOiAiK3RoaXMubWluV2lkdGgrImVtKSIpLm1hdGNoZXN9O3ZhciBtdD17WFM6bmV3IHZ0KCJ4cyIsMCksU006bmV3IHZ0KCJzbSIsMzYpLE1EOm5ldyB2dCgibWQiLDQ4KSxMRzpuZXcgdnQoImxnIiw2MiksWEw6bmV3IHZ0KCJ4bCIsNzgpfSxfdD1mdW5jdGlvbih0KXt2b2lkIDA9PT10JiYodD0hMCksdGhpcy5qc0F0dHJpYnV0ZT10LHRoaXMuX2lzUmVuZGVyaW5nPSExLHRoaXMuX2lzUmVzaXppbmc9ITEsdGhpcy5faXNTY3JvbGxMb2NrZWQ9ITEsdGhpcy5faXNMb2FkaW5nPSExLHRoaXMuX2lzU3dhcHBpbmdGb250PSExLHRoaXMuX2lzRW5hYmxlZD0hMCx0aGlzLl9pc0Rpc3Bvc2VkPSExLHRoaXMuX2xpc3RlbmVycz17fSx0aGlzLl9oYW5kbGluZ0NsaWNrPXRoaXMuaGFuZGxlQ2xpY2suYmluZCh0aGlzKSx0aGlzLl9oYXNoZXM9W10sdGhpcy5faGFzaD0iIix0aGlzLl9rZXlMaXN0ZW5lclR5cGVzPVtdLHRoaXMuX2tleXM9W10sdGhpcy5oYW5kbGluZ0tleT10aGlzLmhhbmRsZUtleS5iaW5kKHRoaXMpLHRoaXMuX2VtaXR0ZXI9bmV3IGd0LHRoaXMuX2FzY2VudD1uZXcgZ3QsdGhpcy5fZGVzY2VudD1uZXcgZ3QsdGhpcy5fcmVnaXN0cmF0aW9ucz1bXSx0aGlzLl9uZXh0cz1bXX0sd3Q9e3Byb3h5Ontjb25maWd1cmFibGU6ITB9LGhhc2g6e2NvbmZpZ3VyYWJsZTohMH0saXNFbmFibGVkOntjb25maWd1cmFibGU6ITB9LGlzUmVuZGVyaW5nOntjb25maWd1cmFibGU6ITB9LGlzUmVzaXppbmc6e2NvbmZpZ3VyYWJsZTohMH0saXNTY3JvbGxMb2NrZWQ6e2NvbmZpZ3VyYWJsZTohMH0saXNMb2FkaW5nOntjb25maWd1cmFibGU6ITB9LGlzU3dhcHBpbmdGb250Ontjb25maWd1cmFibGU6ITB9LGlzTW91c2VNb3Zpbmc6e2NvbmZpZ3VyYWJsZTohMH0saXNEaXNwb3NlZDp7Y29uZmlndXJhYmxlOiEwfSxzdHlsZTp7Y29uZmlndXJhYmxlOiEwfSxjbGFzc05hbWVzOntjb25maWd1cmFibGU6ITB9LGhhc0ZvY3VzOntjb25maWd1cmFibGU6ITB9LGlzTGVnYWN5Ontjb25maWd1cmFibGU6ITB9fSxTdD17aW5zdGFuY2VDbGFzc05hbWU6e2NvbmZpZ3VyYWJsZTohMH19O1N0Lmluc3RhbmNlQ2xhc3NOYW1lLmdldD1mdW5jdGlvbigpe3JldHVybiJJbnN0YW5jZSJ9LF90LnByb3RvdHlwZS5fY29uZmlnPWZ1bmN0aW9uKHQsZSl7dGhpcy5lbGVtZW50PXQsdGhpcy5yZWdpc3RyYXRpb249ZSx0aGlzLm5vZGU9dC5ub2RlLHRoaXMuaWQ9dC5ub2RlLmlkLHRoaXMuanNBdHRyaWJ1dGUmJnRoaXMuc2V0QXR0cmlidXRlKGUuYXR0cmlidXRlLCEwKSx0aGlzLmluaXQoKX0sX3QucHJvdG90eXBlLmluaXQ9ZnVuY3Rpb24oKXt9LHd0LnByb3h5LmdldD1mdW5jdGlvbigpe3ZhciB0PXRoaXM7cmV0dXJuIHB0KHtyZW5kZXI6ZnVuY3Rpb24oKXtyZXR1cm4gdC5yZW5kZXIoKX0scmVzaXplOmZ1bmN0aW9uKCl7cmV0dXJuIHQucmVzaXplKCl9fSx7Z2V0IG5vZGUoKXtyZXR1cm4gdGhpcy5ub2RlfSxnZXQgaXNFbmFibGVkKCl7cmV0dXJuIHQuaXNFbmFibGVkfSxzZXQgaXNFbmFibGVkKGUpe3QuaXNFbmFibGVkPWV9fSl9LF90LnByb3RvdHlwZS5sb2c9ZnVuY3Rpb24oKXtmb3IodmFyIHQ9W10sZT1hcmd1bWVudHMubGVuZ3RoO2UtLTspdFtlXT1hcmd1bWVudHNbZV07dC51bnNoaWZ0KHRoaXMucmVnaXN0cmF0aW9uLmluc3RhbmNlQ2xhc3NOYW1lKyIgIyIrdGhpcy5pZCsiIC0gIiksaC5sb2cuYXBwbHkoaCx0KX0sX3QucHJvdG90eXBlLmRlYnVnPWZ1bmN0aW9uKCl7Zm9yKHZhciB0PVtdLGU9YXJndW1lbnRzLmxlbmd0aDtlLS07KXRbZV09YXJndW1lbnRzW2VdO3QudW5zaGlmdCh0aGlzLnJlZ2lzdHJhdGlvbi5pbnN0YW5jZUNsYXNzTmFtZSsiICMiK3RoaXMuaWQrIiAtICIpLGguZGVidWcuYXBwbHkoaCx0KX0sX3QucHJvdG90eXBlLmluZm89ZnVuY3Rpb24oKXtmb3IodmFyIHQ9W10sZT1hcmd1bWVudHMubGVuZ3RoO2UtLTspdFtlXT1hcmd1bWVudHNbZV07dC51bnNoaWZ0KHRoaXMucmVnaXN0cmF0aW9uLmluc3RhbmNlQ2xhc3NOYW1lKyIgIyIrdGhpcy5pZCsiIC0gIiksaC5pbmZvLmFwcGx5KGgsdCl9LF90LnByb3RvdHlwZS53YXJuPWZ1bmN0aW9uKCl7Zm9yKHZhciB0PVtdLGU9YXJndW1lbnRzLmxlbmd0aDtlLS07KXRbZV09YXJndW1lbnRzW2VdO3QudW5zaGlmdCh0aGlzLnJlZ2lzdHJhdGlvbi5pbnN0YW5jZUNsYXNzTmFtZSsiICMiK3RoaXMuaWQrIiAtICIpLGgud2Fybi5hcHBseShoLHQpfSxfdC5wcm90b3R5cGUuZXJyb3I9ZnVuY3Rpb24oKXtmb3IodmFyIHQ9W10sZT1hcmd1bWVudHMubGVuZ3RoO2UtLTspdFtlXT1hcmd1bWVudHNbZV07dC51bnNoaWZ0KHRoaXMucmVnaXN0cmF0aW9uLmluc3RhbmNlQ2xhc3NOYW1lKyIgIyIrdGhpcy5pZCsiIC0gIiksaC5lcnJvci5hcHBseShoLHQpfSxfdC5wcm90b3R5cGUucmVnaXN0ZXI9ZnVuY3Rpb24odCxlKXt2YXIgbj1yLmdldE1vZHVsZSgicmVnaXN0ZXIiKS5yZWdpc3Rlcih0LGUsdGhpcyk7dGhpcy5fcmVnaXN0cmF0aW9ucy5wdXNoKG4pfSxfdC5wcm90b3R5cGUuZ2V0UmVnaXN0ZXJlZEluc3RhbmNlcz1mdW5jdGlvbih0KXtmb3IodmFyIGU9MCxyPXRoaXMuX3JlZ2lzdHJhdGlvbnM7ZTxyLmxlbmd0aDtlKz0xKXt2YXIgbj1yW2VdO2lmKG4uaGFzSW5zdGFuY2VDbGFzc05hbWUodCkpcmV0dXJuIG4uaW5zdGFuY2VzLmNvbGxlY3Rpb259cmV0dXJuW119LF90LnByb3RvdHlwZS5kaXNwYXRjaD1mdW5jdGlvbih0LGUscixuKXt2YXIgaT1uZXcgQ3VzdG9tRXZlbnQodCx7ZGV0YWlsOmUsYnViYmxlOiEwPT09cixjYW5jZWxhYmxlOiEwPT09bn0pO3RoaXMubm9kZS5kaXNwYXRjaEV2ZW50KGkpfSxfdC5wcm90b3R5cGUubGlzdGVuPWZ1bmN0aW9uKHQsZSxyKXt0aGlzLl9saXN0ZW5lcnNbdF18fCh0aGlzLl9saXN0ZW5lcnNbdF09W10pO3ZhciBuPXRoaXMuX2xpc3RlbmVyc1t0XSxpPW5ldyBPdCh0aGlzLm5vZGUsdCxlLHIpO24ucHVzaChpKSxpLmxpc3RlbigpfSxfdC5wcm90b3R5cGUudW5saXN0ZW49ZnVuY3Rpb24odCxlLHIpe3ZhciBuPXRoaXM7aWYodCl7dmFyIGk9dGhpcy5fbGlzdGVuZXJzW3RdO2lmKGkpaWYoZSl7dmFyIG89aS5maWx0ZXIoKGZ1bmN0aW9uKHQpe3JldHVybiB0LmNsb3N1cmU9PT1lJiZ0Lm1hdGNoT3B0aW9ucyhyKX0pKTtvLmZvckVhY2goKGZ1bmN0aW9uKHQpe3JldHVybiB0LnVubGlzdGVuKCl9KSksdGhpcy5fbGlzdGVuZXJzW3RdPWkuZmlsdGVyKChmdW5jdGlvbih0KXtyZXR1cm4tMT09PW8uaW5kZXhPZih0KX0pKX1lbHNlIGkuZm9yRWFjaCgoZnVuY3Rpb24oZSl7cmV0dXJuIG4udW5saXN0ZW4odCxlLmNsb3N1cmUpfSkpfWVsc2UgZm9yKHZhciBzIGluIHRoaXMuX2xpc3RlbmVycyl0aGlzLnVubGlzdGVuKHMpfSxfdC5wcm90b3R5cGUubGlzdGVuQ2xpY2s9ZnVuY3Rpb24odCl7dGhpcy5saXN0ZW4oImNsaWNrIix0aGlzLl9oYW5kbGluZ0NsaWNrLHQpfSxfdC5wcm90b3R5cGUudW5saXN0ZW5DbGljaz1mdW5jdGlvbih0KXt0aGlzLnVubGlzdGVuKCJjbGljayIsdGhpcy5faGFuZGxpbmdDbGljayx0KX0sX3QucHJvdG90eXBlLmhhbmRsZUNsaWNrPWZ1bmN0aW9uKHQpe30sd3QuaGFzaC5zZXQ9ZnVuY3Rpb24odCl7ci5nZXRNb2R1bGUoImhhc2giKS5oYXNoPXR9LHd0Lmhhc2guZ2V0PWZ1bmN0aW9uKCl7cmV0dXJuIHIuZ2V0TW9kdWxlKCJoYXNoIikuaGFzaH0sX3QucHJvdG90eXBlLmxpc3Rlbkhhc2g9ZnVuY3Rpb24odCxlKXtpZih0aGlzLl9oYXNoZXMpezA9PT10aGlzLl9oYXNoZXMubGVuZ3RoJiZyLmFkZCgiaGFzaCIsdGhpcyk7dmFyIG49bmV3IFR0KHQsZSk7dGhpcy5faGFzaGVzPXRoaXMuX2hhc2hlcy5maWx0ZXIoKGZ1bmN0aW9uKGUpe3JldHVybiBlLmhhc2ghPT10fSkpLHRoaXMuX2hhc2hlcy5wdXNoKG4pfX0sX3QucHJvdG90eXBlLnVubGlzdGVuSGFzaD1mdW5jdGlvbih0KXt0aGlzLl9oYXNoZXMmJih0aGlzLl9oYXNoZXM9dGhpcy5faGFzaGVzLmZpbHRlcigoZnVuY3Rpb24oZSl7cmV0dXJuIGUuaGFzaCE9PXR9KSksMD09PXRoaXMuX2hhc2hlcy5sZW5ndGgmJnIucmVtb3ZlKCJoYXNoIix0aGlzKSl9LF90LnByb3RvdHlwZS5oYW5kbGVIYXNoPWZ1bmN0aW9uKHQsZSl7aWYodGhpcy5faGFzaGVzKWZvcih2YXIgcj0wLG49dGhpcy5faGFzaGVzO3I8bi5sZW5ndGg7cis9MSl7bltyXS5oYW5kbGUodCxlKX19LF90LnByb3RvdHlwZS5saXN0ZW5LZXk9ZnVuY3Rpb24odCxlLHIsbixpKXt2b2lkIDA9PT1yJiYocj0hMSksdm9pZCAwPT09biYmKG49ITEpLHZvaWQgMD09PWkmJihpPSJkb3duIiksLTE9PT10aGlzLl9rZXlMaXN0ZW5lclR5cGVzLmluZGV4T2YoaSkmJih0aGlzLmxpc3Rlbigia2V5IitpLHRoaXMuaGFuZGxpbmdLZXkpLHRoaXMuX2tleUxpc3RlbmVyVHlwZXMucHVzaChpKSksdGhpcy5fa2V5cy5wdXNoKG5ldyBFdChpLHQsZSxyLG4pKX0sX3QucHJvdG90eXBlLnVubGlzdGVuS2V5PWZ1bmN0aW9uKHQsZSl7dmFyIHI9dGhpczt0aGlzLl9rZXlzPXRoaXMuX2tleXMuZmlsdGVyKChmdW5jdGlvbihyKXtyZXR1cm4gci5jb2RlIT09dHx8ci5jbG9zdXJlIT09ZX0pKSx0aGlzLl9rZXlMaXN0ZW5lclR5cGVzLmZvckVhY2goKGZ1bmN0aW9uKHQpe3IuX2tleXMuc29tZSgoZnVuY3Rpb24oZSl7cmV0dXJuIGUudHlwZT09PXR9KSl8fHIudW5saXN0ZW4oImtleSIrdCxyLmhhbmRsaW5nS2V5KX0pKX0sX3QucHJvdG90eXBlLmhhbmRsZUtleT1mdW5jdGlvbih0KXtmb3IodmFyIGU9MCxyPXRoaXMuX2tleXM7ZTxyLmxlbmd0aDtlKz0xKXtyW2VdLmhhbmRsZSh0KX19LHd0LmlzRW5hYmxlZC5nZXQ9ZnVuY3Rpb24oKXtyZXR1cm4gdGhpcy5faXNFbmFibGVkfSx3dC5pc0VuYWJsZWQuc2V0PWZ1bmN0aW9uKHQpe3RoaXMuX2lzRW5hYmxlZD10fSx3dC5pc1JlbmRlcmluZy5nZXQ9ZnVuY3Rpb24oKXtyZXR1cm4gdGhpcy5faXNSZW5kZXJpbmd9LHd0LmlzUmVuZGVyaW5nLnNldD1mdW5jdGlvbih0KXt0aGlzLl9pc1JlbmRlcmluZyE9PXQmJih0P3IuYWRkKCJyZW5kZXIiLHRoaXMpOnIucmVtb3ZlKCJyZW5kZXIiLHRoaXMpLHRoaXMuX2lzUmVuZGVyaW5nPXQpfSxfdC5wcm90b3R5cGUucmVuZGVyPWZ1bmN0aW9uKCl7fSxfdC5wcm90b3R5cGUucmVxdWVzdD1mdW5jdGlvbih0KXt0aGlzLl9uZXh0cy5wdXNoKHQpLHIuZ2V0TW9kdWxlKCJyZW5kZXIiKS5yZXF1ZXN0KHRoaXMpfSxfdC5wcm90b3R5cGUubmV4dD1mdW5jdGlvbigpe3ZhciB0PXRoaXMuX25leHRzLnNsaWNlKCk7dGhpcy5fbmV4dHMubGVuZ3RoPTA7Zm9yKHZhciBlPTAscj10O2U8ci5sZW5ndGg7ZSs9MSl7dmFyIG49cltlXTtuJiZuKCl9fSx3dC5pc1Jlc2l6aW5nLmdldD1mdW5jdGlvbigpe3JldHVybiB0aGlzLl9pc1Jlc2l6aW5nfSx3dC5pc1Jlc2l6aW5nLnNldD1mdW5jdGlvbih0KXt0aGlzLl9pc1Jlc2l6aW5nIT09dCYmKHQ/KHIuYWRkKCJyZXNpemUiLHRoaXMpLHRoaXMucmVzaXplKCkpOnIucmVtb3ZlKCJyZXNpemUiLHRoaXMpLHRoaXMuX2lzUmVzaXppbmc9dCl9LF90LnByb3RvdHlwZS5yZXNpemU9ZnVuY3Rpb24oKXt9LF90LnByb3RvdHlwZS5pc0JyZWFrcG9pbnQ9ZnVuY3Rpb24odCl7cmV0dXJuITA9PSgic3RyaW5nIj09dHlwZW9mIHQpP210W3QudG9VcHBlckNhc2UoKV0udGVzdCgpOnQudGVzdCgpfSx3dC5pc1Njcm9sbExvY2tlZC5nZXQ9ZnVuY3Rpb24oKXtyZXR1cm4gdGhpcy5faXNTY3JvbGxMb2NrZWR9LHd0LmlzU2Nyb2xsTG9ja2VkLnNldD1mdW5jdGlvbih0KXt0aGlzLl9pc1Njcm9sbExvY2tlZCE9PXQmJih0P3IuYWRkKCJsb2NrIix0aGlzKTpyLnJlbW92ZSgibG9jayIsdGhpcyksdGhpcy5faXNTY3JvbGxMb2NrZWQ9dCl9LHd0LmlzTG9hZGluZy5nZXQ9ZnVuY3Rpb24oKXtyZXR1cm4gdGhpcy5faXNMb2FkaW5nfSx3dC5pc0xvYWRpbmcuc2V0PWZ1bmN0aW9uKHQpe3RoaXMuX2lzTG9hZGluZyE9PXQmJih0P3IuYWRkKCJsb2FkIix0aGlzKTpyLnJlbW92ZSgibG9hZCIsdGhpcyksdGhpcy5faXNMb2FkaW5nPXQpfSxfdC5wcm90b3R5cGUubG9hZD1mdW5jdGlvbigpe30sd3QuaXNTd2FwcGluZ0ZvbnQuZ2V0PWZ1bmN0aW9uKCl7cmV0dXJuIHRoaXMuX2lzU3dhcHBpbmdGb250fSx3dC5pc1N3YXBwaW5nRm9udC5zZXQ9ZnVuY3Rpb24odCl7dGhpcy5faXNTd2FwcGluZ0ZvbnQhPT10JiYodD9yLmFkZCgiZm9udC1zd2FwIix0aGlzKTpyLnJlbW92ZSgiZm9udC1zd2FwIix0aGlzKSx0aGlzLl9pc1N3YXBwaW5nRm9udD10KX0sX3QucHJvdG90eXBlLnN3YXBGb250PWZ1bmN0aW9uKCl7fSx3dC5pc01vdXNlTW92aW5nLmdldD1mdW5jdGlvbigpe3JldHVybiB0aGlzLl9pc01vdXNlTW92aW5nfSx3dC5pc01vdXNlTW92aW5nLnNldD1mdW5jdGlvbih0KXt0aGlzLl9pc01vdXNlTW92aW5nIT09dCYmKHQ/ci5hZGQoIm1vdXNlLW1vdmUiLHRoaXMpOnIucmVtb3ZlKCJtb3VzZS1tb3ZlIix0aGlzKSx0aGlzLl9pc01vdXNlTW92aW5nPXQpfSxfdC5wcm90b3R5cGUubW91c2VNb3ZlPWZ1bmN0aW9uKHQpe30sX3QucHJvdG90eXBlLmV4YW1pbmU9ZnVuY3Rpb24odCl7dGhpcy5ub2RlLm1hdGNoZXModGhpcy5yZWdpc3RyYXRpb24uc2VsZWN0b3IpP3RoaXMubXV0YXRlKHQpOnRoaXMuX2Rpc3Bvc2UoKX0sX3QucHJvdG90eXBlLm11dGF0ZT1mdW5jdGlvbih0KXt9LF90LnByb3RvdHlwZS5yZXRyaWV2ZU5vZGVJZD1mdW5jdGlvbih0LGUpe2lmKHQuaWQpcmV0dXJuIHQuaWQ7dmFyIHI9aXQodGhpcy5pZCsiLSIrZSk7cmV0dXJuIHRoaXMud2FybigiYWRkIGlkICciK3IrIicgdG8gIitlKSx0LnNldEF0dHJpYnV0ZSgiaWQiLHIpLHJ9LHd0LmlzRGlzcG9zZWQuZ2V0PWZ1bmN0aW9uKCl7cmV0dXJuIHRoaXMuX2lzRGlzcG9zZWR9LF90LnByb3RvdHlwZS5fZGlzcG9zZT1mdW5jdGlvbigpe3RoaXMuZGVidWcoImRpc3Bvc2UgaW5zdGFuY2Ugb2YgIit0aGlzLnJlZ2lzdHJhdGlvbi5pbnN0YW5jZUNsYXNzTmFtZSsiIG9uIGVsZW1lbnQgWyIrdGhpcy5lbGVtZW50LmlkKyJdIiksdGhpcy5yZW1vdmVBdHRyaWJ1dGUodGhpcy5yZWdpc3RyYXRpb24uYXR0cmlidXRlKSx0aGlzLnVubGlzdGVuKCksci5yZW1vdmUoImhhc2giLHRoaXMpLHRoaXMuX2hhc2hlcz1udWxsLHRoaXMuX2tleXM9bnVsbCx0aGlzLmlzUmVuZGVyaW5nPSExLHRoaXMuaXNSZXNpemluZz0hMSx0aGlzLl9uZXh0cz1udWxsLHIuZ2V0TW9kdWxlKCJyZW5kZXIiKS5uZXh0cy5yZW1vdmUodGhpcyksdGhpcy5pc1Njcm9sbExvY2tlZD0hMSx0aGlzLmlzTG9hZGluZz0hMSx0aGlzLmlzU3dhcHBpbmdGb250PSExLHRoaXMuaXNNb3VzZU1vdmluZz0hMSx0aGlzLl9lbWl0dGVyLmRpc3Bvc2UoKSx0aGlzLl9lbWl0dGVyPW51bGwsdGhpcy5fYXNjZW50LmRpc3Bvc2UoKSx0aGlzLl9hc2NlbnQ9bnVsbCx0aGlzLl9kZXNjZW50LmRpc3Bvc2UoKSx0aGlzLl9kZXNjZW50PW51bGwsdGhpcy5lbGVtZW50LnJlbW92ZSh0aGlzKTtmb3IodmFyIHQ9MCxlPXRoaXMuX3JlZ2lzdHJhdGlvbnM7dDxlLmxlbmd0aDt0Kz0xKXt2YXIgbj1lW3RdO3IucmVtb3ZlKCJyZWdpc3RlciIsbil9dGhpcy5fcmVnaXN0cmF0aW9ucz1udWxsLHRoaXMucmVnaXN0cmF0aW9uLnJlbW92ZSh0aGlzKSx0aGlzLl9pc0Rpc3Bvc2VkPSEwLHRoaXMuZGlzcG9zZSgpfSxfdC5wcm90b3R5cGUuZGlzcG9zZT1mdW5jdGlvbigpe30sX3QucHJvdG90eXBlLmVtaXQ9ZnVuY3Rpb24odCxlKXtyZXR1cm4gdGhpcy5lbGVtZW50LmVtaXQodCxlKX0sX3QucHJvdG90eXBlLmFkZEVtaXNzaW9uPWZ1bmN0aW9uKHQsZSl7dGhpcy5fZW1pdHRlci5hZGQodCxlKX0sX3QucHJvdG90eXBlLnJlbW92ZUVtaXNzaW9uPWZ1bmN0aW9uKHQsZSl7dGhpcy5fZW1pdHRlci5yZW1vdmUodCxlKX0sX3QucHJvdG90eXBlLmFzY2VuZD1mdW5jdGlvbih0LGUpe3JldHVybiB0aGlzLmVsZW1lbnQuYXNjZW5kKHQsZSl9LF90LnByb3RvdHlwZS5hZGRBc2NlbnQ9ZnVuY3Rpb24odCxlKXt0aGlzLl9hc2NlbnQuYWRkKHQsZSl9LF90LnByb3RvdHlwZS5yZW1vdmVBc2NlbnQ9ZnVuY3Rpb24odCxlKXt0aGlzLl9hc2NlbnQucmVtb3ZlKHQsZSl9LF90LnByb3RvdHlwZS5kZXNjZW5kPWZ1bmN0aW9uKHQsZSl7cmV0dXJuIHRoaXMuZWxlbWVudC5kZXNjZW5kKHQsZSl9LF90LnByb3RvdHlwZS5hZGREZXNjZW50PWZ1bmN0aW9uKHQsZSl7dGhpcy5fZGVzY2VudC5hZGQodCxlKX0sX3QucHJvdG90eXBlLnJlbW92ZURlc2NlbnQ9ZnVuY3Rpb24odCxlKXt0aGlzLl9kZXNjZW50LnJlbW92ZSh0LGUpfSx3dC5zdHlsZS5nZXQ9ZnVuY3Rpb24oKXtyZXR1cm4gdGhpcy5ub2RlLnN0eWxlfSxfdC5wcm90b3R5cGUuYWRkQ2xhc3M9ZnVuY3Rpb24odCl7Sih0aGlzLm5vZGUsdCl9LF90LnByb3RvdHlwZS5yZW1vdmVDbGFzcz1mdW5jdGlvbih0KXtaKHRoaXMubm9kZSx0KX0sX3QucHJvdG90eXBlLmhhc0NsYXNzPWZ1bmN0aW9uKHQpe3JldHVybiB0dCh0aGlzLm5vZGUsdCl9LHd0LmNsYXNzTmFtZXMuZ2V0PWZ1bmN0aW9uKCl7cmV0dXJuIFgodGhpcy5ub2RlKX0sX3QucHJvdG90eXBlLnJlbW92ZT1mdW5jdGlvbigpe3RoaXMubm9kZS5wYXJlbnROb2RlLnJlbW92ZUNoaWxkKHRoaXMubm9kZSl9LF90LnByb3RvdHlwZS5zZXRBdHRyaWJ1dGU9ZnVuY3Rpb24odCxlKXt0aGlzLm5vZGUuc2V0QXR0cmlidXRlKHQsZSl9LF90LnByb3RvdHlwZS5nZXRBdHRyaWJ1dGU9ZnVuY3Rpb24odCl7cmV0dXJuIHRoaXMubm9kZS5nZXRBdHRyaWJ1dGUodCl9LF90LnByb3RvdHlwZS5oYXNBdHRyaWJ1dGU9ZnVuY3Rpb24odCl7cmV0dXJuIHRoaXMubm9kZS5oYXNBdHRyaWJ1dGUodCl9LF90LnByb3RvdHlwZS5yZW1vdmVBdHRyaWJ1dGU9ZnVuY3Rpb24odCl7dGhpcy5ub2RlLnJlbW92ZUF0dHJpYnV0ZSh0KX0sX3QucHJvdG90eXBlLnNldFByb3BlcnR5PWZ1bmN0aW9uKHQsZSl7dGhpcy5ub2RlLnN0eWxlLnNldFByb3BlcnR5KHQsZSl9LF90LnByb3RvdHlwZS5yZW1vdmVQcm9wZXJ0eT1mdW5jdGlvbih0KXt0aGlzLm5vZGUuc3R5bGUucmVtb3ZlUHJvcGVydHkodCl9LF90LnByb3RvdHlwZS5mb2N1cz1mdW5jdGlvbigpe3RoaXMubm9kZS5mb2N1cygpfSxfdC5wcm90b3R5cGUuYmx1cj1mdW5jdGlvbigpe3RoaXMubm9kZS5ibHVyKCl9LF90LnByb3RvdHlwZS5mb2N1c0Nsb3Nlc3Q9ZnVuY3Rpb24oKXt2YXIgdD10aGlzLl9mb2N1c0Nsb3Nlc3QodGhpcy5ub2RlLnBhcmVudE5vZGUpO3QmJnQuZm9jdXMoKX0sX3QucHJvdG90eXBlLl9mb2N1c0Nsb3Nlc3Q9ZnVuY3Rpb24odCl7aWYoIXQpcmV0dXJuIG51bGw7dmFyIGU9W10uY29uY2F0KHJ0KHQpKTtpZihlLmxlbmd0aDw9MSlyZXR1cm4gdGhpcy5fZm9jdXNDbG9zZXN0KHQucGFyZW50Tm9kZSk7dmFyIHI9ZS5pbmRleE9mKHRoaXMubm9kZSk7cmV0dXJuIGVbcisocjxlLmxlbmd0aC0xPzE6LTEpXX0sd3QuaGFzRm9jdXMuZ2V0PWZ1bmN0aW9uKCl7cmV0dXJuIHRoaXMubm9kZT09PWRvY3VtZW50LmFjdGl2ZUVsZW1lbnR9LF90LnByb3RvdHlwZS5zY3JvbGxJbnRvVmlldz1mdW5jdGlvbigpe3ZhciB0PXRoaXMuZ2V0UmVjdCgpLGU9ci5nZXRNb2R1bGUoImxvY2siKTt0LnRvcDwwJiZlLm1vdmUodC50b3AtNTApLHQuYm90dG9tPndpbmRvdy5pbm5lckhlaWdodCYmZS5tb3ZlKHQuYm90dG9tLXdpbmRvdy5pbm5lckhlaWdodCs1MCl9LF90LnByb3RvdHlwZS5tYXRjaGVzPWZ1bmN0aW9uKHQpe3JldHVybiB0aGlzLm5vZGUubWF0Y2hlcyh0KX0sX3QucHJvdG90eXBlLnF1ZXJ5U2VsZWN0b3I9ZnVuY3Rpb24odCl7cmV0dXJuIHRoaXMubm9kZS5xdWVyeVNlbGVjdG9yKHQpfSxfdC5wcm90b3R5cGUucXVlcnlTZWxlY3RvckFsbD1mdW5jdGlvbih0KXtyZXR1cm4gUyh0aGlzLm5vZGUsdCl9LF90LnByb3RvdHlwZS5xdWVyeVBhcmVudFNlbGVjdG9yPWZ1bmN0aW9uKHQpe3JldHVybiBFKHRoaXMubm9kZSx0KX0sX3QucHJvdG90eXBlLmdldFJlY3Q9ZnVuY3Rpb24oKXt2YXIgdD10aGlzLm5vZGUuZ2V0Qm91bmRpbmdDbGllbnRSZWN0KCk7cmV0dXJuIHQuY2VudGVyPXQubGVmdCsuNSp0LndpZHRoLHQubWlkZGxlPXQudG9wKy41KnQuaGVpZ2h0LHR9LHd0LmlzTGVnYWN5LmdldD1mdW5jdGlvbigpe3JldHVybiByLmlzTGVnYWN5fSxPYmplY3QuZGVmaW5lUHJvcGVydGllcyhfdC5wcm90b3R5cGUsd3QpLE9iamVjdC5kZWZpbmVQcm9wZXJ0aWVzKF90LFN0KTt2YXIgRXQ9ZnVuY3Rpb24odCxlLHIsbixpKXt0aGlzLnR5cGU9dCx0aGlzLmV2ZW50VHlwZT0ia2V5Iit0LHRoaXMua2V5Q29kZT1lLHRoaXMuY2xvc3VyZT1yLHRoaXMucHJldmVudERlZmF1bHQ9ITA9PT1uLHRoaXMuc3RvcFByb3BhZ2F0aW9uPSEwPT09aX07RXQucHJvdG90eXBlLmhhbmRsZT1mdW5jdGlvbih0KXt0LnR5cGU9PT10aGlzLmV2ZW50VHlwZSYmdC5rZXlDb2RlPT09dGhpcy5rZXlDb2RlLnZhbHVlJiYodGhpcy5jbG9zdXJlKHQpLHRoaXMucHJldmVudERlZmF1bHQmJnQucHJldmVudERlZmF1bHQoKSx0aGlzLnN0b3BQcm9wYWdhdGlvbiYmdC5zdG9wUHJvcGFnYXRpb24oKSl9O3ZhciBPdD1mdW5jdGlvbih0LGUscixuKXt0aGlzLl9ub2RlPXQsdGhpcy5fdHlwZT1lLHRoaXMuX2Nsb3N1cmU9cix0aGlzLl9vcHRpb25zPW59LGp0PXtjbG9zdXJlOntjb25maWd1cmFibGU6ITB9fTtqdC5jbG9zdXJlLmdldD1mdW5jdGlvbigpe3JldHVybiB0aGlzLl9jbG9zdXJlfSxPdC5wcm90b3R5cGUubGlzdGVuPWZ1bmN0aW9uKCl7dGhpcy5fbm9kZS5hZGRFdmVudExpc3RlbmVyKHRoaXMuX3R5cGUsdGhpcy5fY2xvc3VyZSx0aGlzLl9vcHRpb25zKX0sT3QucHJvdG90eXBlLm1hdGNoT3B0aW9ucz1mdW5jdGlvbih0KXt2YXIgZT10aGlzO3N3aXRjaCh2b2lkIDA9PT10JiYodD1udWxsKSwhMCl7Y2FzZSBudWxsPT09dDpjYXNlImJvb2xlYW4iPT10eXBlb2YgdGhpcy5fb3B0aW9ucyYmImJvb2xlYW4iPT10eXBlb2YgdCYmdGhpcy5fb3B0aW9ucz09PXQ6cmV0dXJuITA7Y2FzZSBPYmplY3Qua2V5cyh0aGlzLl9vcHRpb25zKS5sZW5ndGghPT1PYmplY3Qua2V5cyh0KS5sZW5ndGg6cmV0dXJuITE7Y2FzZSBPYmplY3Qua2V5cyh0KS5ldmVyeSgoZnVuY3Rpb24ocil7cmV0dXJuIGUuX29wdGlvbnNbcl09PT10W3JdfSkpOnJldHVybiEwfXJldHVybiExfSxPdC5wcm90b3R5cGUudW5saXN0ZW49ZnVuY3Rpb24oKXt0aGlzLl9ub2RlLnJlbW92ZUV2ZW50TGlzdGVuZXIodGhpcy5fdHlwZSx0aGlzLl9jbG9zdXJlLHRoaXMuX29wdGlvbnMpfSxPYmplY3QuZGVmaW5lUHJvcGVydGllcyhPdC5wcm90b3R5cGUsanQpO3ZhciBUdD1mdW5jdGlvbih0LGUpe3RoaXMuaGFzaD10LHRoaXMuYWRkPWV9O1R0LnByb3RvdHlwZS5oYW5kbGU9ZnVuY3Rpb24odCxlKXt0aGlzLmhhc2g9PT10JiZ0aGlzLmFkZChlKX07dmFyIFB0PXtESVNDTE9TRTp3LmV2ZW50KCJkaXNjbG9zZSIpLENPTkNFQUw6dy5ldmVudCgiY29uY2VhbCIpfSxBdD17UkVTRVQ6dy5lbWlzc2lvbigiZGlzY2xvc3VyZSIsInJlc2V0IiksQURERUQ6dy5lbWlzc2lvbigiZGlzY2xvc3VyZSIsImFkZGVkIiksUkVUUklFVkU6dy5lbWlzc2lvbigiZGlzY2xvc3VyZSIsInJldHJpZXZlIiksUkVNT1ZFRDp3LmVtaXNzaW9uKCJkaXNjbG9zdXJlIiwicmVtb3ZlZCIpLEdST1VQOncuZW1pc3Npb24oImRpc2Nsb3N1cmUiLCJncm91cCIpLFVOR1JPVVA6dy5lbWlzc2lvbigiZGlzY2xvc3VyZSIsInVuZ3JvdXAiKSxTUE9UTElHSFQ6dy5lbWlzc2lvbigiZGlzY2xvc3VyZSIsInNwb3RsaWdodCIpfSxOdD1mdW5jdGlvbih0KXtmdW5jdGlvbiBlKGUscixuLGkpe3QuY2FsbCh0aGlzKSx0aGlzLnR5cGU9ZSx0aGlzLl9zZWxlY3Rvcj1yLHRoaXMuRGlzY2xvc3VyZUJ1dHRvbkluc3RhbmNlQ2xhc3M9bix0aGlzLmRpc2Nsb3N1cmVzR3JvdXBJbnN0YW5jZUNsYXNzTmFtZT1pLHRoaXMubW9kaWZpZXI9dGhpcy5fc2VsZWN0b3IrIi0tIit0aGlzLnR5cGUuaWQsdGhpcy5faXNQcmlzdGluZT0hMCx0aGlzLl9pc1JldHJpZXZpbmdQcmltYXJpZXM9ITEsdGhpcy5faGFzUmV0cmlldmVkPSExLHRoaXMuX3ByaW1hcnlCdXR0b25zPVtdfXQmJihlLl9fcHJvdG9fXz10KSxlLnByb3RvdHlwZT1PYmplY3QuY3JlYXRlKHQmJnQucHJvdG90eXBlKSxlLnByb3RvdHlwZS5jb25zdHJ1Y3Rvcj1lO3ZhciByPXtpc0VuYWJsZWQ6e2NvbmZpZ3VyYWJsZTohMH0saXNQcmlzdGluZTp7Y29uZmlndXJhYmxlOiEwfSxwcm94eTp7Y29uZmlndXJhYmxlOiEwfSxidXR0b25zOntjb25maWd1cmFibGU6ITB9LGdyb3VwOntjb25maWd1cmFibGU6ITB9LGlzRGlzY2xvc2VkOntjb25maWd1cmFibGU6ITB9LGlzSW5pdGlhbGx5RGlzY2xvc2VkOntjb25maWd1cmFibGU6ITB9LGJ1dHRvbkhhc0ZvY3VzOntjb25maWd1cmFibGU6ITB9LGhhc0ZvY3VzOntjb25maWd1cmFibGU6ITB9LHByaW1hcnlCdXR0b25zOntjb25maWd1cmFibGU6ITB9fSxuPXtpbnN0YW5jZUNsYXNzTmFtZTp7Y29uZmlndXJhYmxlOiEwfX07cmV0dXJuIG4uaW5zdGFuY2VDbGFzc05hbWUuZ2V0PWZ1bmN0aW9uKCl7cmV0dXJuIkRpc2Nsb3N1cmUifSxlLnByb3RvdHlwZS5pbml0PWZ1bmN0aW9uKCl7dGhpcy5hZGREZXNjZW50KEF0LlJFU0VULHRoaXMucmVzZXQuYmluZCh0aGlzKSksdGhpcy5hZGREZXNjZW50KEF0LkdST1VQLHRoaXMudXBkYXRlLmJpbmQodGhpcykpLHRoaXMuYWRkRGVzY2VudChBdC5VTkdST1VQLHRoaXMudXBkYXRlLmJpbmQodGhpcykpLHRoaXMuYWRkQXNjZW50KEF0LlNQT1RMSUdIVCx0aGlzLmRpc2Nsb3NlLmJpbmQodGhpcykpLHRoaXMucmVnaXN0ZXIoJ1thcmlhLWNvbnRyb2xzPSInK3RoaXMuaWQrJyJdJyx0aGlzLkRpc2Nsb3N1cmVCdXR0b25JbnN0YW5jZUNsYXNzKSx0aGlzLmFzY2VuZChBdC5BRERFRCksdGhpcy5saXN0ZW5IYXNoKHRoaXMuaWQsdGhpcy5fc3BvdGxpZ2h0LmJpbmQodGhpcykpLHRoaXMudXBkYXRlKCl9LHIuaXNFbmFibGVkLmdldD1mdW5jdGlvbigpe3JldHVybiB0LnByb3RvdHlwZS5pc0VuYWJsZWR9LHIuaXNFbmFibGVkLnNldD1mdW5jdGlvbihlKXt0aGlzLmlzRW5hYmxlZCE9PWUmJih0LnByb3RvdHlwZS5pc0VuYWJsZWQ9ZSxlP3RoaXMuYXNjZW5kKEF0LkFEREVEKTp0aGlzLmFzY2VuZChBdC5SRU1PVkVEKSl9LHIuaXNQcmlzdGluZS5nZXQ9ZnVuY3Rpb24oKXtyZXR1cm4gdGhpcy5faXNQcmlzdGluZX0sci5wcm94eS5nZXQ9ZnVuY3Rpb24oKXt2YXIgZT10aGlzLHI9T2JqZWN0LmFzc2lnbi5jYWxsKHRoaXMsdC5wcm90b3R5cGUucHJveHkse2Rpc2Nsb3NlOmUuZGlzY2xvc2UuYmluZChlKSxmb2N1czplLmZvY3VzLmJpbmQoZSl9KTtyZXR1cm4gdGhpcy50eXBlLmNhbkNvbmNlYWwmJihyLmNvbmNlYWw9ZS5jb25jZWFsLmJpbmQoZSkpLHB0KHIse2dldCBidXR0b25zKCl7cmV0dXJuIGUuYnV0dG9ucy5tYXAoKGZ1bmN0aW9uKHQpe3JldHVybiB0LnByb3h5fSkpfSxnZXQgZ3JvdXAoKXt2YXIgdD1lLmdyb3VwO3JldHVybiB0P3QucHJveHk6bnVsbH0sZ2V0IGlzRGlzY2xvc2VkKCl7cmV0dXJuIGUuaXNEaXNjbG9zZWR9fSl9LHIuYnV0dG9ucy5nZXQ9ZnVuY3Rpb24oKXtyZXR1cm4gdGhpcy5nZXRSZWdpc3RlcmVkSW5zdGFuY2VzKHRoaXMuRGlzY2xvc3VyZUJ1dHRvbkluc3RhbmNlQ2xhc3MuaW5zdGFuY2VDbGFzc05hbWUpfSxlLnByb3RvdHlwZS51cGRhdGU9ZnVuY3Rpb24oKXt0aGlzLmdldEdyb3VwKCksdGhpcy5yZXRyaWV2ZVByaW1hcmllcygpfSxlLnByb3RvdHlwZS5nZXRHcm91cD1mdW5jdGlvbigpe2lmKHRoaXMuZGlzY2xvc3VyZXNHcm91cEluc3RhbmNlQ2xhc3NOYW1lKXt2YXIgdD10aGlzLmVsZW1lbnQuZ2V0QXNjZW5kYW50SW5zdGFuY2UodGhpcy5kaXNjbG9zdXJlc0dyb3VwSW5zdGFuY2VDbGFzc05hbWUsdGhpcy5jb25zdHJ1Y3Rvci5pbnN0YW5jZUNsYXNzTmFtZSk7dCYmdC52YWxpZGF0ZSh0aGlzKT90aGlzLl9ncm91cD10OnRoaXMuX2dyb3VwPW51bGx9ZWxzZSB0aGlzLl9ncm91cD1udWxsfSxyLmdyb3VwLmdldD1mdW5jdGlvbigpe3JldHVybiB0aGlzLl9ncm91cH0sZS5wcm90b3R5cGUuZGlzY2xvc2U9ZnVuY3Rpb24odCl7cmV0dXJuISghMD09PXRoaXMuaXNEaXNjbG9zZWR8fCF0aGlzLmlzRW5hYmxlZCkmJih0aGlzLl9pc1ByaXN0aW5lPSExLHRoaXMuaXNEaXNjbG9zZWQ9ITAsIXQmJnRoaXMuZ3JvdXAmJih0aGlzLmdyb3VwLmN1cnJlbnQ9dGhpcyksITApfSxlLnByb3RvdHlwZS5jb25jZWFsPWZ1bmN0aW9uKHQsZSl7cmV0dXJuIHZvaWQgMD09PWUmJihlPSEwKSwhMSE9PXRoaXMuaXNEaXNjbG9zZWQmJighKCF0aGlzLnR5cGUuY2FuQ29uY2VhbCYmdGhpcy5ncm91cCYmdGhpcy5ncm91cC5jdXJyZW50PT09dGhpcykmJih0aGlzLmlzRGlzY2xvc2VkPSExLCF0JiZ0aGlzLmdyb3VwJiZ0aGlzLmdyb3VwLmN1cnJlbnQ9PT10aGlzJiYodGhpcy5ncm91cC5jdXJyZW50PW51bGwpLGV8fHRoaXMuZm9jdXMoKSx0aGlzLl9pc1ByaXN0aW5lfHx0aGlzLmRlc2NlbmQoQXQuUkVTRVQpLCEwKSl9LHIuaXNEaXNjbG9zZWQuZ2V0PWZ1bmN0aW9uKCl7cmV0dXJuIHRoaXMuX2lzRGlzY2xvc2VkfSxyLmlzRGlzY2xvc2VkLnNldD1mdW5jdGlvbih0KXtpZih0aGlzLl9pc0Rpc2Nsb3NlZCE9PXQmJih0aGlzLmlzRW5hYmxlZHx8ITAhPT10KSl7dGhpcy5kaXNwYXRjaCh0P1B0LkRJU0NMT1NFOlB0LkNPTkNFQUwsdGhpcy50eXBlKSx0aGlzLl9pc0Rpc2Nsb3NlZD10LHQ/dGhpcy5hZGRDbGFzcyh0aGlzLm1vZGlmaWVyKTp0aGlzLnJlbW92ZUNsYXNzKHRoaXMubW9kaWZpZXIpO2Zvcih2YXIgZT0wO2U8dGhpcy5idXR0b25zLmxlbmd0aDtlKyspdGhpcy5idXR0b25zW2VdLmFwcGx5KHQpfX0sci5pc0luaXRpYWxseURpc2Nsb3NlZC5nZXQ9ZnVuY3Rpb24oKXtyZXR1cm4gdGhpcy5wcmltYXJ5QnV0dG9ucy5zb21lKChmdW5jdGlvbih0KXtyZXR1cm4gdC5pc0luaXRpYWxseURpc2Nsb3NlZH0pKX0sZS5wcm90b3R5cGUuaGFzUmV0cmlldmVkPWZ1bmN0aW9uKCl7cmV0dXJuIHRoaXMuX2hhc1JldHJpZXZlZH0sZS5wcm90b3R5cGUucmVzZXQ9ZnVuY3Rpb24oKXt9LGUucHJvdG90eXBlLnRvZ2dsZT1mdW5jdGlvbih0KXtpZih0aGlzLnR5cGUuY2FuQ29uY2VhbClzd2l0Y2goITApe2Nhc2UhdDpjYXNlIHRoaXMuaXNEaXNjbG9zZWQ6dGhpcy5jb25jZWFsKCExLCExKTticmVhaztkZWZhdWx0OnRoaXMuZGlzY2xvc2UoKX1lbHNlIHRoaXMuZGlzY2xvc2UoKX0sci5idXR0b25IYXNGb2N1cy5nZXQ9ZnVuY3Rpb24oKXtyZXR1cm4gdGhpcy5idXR0b25zLnNvbWUoKGZ1bmN0aW9uKHQpe3JldHVybiB0Lmhhc0ZvY3VzfSkpfSxyLmhhc0ZvY3VzLmdldD1mdW5jdGlvbigpe3JldHVybiEhdC5wcm90b3R5cGUuaGFzRm9jdXN8fCghIXRoaXMuYnV0dG9uSGFzRm9jdXN8fHRoaXMucXVlcnlTZWxlY3RvckFsbCgiOmZvY3VzIikubGVuZ3RoPjApfSxlLnByb3RvdHlwZS5mb2N1cz1mdW5jdGlvbigpe3RoaXMuX3ByaW1hcnlCdXR0b25zLmxlbmd0aD4wJiZ0aGlzLl9wcmltYXJ5QnV0dG9uc1swXS5mb2N1cygpfSxyLnByaW1hcnlCdXR0b25zLmdldD1mdW5jdGlvbigpe3JldHVybiB0aGlzLl9wcmltYXJ5QnV0dG9uc30sZS5wcm90b3R5cGUucmV0cmlldmVQcmltYXJpZXM9ZnVuY3Rpb24oKXt0aGlzLl9pc1JldHJpZXZpbmdQcmltYXJpZXN8fCh0aGlzLl9pc1JldHJpZXZpbmdQcmltYXJpZXM9ITAsdGhpcy5yZXF1ZXN0KHRoaXMuX3JldHJpZXZlUHJpbWFyaWVzLmJpbmQodGhpcykpKX0sZS5wcm90b3R5cGUuX3JldHJpZXZlUHJpbWFyaWVzPWZ1bmN0aW9uKCl7aWYodGhpcy5faXNSZXRyaWV2aW5nUHJpbWFyaWVzPSExLHRoaXMuX3ByaW1hcnlCdXR0b25zPXRoaXMuX2VsZWN0UHJpbWFyaWVzKHRoaXMuYnV0dG9ucyksIXRoaXMuX2hhc1JldHJpZXZlZCYmMCE9PXRoaXMuX3ByaW1hcnlCdXR0b25zLmxlbmd0aClpZih0aGlzLnJldHJpZXZlZCgpLHRoaXMuX2hhc1JldHJpZXZlZD0hMCx0aGlzLmFwcGx5QWJpbGl0eSghMCksdGhpcy5ncm91cCl0aGlzLmdyb3VwLnJldHJpZXZlKCk7ZWxzZSBpZih0aGlzLl9pc1ByaXN0aW5lJiZ0aGlzLmlzRW5hYmxlZCYmIXRoaXMuZ3JvdXApc3dpdGNoKCEwKXtjYXNlIHRoaXMuaGFzaD09PXRoaXMuaWQ6dGhpcy5fc3BvdGxpZ2h0KCk7YnJlYWs7Y2FzZSB0aGlzLmlzSW5pdGlhbGx5RGlzY2xvc2VkOnRoaXMuZGlzY2xvc2UoKX19LGUucHJvdG90eXBlLnJldHJpZXZlZD1mdW5jdGlvbigpe30sZS5wcm90b3R5cGUuX3Nwb3RsaWdodD1mdW5jdGlvbigpe3ZhciB0PXRoaXM7dGhpcy5kaXNjbG9zZSgpLHRoaXMucmVxdWVzdCgoZnVuY3Rpb24oKXt0LmFzY2VuZChBdC5TUE9UTElHSFQpfSkpfSxlLnByb3RvdHlwZS5fZWxlY3RQcmltYXJpZXM9ZnVuY3Rpb24odCl7dmFyIGU9dGhpcztyZXR1cm4gdC5maWx0ZXIoKGZ1bmN0aW9uKHQpe3JldHVybiB0LmNhbkRpc2Nsb3NlJiYhZS5ub2RlLmNvbnRhaW5zKHQubm9kZSl9KSl9LGUucHJvdG90eXBlLmFwcGx5QWJpbGl0eT1mdW5jdGlvbih0KXt2b2lkIDA9PT10JiYodD0hMSk7dmFyIGU9IXRoaXMuX3ByaW1hcnlCdXR0b25zLmV2ZXJ5KChmdW5jdGlvbih0KXtyZXR1cm4gdC5pc0Rpc2FibGVkfSkpO3RoaXMuaXNFbmFibGVkIT09ZSYmKHRoaXMuaXNFbmFibGVkPWUsdHx8KCF0aGlzLmlzRW5hYmxlZCYmdGhpcy5pc0Rpc2Nsb3NlZCYmKHRoaXMuZ3JvdXA/dGhpcy5hc2NlbmQoQXQuUkVNT1ZFRCk6dGhpcy50eXBlLmNhbkNvbmNlYWwmJnRoaXMuY29uY2VhbCgpKSx0aGlzLmlzRW5hYmxlZCYmKHRoaXMuZ3JvdXAmJnRoaXMuYXNjZW5kKEF0LkFEREVEKSx0aGlzLmhhc2g9PT10aGlzLmlkJiZ0aGlzLl9zcG90bGlnaHQoKSkpKX0sZS5wcm90b3R5cGUuZGlzcG9zZT1mdW5jdGlvbigpe3RoaXMuX2dyb3VwPW51bGwsdGhpcy5fcHJpbWFyeUJ1dHRvbnM9bnVsbCx0LnByb3RvdHlwZS5kaXNwb3NlLmNhbGwodGhpcyksdGhpcy5hc2NlbmQoQXQuUkVNT1ZFRCl9LE9iamVjdC5kZWZpbmVQcm9wZXJ0aWVzKGUucHJvdG90eXBlLHIpLE9iamVjdC5kZWZpbmVQcm9wZXJ0aWVzKGUsbiksZX0oX3QpLEN0PWZ1bmN0aW9uKHQpe2Z1bmN0aW9uIGUoZSl7dC5jYWxsKHRoaXMpLHRoaXMudHlwZT1lLHRoaXMuYXR0cmlidXRlTmFtZT1lLmFyaWFTdGF0ZT8iYXJpYS0iK2UuaWQ6dy5hdHRyKGUuaWQpLHRoaXMuX2NhbkRpc2Nsb3NlPSExfXQmJihlLl9fcHJvdG9fXz10KSxlLnByb3RvdHlwZT1PYmplY3QuY3JlYXRlKHQmJnQucHJvdG90eXBlKSxlLnByb3RvdHlwZS5jb25zdHJ1Y3Rvcj1lO3ZhciByPXtpc1ByaW1hcnk6e2NvbmZpZ3VyYWJsZTohMH0sY2FuRGlzY2xvc2U6e2NvbmZpZ3VyYWJsZTohMH0saXNEaXNhYmxlZDp7Y29uZmlndXJhYmxlOiEwfSxwcm94eTp7Y29uZmlndXJhYmxlOiEwfSxpc0Rpc2Nsb3NlZDp7Y29uZmlndXJhYmxlOiEwfSxpc0luaXRpYWxseURpc2Nsb3NlZDp7Y29uZmlndXJhYmxlOiEwfSxkeDp7Y29uZmlndXJhYmxlOiEwfSxkeTp7Y29uZmlndXJhYmxlOiEwfX0sbj17aW5zdGFuY2VDbGFzc05hbWU6e2NvbmZpZ3VyYWJsZTohMH19O3JldHVybiBuLmluc3RhbmNlQ2xhc3NOYW1lLmdldD1mdW5jdGlvbigpe3JldHVybiJEaXNjbG9zdXJlQnV0dG9uIn0sci5pc1ByaW1hcnkuZ2V0PWZ1bmN0aW9uKCl7cmV0dXJuIHRoaXMucmVnaXN0cmF0aW9uLmNyZWF0b3IucHJpbWFyeUJ1dHRvbnMuaW5jbHVkZXModGhpcyl9LHIuY2FuRGlzY2xvc2UuZ2V0PWZ1bmN0aW9uKCl7cmV0dXJuIHRoaXMuX2NhbkRpc2Nsb3NlfSxyLmlzRGlzYWJsZWQuZ2V0PWZ1bmN0aW9uKCl7cmV0dXJuIHRoaXMudHlwZS5jYW5EaXNhYmxlJiZ0aGlzLmhhc0F0dHJpYnV0ZSgiZGlzYWJsZWQiKX0sZS5wcm90b3R5cGUuaW5pdD1mdW5jdGlvbigpe3RoaXMuX2NhbkRpc2Nsb3NlPXRoaXMuaGFzQXR0cmlidXRlKHRoaXMuYXR0cmlidXRlTmFtZSksdGhpcy5faXNJbml0aWFsbHlEaXNjbG9zZWQ9dGhpcy5pc0Rpc2Nsb3NlZCx0aGlzLl9pc0NvbnRhaW5lZD10aGlzLnJlZ2lzdHJhdGlvbi5jcmVhdG9yLm5vZGUuY29udGFpbnModGhpcy5ub2RlKSx0aGlzLmNvbnRyb2xzSWQ9dGhpcy5nZXRBdHRyaWJ1dGUoImFyaWEtY29udHJvbHMiKSx0aGlzLnJlZ2lzdHJhdGlvbi5jcmVhdG9yLnJldHJpZXZlUHJpbWFyaWVzKCksdGhpcy5saXN0ZW5DbGljaygpfSxyLnByb3h5LmdldD1mdW5jdGlvbigpe3JldHVybiBPYmplY3QuYXNzaWduLmNhbGwodGhpcyx0LnByb3RvdHlwZS5wcm94eSx7Zm9jdXM6dGhpcy5mb2N1cy5iaW5kKHRoaXMpfSl9LGUucHJvdG90eXBlLmhhbmRsZUNsaWNrPWZ1bmN0aW9uKHQpe3RoaXMucmVnaXN0cmF0aW9uLmNyZWF0b3ImJnRoaXMucmVnaXN0cmF0aW9uLmNyZWF0b3IudG9nZ2xlKHRoaXMuY2FuRGlzY2xvc2UpfSxlLnByb3RvdHlwZS5tdXRhdGU9ZnVuY3Rpb24odCl7dGhpcy5fY2FuRGlzY2xvc2U9dGhpcy5oYXNBdHRyaWJ1dGUodGhpcy5hdHRyaWJ1dGVOYW1lKSx0aGlzLnJlZ2lzdHJhdGlvbi5jcmVhdG9yLmFwcGx5QWJpbGl0eSgpLCF0aGlzLl9pc0FwcGx5aW5nJiZ0aGlzLmlzUHJpbWFyeSYmdC5pbmRleE9mKHRoaXMuYXR0cmlidXRlTmFtZSk+LTEmJnRoaXMucmVnaXN0cmF0aW9uLmNyZWF0b3ImJih0aGlzLmlzRGlzY2xvc2VkP3RoaXMucmVnaXN0cmF0aW9uLmNyZWF0b3IuZGlzY2xvc2UoKTp0aGlzLnR5cGUuY2FuQ29uY2VhbCYmdGhpcy5yZWdpc3RyYXRpb24uY3JlYXRvci5jb25jZWFsKCkpfSxlLnByb3RvdHlwZS5hcHBseT1mdW5jdGlvbih0KXt2YXIgZT10aGlzO3RoaXMuY2FuRGlzY2xvc2UmJih0aGlzLl9pc0FwcGx5aW5nPSEwLHRoaXMuc2V0QXR0cmlidXRlKHRoaXMuYXR0cmlidXRlTmFtZSx0KSx0aGlzLnJlcXVlc3QoKGZ1bmN0aW9uKCl7ZS5faXNBcHBseWluZz0hMX0pKSl9LHIuaXNEaXNjbG9zZWQuZ2V0PWZ1bmN0aW9uKCl7cmV0dXJuInRydWUiPT09dGhpcy5nZXRBdHRyaWJ1dGUodGhpcy5hdHRyaWJ1dGVOYW1lKX0sci5pc0luaXRpYWxseURpc2Nsb3NlZC5nZXQ9ZnVuY3Rpb24oKXtyZXR1cm4gdGhpcy5faXNJbml0aWFsbHlEaXNjbG9zZWR9LGUucHJvdG90eXBlLmZvY3VzPWZ1bmN0aW9uKCl7dC5wcm90b3R5cGUuZm9jdXMuY2FsbCh0aGlzKSx0aGlzLnNjcm9sbEludG9WaWV3KCl9LGUucHJvdG90eXBlLm1lYXN1cmU9ZnVuY3Rpb24odCl7dmFyIGU9dGhpcy5yZWN0O3RoaXMuX2R4PXQueC1lLngsdGhpcy5fZHk9dC55LWUueX0sci5keC5nZXQ9ZnVuY3Rpb24oKXtyZXR1cm4gdGhpcy5fZHh9LHIuZHkuZ2V0PWZ1bmN0aW9uKCl7cmV0dXJuIHRoaXMuX2R5fSxPYmplY3QuZGVmaW5lUHJvcGVydGllcyhlLnByb3RvdHlwZSxyKSxPYmplY3QuZGVmaW5lUHJvcGVydGllcyhlLG4pLGV9KF90KSxJdD17UFJFVkVOVF9DT05DRUFMOncuYXR0ci5zZWxlY3RvcigicHJldmVudC1jb25jZWFsIiksR1JPVVA6dy5hdHRyKCJncm91cCIpfSxMdD1mdW5jdGlvbih0KXtmdW5jdGlvbiBlKGUscil7dC5jYWxsKHRoaXMsciksdGhpcy5kaXNjbG9zdXJlSW5zdGFuY2VDbGFzc05hbWU9ZSx0aGlzLl9tZW1iZXJzPVtdLHRoaXMuX2luZGV4PS0xLHRoaXMuX2lzUmV0cmlldmluZz0hMSx0aGlzLl9oYXNSZXRyaWV2ZWQ9ITEsdGhpcy5faXNHcm91cGVkPSEwfXQmJihlLl9fcHJvdG9fXz10KSxlLnByb3RvdHlwZT1PYmplY3QuY3JlYXRlKHQmJnQucHJvdG90eXBlKSxlLnByb3RvdHlwZS5jb25zdHJ1Y3Rvcj1lO3ZhciByPXtwcm94eTp7Y29uZmlndXJhYmxlOiEwfSxtZW1iZXJzOntjb25maWd1cmFibGU6ITB9LGxlbmd0aDp7Y29uZmlndXJhYmxlOiEwfSxpbmRleDp7Y29uZmlndXJhYmxlOiEwfSxjdXJyZW50Ontjb25maWd1cmFibGU6ITB9LGhhc0ZvY3VzOntjb25maWd1cmFibGU6ITB9LGlzR3JvdXBlZDp7Y29uZmlndXJhYmxlOiEwfSxjYW5Vbmdyb3VwOntjb25maWd1cmFibGU6ITB9fSxuPXtpbnN0YW5jZUNsYXNzTmFtZTp7Y29uZmlndXJhYmxlOiEwfX07cmV0dXJuIG4uaW5zdGFuY2VDbGFzc05hbWUuZ2V0PWZ1bmN0aW9uKCl7cmV0dXJuIkRpc2Nsb3N1cmVzR3JvdXAifSxlLnByb3RvdHlwZS5pbml0PWZ1bmN0aW9uKCl7dGhpcy5hZGRBc2NlbnQoQXQuQURERUQsdGhpcy51cGRhdGUuYmluZCh0aGlzKSksdGhpcy5hZGRBc2NlbnQoQXQuUkVUUklFVkUsdGhpcy5yZXRyaWV2ZS5iaW5kKHRoaXMpKSx0aGlzLmFkZEFzY2VudChBdC5SRU1PVkVELHRoaXMudXBkYXRlLmJpbmQodGhpcykpLHRoaXMuZGVzY2VuZChBdC5HUk9VUCksdGhpcy5faXNHcm91cGVkPSJmYWxzZSIhPT10aGlzLmdldEF0dHJpYnV0ZShJdC5HUk9VUCksdGhpcy51cGRhdGUoKX0sci5wcm94eS5nZXQ9ZnVuY3Rpb24oKXt2YXIgZT10aGlzLHI9e3NldCBpbmRleCh0KXtlLmluZGV4PXR9LGdldCBpbmRleCgpe3JldHVybiBlLmluZGV4fSxnZXQgbGVuZ3RoKCl7cmV0dXJuIGUubGVuZ3RofSxnZXQgY3VycmVudCgpe3ZhciB0PWUuY3VycmVudDtyZXR1cm4gdD90LnByb3h5Om51bGx9LGdldCBtZW1iZXJzKCl7cmV0dXJuIGUubWVtYmVycy5tYXAoKGZ1bmN0aW9uKHQpe3JldHVybiB0LnByb3h5fSkpfSxnZXQgaGFzRm9jdXMoKXtyZXR1cm4gZS5oYXNGb2N1c30sc2V0IGlzR3JvdXBlZCh0KXtlLmlzR3JvdXBlZD10fSxnZXQgaXNHcm91cGVkKCl7cmV0dXJuIGUuaXNHcm91cGVkfX07cmV0dXJuIHB0LmNhbGwodGhpcyx0LnByb3RvdHlwZS5wcm94eSxyKX0sZS5wcm90b3R5cGUudmFsaWRhdGU9ZnVuY3Rpb24odCl7cmV0dXJuITB9LGUucHJvdG90eXBlLmdldE1lbWJlcnM9ZnVuY3Rpb24oKXt2YXIgdD10aGlzLGU9dGhpcy5lbGVtZW50LmdldERlc2NlbmRhbnRJbnN0YW5jZXModGhpcy5kaXNjbG9zdXJlSW5zdGFuY2VDbGFzc05hbWUsdGhpcy5jb25zdHJ1Y3Rvci5pbnN0YW5jZUNsYXNzTmFtZSwhMCk7dGhpcy5fbWVtYmVycz1lLmZpbHRlcih0aGlzLnZhbGlkYXRlLmJpbmQodGhpcykpLmZpbHRlcigoZnVuY3Rpb24odCl7cmV0dXJuIHQuaXNFbmFibGVkfSkpLGUuZmlsdGVyKChmdW5jdGlvbihlKXtyZXR1cm4hdC5fbWVtYmVycy5pbmNsdWRlcyhlKX0pKS5mb3JFYWNoKChmdW5jdGlvbih0KXtyZXR1cm4gdC5jb25jZWFsKCl9KSl9LGUucHJvdG90eXBlLnJldHJpZXZlPWZ1bmN0aW9uKHQpe3ZvaWQgMD09PXQmJih0PSExKSx0aGlzLl9pc1JldHJpZXZpbmd8fHRoaXMuX2hhc1JldHJpZXZlZCYmIXR8fCh0aGlzLl9pc1JldHJpZXZpbmc9ITAsdGhpcy5yZXF1ZXN0KHRoaXMuX3JldHJpZXZlLmJpbmQodGhpcykpKX0sZS5wcm90b3R5cGUuX3JldHJpZXZlPWZ1bmN0aW9uKCl7dmFyIHQ9dGhpcztpZih0aGlzLmdldE1lbWJlcnMoKSx0aGlzLl9pc1JldHJpZXZpbmc9ITEsdGhpcy5faGFzUmV0cmlldmVkPSEwLHRoaXMuaGFzaClmb3IodmFyIGU9MDtlPHRoaXMubGVuZ3RoO2UrKyl7dmFyIHI9dGhpcy5tZW1iZXJzW2VdO2lmKHRoaXMuaGFzaD09PXIuaWQpcmV0dXJuIHRoaXMuaW5kZXg9ZSx0aGlzLnJlcXVlc3QoKGZ1bmN0aW9uKCl7dC5hc2NlbmQoQXQuU1BPVExJR0hUKX0pKSxlfWZvcih2YXIgbj0wO248dGhpcy5sZW5ndGg7bisrKXtpZih0aGlzLm1lbWJlcnNbbl0uaXNJbml0aWFsbHlEaXNjbG9zZWQpcmV0dXJuIHRoaXMuaW5kZXg9bixufXJldHVybiB0aGlzLmdldEluZGV4KCl9LGUucHJvdG90eXBlLnVwZGF0ZT1mdW5jdGlvbigpe3RoaXMuZ2V0TWVtYmVycygpLHRoaXMuX2hhc1JldHJpZXZlZCYmdGhpcy5nZXRJbmRleCgpfSxyLm1lbWJlcnMuZ2V0PWZ1bmN0aW9uKCl7cmV0dXJuIHRoaXMuX21lbWJlcnN9LHIubGVuZ3RoLmdldD1mdW5jdGlvbigpe3JldHVybiB0aGlzLm1lbWJlcnM/dGhpcy5tZW1iZXJzLmxlbmd0aDowfSxlLnByb3RvdHlwZS5nZXRJbmRleD1mdW5jdGlvbih0KXt2b2lkIDA9PT10JiYodD0tMSksdGhpcy5faW5kZXg9dm9pZCAwO2Zvcih2YXIgZT10LHI9MDtyPHRoaXMubGVuZ3RoO3IrKylpZih0aGlzLm1lbWJlcnNbcl0uaXNEaXNjbG9zZWQpe2U9cjticmVha31yZXR1cm4gdGhpcy5pbmRleD1lLGV9LHIuaW5kZXguZ2V0PWZ1bmN0aW9uKCl7cmV0dXJuIHRoaXMuX2luZGV4fSxyLmluZGV4LnNldD1mdW5jdGlvbih0KXtpZighKHQ8LTF8fHQ+PXRoaXMubGVuZ3RofHx0PT09dGhpcy5faW5kZXgpKXt0aGlzLl9pbmRleD10O2Zvcih2YXIgZT0wO2U8dGhpcy5sZW5ndGg7ZSsrKXt2YXIgcj10aGlzLm1lbWJlcnNbZV07dD09PWU/ci5pc0Rpc2Nsb3NlZHx8ci5kaXNjbG9zZSghMCk6IXRoaXMuaXNHcm91cGVkJiZ0aGlzLmNhblVuZ3JvdXB8fCFyLmlzRGlzY2xvc2VkfHxyLmNvbmNlYWwoITApfXRoaXMuYXBwbHkoKX19LHIuY3VycmVudC5nZXQ9ZnVuY3Rpb24oKXtyZXR1cm4tMT09PXRoaXMuX2luZGV4fHxpc05hTih0aGlzLl9pbmRleCk/bnVsbDp0aGlzLl9tZW1iZXJzW3RoaXMuX2luZGV4XXx8bnVsbH0sci5jdXJyZW50LnNldD1mdW5jdGlvbih0KXt0aGlzLmluZGV4PXRoaXMubWVtYmVycy5pbmRleE9mKHQpfSxyLmhhc0ZvY3VzLmdldD1mdW5jdGlvbigpe3ZhciB0PXRoaXMuY3VycmVudDtyZXR1cm4hIXQmJnQuaGFzRm9jdXN9LHIuaXNHcm91cGVkLnNldD1mdW5jdGlvbih0KXt2YXIgZT0hIXQ7dGhpcy5faXNHcm91cGVkIT09ZSYmKHRoaXMuX2lzR3JvdXBlZD1lLHRoaXMuc2V0QXR0cmlidXRlKEl0LkdST1VQLCEhdCksdGhpcy51cGRhdGUoKSl9LHIuaXNHcm91cGVkLmdldD1mdW5jdGlvbigpe3JldHVybiB0aGlzLl9pc0dyb3VwZWR9LHIuY2FuVW5ncm91cC5nZXQ9ZnVuY3Rpb24oKXtyZXR1cm4hMX0sZS5wcm90b3R5cGUubXV0YXRlPWZ1bmN0aW9uKHQpe3QuaW5jbHVkZXMoSXQuR1JPVVApJiYodGhpcy5pc0dyb3VwZWQ9ImZhbHNlIiE9PXRoaXMuZ2V0QXR0cmlidXRlKEl0LkdST1VQKSl9LGUucHJvdG90eXBlLmFwcGx5PWZ1bmN0aW9uKCl7fSxlLnByb3RvdHlwZS5kaXNwb3NlPWZ1bmN0aW9uKCl7dC5wcm90b3R5cGUuZGlzcG9zZS5jYWxsKHRoaXMpLHRoaXMuZGVzY2VuZChBdC5VTkdST1VQKSx0aGlzLl9tZW1iZXJzPW51bGx9LE9iamVjdC5kZWZpbmVQcm9wZXJ0aWVzKGUucHJvdG90eXBlLHIpLE9iamVjdC5kZWZpbmVQcm9wZXJ0aWVzKGUsbiksZX0oX3QpLE10PXtFWFBBTkQ6e2lkOiJleHBhbmRlZCIsYXJpYVN0YXRlOiEwLGFyaWFDb250cm9sczohMCxjYW5Db25jZWFsOiEwLGNhbkRpc2FibGU6ITB9LFNFTEVDVDp7aWQ6InNlbGVjdGVkIixhcmlhU3RhdGU6ITAsYXJpYUNvbnRyb2xzOiEwLGNhbkNvbmNlYWw6ITEsY2FuRGlzYWJsZTohMH0sT1BFTkVEOntpZDoib3BlbmVkIixhcmlhU3RhdGU6ITEsYXJpYUNvbnRyb2xzOiEwLGNhbkNvbmNlYWw6ITAsY2FuRGlzYWJsZTohMX19LER0PWZ1bmN0aW9uKHQpe2Z1bmN0aW9uIGUoKXt0LmNhbGwodGhpcyxNdC5FWFBBTkQpfXQmJihlLl9fcHJvdG9fXz10KSxlLnByb3RvdHlwZT1PYmplY3QuY3JlYXRlKHQmJnQucHJvdG90eXBlKSxlLnByb3RvdHlwZS5jb25zdHJ1Y3Rvcj1lO3ZhciByPXtpbnN0YW5jZUNsYXNzTmFtZTp7Y29uZmlndXJhYmxlOiEwfX07cmV0dXJuIHIuaW5zdGFuY2VDbGFzc05hbWUuZ2V0PWZ1bmN0aW9uKCl7cmV0dXJuIkNvbGxhcHNlQnV0dG9uIn0sT2JqZWN0LmRlZmluZVByb3BlcnRpZXMoZSxyKSxlfShDdCkseHQ9e0NPTExBUFNFOncuc2VsZWN0b3IoImNvbGxhcHNlIiksQ09MTEFQU0lORzp3LnNlbGVjdG9yKCJjb2xsYXBzaW5nIil9LFJ0PWZ1bmN0aW9uKHQpe2Z1bmN0aW9uIGUoKXt0LmNhbGwodGhpcyxNdC5FWFBBTkQseHQuQ09MTEFQU0UsRHQsIkNvbGxhcHNlc0dyb3VwIil9dCYmKGUuX19wcm90b19fPXQpLGUucHJvdG90eXBlPU9iamVjdC5jcmVhdGUodCYmdC5wcm90b3R5cGUpLGUucHJvdG90eXBlLmNvbnN0cnVjdG9yPWU7dmFyIHI9e2luc3RhbmNlQ2xhc3NOYW1lOntjb25maWd1cmFibGU6ITB9fTtyZXR1cm4gci5pbnN0YW5jZUNsYXNzTmFtZS5nZXQ9ZnVuY3Rpb24oKXtyZXR1cm4iQ29sbGFwc2UifSxlLnByb3RvdHlwZS5pbml0PWZ1bmN0aW9uKCl7dC5wcm90b3R5cGUuaW5pdC5jYWxsKHRoaXMpLHRoaXMubGlzdGVuKCJ0cmFuc2l0aW9uZW5kIix0aGlzLnRyYW5zaXRpb25lbmQuYmluZCh0aGlzKSl9LGUucHJvdG90eXBlLnRyYW5zaXRpb25lbmQ9ZnVuY3Rpb24odCl7dGhpcy5yZW1vdmVDbGFzcyh4dC5DT0xMQVBTSU5HKSx0aGlzLmlzRGlzY2xvc2VkfHwodGhpcy5pc0xlZ2FjeT90aGlzLnN0eWxlLm1heEhlaWdodD0iIjp0aGlzLnN0eWxlLnJlbW92ZVByb3BlcnR5KCItLWNvbGxhcHNlLW1heC1oZWlnaHQiKSl9LGUucHJvdG90eXBlLnVuYm91bmQ9ZnVuY3Rpb24oKXt0aGlzLmlzTGVnYWN5P3RoaXMuc3R5bGUubWF4SGVpZ2h0PSJub25lIjp0aGlzLnN0eWxlLnNldFByb3BlcnR5KCItLWNvbGxhcHNlLW1heC1oZWlnaHQiLCJub25lIil9LGUucHJvdG90eXBlLmRpc2Nsb3NlPWZ1bmN0aW9uKGUpe3ZhciByPXRoaXM7aWYoITA9PT10aGlzLmlzRGlzY2xvc2VkfHwhdGhpcy5pc0VuYWJsZWQpcmV0dXJuITE7dGhpcy51bmJvdW5kKCksdGhpcy5yZXF1ZXN0KChmdW5jdGlvbigpe3IuYWRkQ2xhc3MoeHQuQ09MTEFQU0lORyksci5hZGp1c3QoKSxyLnJlcXVlc3QoKGZ1bmN0aW9uKCl7dC5wcm90b3R5cGUuZGlzY2xvc2UuY2FsbChyLGUpfSkpfSkpfSxlLnByb3RvdHlwZS5jb25jZWFsPWZ1bmN0aW9uKGUscil7dmFyIG49dGhpcztpZighMT09PXRoaXMuaXNEaXNjbG9zZWQpcmV0dXJuITE7dGhpcy5yZXF1ZXN0KChmdW5jdGlvbigpe24uYWRkQ2xhc3MoeHQuQ09MTEFQU0lORyksbi5hZGp1c3QoKSxuLnJlcXVlc3QoKGZ1bmN0aW9uKCl7dC5wcm90b3R5cGUuY29uY2VhbC5jYWxsKG4sZSxyKX0pKX0pKX0sZS5wcm90b3R5cGUuYWRqdXN0PWZ1bmN0aW9uKCl7dGhpcy5zZXRQcm9wZXJ0eSgiLS1jb2xsYXBzZXIiLCJub25lIik7dmFyIHQ9dGhpcy5ub2RlLm9mZnNldEhlaWdodDt0aGlzLnNldFByb3BlcnR5KCItLWNvbGxhcHNlIiwtdCsicHgiKSx0aGlzLnNldFByb3BlcnR5KCItLWNvbGxhcHNlciIsIiIpfSxlLnByb3RvdHlwZS5yZXNldD1mdW5jdGlvbigpe3RoaXMuaXNQcmlzdGluZXx8KHRoaXMuaXNEaXNjbG9zZWQ9ITEpfSxlLnByb3RvdHlwZS5fZWxlY3RQcmltYXJpZXM9ZnVuY3Rpb24oZSl7dmFyIHI9dGhpcy5lbGVtZW50LnBhcmVudC5pbnN0YW5jZXMubWFwKChmdW5jdGlvbih0KXtyZXR1cm4gdC5jb2xsYXBzZVByaW1hcnl9KSkuZmlsdGVyKChmdW5jdGlvbih0KXtyZXR1cm4gdm9pZCAwIT09dCYmZS5pbmRleE9mKHQpPi0xfSkpO2lmKDE9PT1yLmxlbmd0aClyZXR1cm4gcjtpZigxPT09KGU9dC5wcm90b3R5cGUuX2VsZWN0UHJpbWFyaWVzLmNhbGwodGhpcyxlKSkubGVuZ3RoKXJldHVybiBlO3ZhciBuPWUuZmlsdGVyKChmdW5jdGlvbih0KXtyZXR1cm4gdC5keT49MH0pKTtpZihuLmxlbmd0aD4wJiYoZT1uKSwxPT09ZS5sZW5ndGgpcmV0dXJuIGU7dmFyIGk9TWF0aC5taW4uYXBwbHkoTWF0aCxlLm1hcCgoZnVuY3Rpb24odCl7cmV0dXJuIHQuZHl9KSkpLG89ZS5maWx0ZXIoKGZ1bmN0aW9uKHQpe3JldHVybiB0LmR5PT09aX0pKTtyZXR1cm4gby5sZW5ndGg+MCYmKGU9byksMT09PWUubGVuZ3RofHxlLnNvcnQoKGZ1bmN0aW9uKHQsZSl7cmV0dXJuIE1hdGguYWJzKGUuZHgpLU1hdGguYWJzKHQuZHgpfSkpLGV9LE9iamVjdC5kZWZpbmVQcm9wZXJ0aWVzKGUsciksZX0oTnQpLGt0PWZ1bmN0aW9uKHQpe2Z1bmN0aW9uIGUoKXt0LmNhbGwodGhpcywiQ29sbGFwc2UiKX10JiYoZS5fX3Byb3RvX189dCksZS5wcm90b3R5cGU9T2JqZWN0LmNyZWF0ZSh0JiZ0LnByb3RvdHlwZSksZS5wcm90b3R5cGUuY29uc3RydWN0b3I9ZTt2YXIgcj17Y2FuVW5ncm91cDp7Y29uZmlndXJhYmxlOiEwfX0sbj17aW5zdGFuY2VDbGFzc05hbWU6e2NvbmZpZ3VyYWJsZTohMH19O3JldHVybiBuLmluc3RhbmNlQ2xhc3NOYW1lLmdldD1mdW5jdGlvbigpe3JldHVybiJDb2xsYXBzZXNHcm91cCJ9LHIuY2FuVW5ncm91cC5nZXQ9ZnVuY3Rpb24oKXtyZXR1cm4hMH0sT2JqZWN0LmRlZmluZVByb3BlcnRpZXMoZS5wcm90b3R5cGUsciksT2JqZWN0LmRlZmluZVByb3BlcnRpZXMoZSxuKSxlfShMdCksSHQ9e0NIQU5HRTp3KCJlcXVpc2l6ZWQiKX0sR3Q9ZnVuY3Rpb24odCl7ZnVuY3Rpb24gZSgpe3QuYXBwbHkodGhpcyxhcmd1bWVudHMpfXQmJihlLl9fcHJvdG9fXz10KSxlLnByb3RvdHlwZT1PYmplY3QuY3JlYXRlKHQmJnQucHJvdG90eXBlKSxlLnByb3RvdHlwZS5jb25zdHJ1Y3Rvcj1lO3ZhciByPXtpbnN0YW5jZUNsYXNzTmFtZTp7Y29uZmlndXJhYmxlOiEwfX07cmV0dXJuIHIuaW5zdGFuY2VDbGFzc05hbWUuZ2V0PWZ1bmN0aW9uKCl7cmV0dXJuIkVxdWlzaXplZCJ9LGUucHJvdG90eXBlLmluaXQ9ZnVuY3Rpb24oKXt0aGlzLmFzY2VuZChIdC5DSEFOR0UpfSxlLnByb3RvdHlwZS5tZWFzdXJlPWZ1bmN0aW9uKCl7cmV0dXJuIHRoaXMuaXNMZWdhY3kmJih0aGlzLnN0eWxlLndpZHRoPSJhdXRvIiksdGhpcy5nZXRSZWN0KCkud2lkdGh9LGUucHJvdG90eXBlLmFkanVzdD1mdW5jdGlvbih0KXt0aGlzLmlzTGVnYWN5JiYodGhpcy5zdHlsZS53aWR0aD10KyJweCIpfSxlLnByb3RvdHlwZS5kaXNwb3NlPWZ1bmN0aW9uKCl7dGhpcy5hc2NlbmQoSHQuQ0hBTkdFKX0sT2JqZWN0LmRlZmluZVByb3BlcnRpZXMoZSxyKSxlfShfdCksJHQ9ZnVuY3Rpb24odCl7ZnVuY3Rpb24gZSgpe3QuYXBwbHkodGhpcyxhcmd1bWVudHMpfXQmJihlLl9fcHJvdG9fXz10KSxlLnByb3RvdHlwZT1PYmplY3QuY3JlYXRlKHQmJnQucHJvdG90eXBlKSxlLnByb3RvdHlwZS5jb25zdHJ1Y3Rvcj1lO3ZhciByPXtpbnN0YW5jZUNsYXNzTmFtZTp7Y29uZmlndXJhYmxlOiEwfX07cmV0dXJuIHIuaW5zdGFuY2VDbGFzc05hbWUuZ2V0PWZ1bmN0aW9uKCl7cmV0dXJuIkVxdWlzaXplZHNHcm91cCJ9LGUucHJvdG90eXBlLmluaXQ9ZnVuY3Rpb24oKXt0aGlzLmlzUmVzaXppbmc9ITAsdGhpcy5pc0xvYWRpbmc9ITAsdGhpcy5hZGRBc2NlbnQoSHQuQ0hBTkdFLHRoaXMucmVzaXplLmJpbmQodGhpcykpfSxlLnByb3RvdHlwZS5sb2FkPWZ1bmN0aW9uKCl7dGhpcy5yZXNpemUoKX0sZS5wcm90b3R5cGUucmVzaXplPWZ1bmN0aW9uKCl7dmFyIHQ9dGhpcy5lbGVtZW50LmdldERlc2NlbmRhbnRJbnN0YW5jZXMoIkVxdWlzaXplZCIpO3RoaXMuaXNMZWdhY3l8fHRoaXMuc3R5bGUuc2V0UHJvcGVydHkoIi0tZXF1aXNpemVkLXdpZHRoIiwiYXV0byIpO3ZhciBlPU1hdGgubWF4LmFwcGx5KE1hdGgsdC5tYXAoKGZ1bmN0aW9uKHQpe3JldHVybiB0Lm1lYXN1cmUoKX0pKSk7dGhpcy5pc0xlZ2FjeT90LmZvckVhY2goKGZ1bmN0aW9uKHQpe3JldHVybiB0LmFkanVzdChlKX0pKTp0aGlzLnN0eWxlLnNldFByb3BlcnR5KCItLWVxdWlzaXplZC13aWR0aCIsZSsicHgiKX0sT2JqZWN0LmRlZmluZVByb3BlcnRpZXMoZSxyKSxlfShfdCksRnQ9e1RPR0dMRTp3LmV2ZW50KCJ0b2dnbGUiKX0sVXQ9ZnVuY3Rpb24odCl7ZnVuY3Rpb24gZSgpe3QuYXBwbHkodGhpcyxhcmd1bWVudHMpfXQmJihlLl9fcHJvdG9fXz10KSxlLnByb3RvdHlwZT1PYmplY3QuY3JlYXRlKHQmJnQucHJvdG90eXBlKSxlLnByb3RvdHlwZS5jb25zdHJ1Y3Rvcj1lO3ZhciByPXtwcmVzc2VkOntjb25maWd1cmFibGU6ITB9LHByb3h5Ontjb25maWd1cmFibGU6ITB9fSxuPXtpbnN0YW5jZUNsYXNzTmFtZTp7Y29uZmlndXJhYmxlOiEwfX07cmV0dXJuIG4uaW5zdGFuY2VDbGFzc05hbWUuZ2V0PWZ1bmN0aW9uKCl7cmV0dXJuIlRvZ2dsZSJ9LGUucHJvdG90eXBlLmluaXQ9ZnVuY3Rpb24oKXt0aGlzLnByZXNzZWQ9InRydWUiPT09dGhpcy5wcmVzc2VkLHRoaXMubGlzdGVuQ2xpY2soKX0sZS5wcm90b3R5cGUuaGFuZGxlQ2xpY2s9ZnVuY3Rpb24oKXt0aGlzLnRvZ2dsZSgpfSxlLnByb3RvdHlwZS50b2dnbGU9ZnVuY3Rpb24oKXt0aGlzLnByZXNzZWQ9InRydWUiIT09dGhpcy5wcmVzc2VkfSxyLnByZXNzZWQuZ2V0PWZ1bmN0aW9uKCl7cmV0dXJuIHRoaXMuZ2V0QXR0cmlidXRlKCJhcmlhLXByZXNzZWQiKX0sci5wcmVzc2VkLnNldD1mdW5jdGlvbih0KXt0aGlzLnNldEF0dHJpYnV0ZSgiYXJpYS1wcmVzc2VkIix0PyJ0cnVlIjoiZmFsc2UiKSx0aGlzLmRpc3BhdGNoKEZ0LlRPR0dMRSx0KX0sci5wcm94eS5nZXQ9ZnVuY3Rpb24oKXt2YXIgZT10aGlzLHI9T2JqZWN0LmFzc2lnbi5jYWxsKHRoaXMsdC5wcm90b3R5cGUucHJveHkse3RvZ2dsZTplLnRvZ2dsZS5iaW5kKGUpfSk7cmV0dXJuIHB0KHIse2dldCBwcmVzc2VkKCl7cmV0dXJuIGUucHJlc3NlZH0sc2V0IHByZXNzZWQodCl7ZS5wcmVzc2VkPXR9fSl9LE9iamVjdC5kZWZpbmVQcm9wZXJ0aWVzKGUucHJvdG90eXBlLHIpLE9iamVjdC5kZWZpbmVQcm9wZXJ0aWVzKGUsbiksZX0oX3QpLHp0PWZ1bmN0aW9uKHQpe2Z1bmN0aW9uIGUoKXt0LmFwcGx5KHRoaXMsYXJndW1lbnRzKX10JiYoZS5fX3Byb3RvX189dCksZS5wcm90b3R5cGU9T2JqZWN0LmNyZWF0ZSh0JiZ0LnByb3RvdHlwZSksZS5wcm90b3R5cGUuY29uc3RydWN0b3I9ZTt2YXIgcj17cHJveHk6e2NvbmZpZ3VyYWJsZTohMH19LG49e2luc3RhbmNlQ2xhc3NOYW1lOntjb25maWd1cmFibGU6ITB9fTtyZXR1cm4gbi5pbnN0YW5jZUNsYXNzTmFtZS5nZXQ9ZnVuY3Rpb24oKXtyZXR1cm4iSW5qZWN0U3ZnIn0sZS5wcm90b3R5cGUuaW5pdD1mdW5jdGlvbigpe3RoaXMubm9kZSYmKHRoaXMuaW1nPXRoaXMubm9kZS5xdWVyeVNlbGVjdG9yKCJpbWciKSksdGhpcy5pc0xlZ2FjeXx8dGhpcy5yZXBsYWNlKCl9LHIucHJveHkuZ2V0PWZ1bmN0aW9uKCl7dmFyIGU9dGhpcztyZXR1cm4gT2JqZWN0LmFzc2lnbi5jYWxsKHRoaXMsdC5wcm90b3R5cGUucHJveHkse3JlcGxhY2U6ZS5yZXBsYWNlLmJpbmQoZSkscmVzdG9yZTplLnJlc3RvcmUuYmluZChlKX0pfSxlLnByb3RvdHlwZS5mZXRjaD1mdW5jdGlvbigpe3ZhciB0PXRoaXM7dGhpcy5pbWcmJih0aGlzLmltZ0lEPXRoaXMuaW1nLmdldEF0dHJpYnV0ZSgiaWQiKSx0aGlzLmltZ0NsYXNzPXRoaXMuaW1nLmdldEF0dHJpYnV0ZSgiY2xhc3MiKSx0aGlzLmltZ1VSTD10aGlzLmltZy5nZXRBdHRyaWJ1dGUoInNyYyIpLGZldGNoKHRoaXMuaW1nVVJMKS50aGVuKChmdW5jdGlvbih0KXtyZXR1cm4gdC50ZXh0KCl9KSkudGhlbigoZnVuY3Rpb24oZSl7dmFyIHI9KG5ldyBET01QYXJzZXIpLnBhcnNlRnJvbVN0cmluZyhlLCJ0ZXh0L2h0bWwiKTt0LnN2Zz1yLnF1ZXJ5U2VsZWN0b3IoInN2ZyIpLHQuc3ZnJiZ0LnJlcGxhY2UoKX0pKSl9LGUucHJvdG90eXBlLnJlcGxhY2U9ZnVuY3Rpb24oKXtpZih0aGlzLnN2Zyl7dGhpcy5pbWdJRCYmdm9pZCAwIT09dGhpcy5pbWdJRCYmdGhpcy5zdmcuc2V0QXR0cmlidXRlKCJpZCIsdGhpcy5pbWdJRCk7dmFyIHQ9dGhpcy5pbWdVUkwubWF0Y2goL1sgXHctXStcLi8pWzBdO3QmJih0PXQuc2xpY2UoMCwtMSksWyJkYXJrIiwibGlnaHQiLCJzeXN0ZW0iXS5pbmNsdWRlcyh0KSYmKHRoaXMuc3ZnLmlubmVySFRNTD10aGlzLnN2Zy5pbm5lckhUTUwucmVwbGFjZUFsbCgnaWQ9ImFydHdvcmstJywnaWQ9IicrdCsiLWFydHdvcmstIiksdGhpcy5zdmcuaW5uZXJIVE1MPXRoaXMuc3ZnLmlubmVySFRNTC5yZXBsYWNlQWxsKCciI2FydHdvcmstJywnIiMnK3QrIi1hcnR3b3JrLSIpKSksdGhpcy5pbWdDbGFzcyYmdm9pZCAwIT09dGhpcy5pbWdDbGFzcyYmdGhpcy5zdmcuc2V0QXR0cmlidXRlKCJjbGFzcyIsdGhpcy5pbWdDbGFzcyksdGhpcy5zdmcuaGFzQXR0cmlidXRlKCJ4bWxuczphIikmJnRoaXMuc3ZnLnJlbW92ZUF0dHJpYnV0ZSgieG1sbnM6YSIpLHRoaXMubm9kZS5zZXRBdHRyaWJ1dGUoImRhdGEtZnItaW5qZWN0LXN2ZyIsITApO3ZhciBlLHI7ZT10aGlzLnN2ZyxyPXsiYXJpYS1oaWRkZW4iOiEwLGZvY3VzYWJsZTohMX0sT2JqZWN0LmtleXMocikuZm9yRWFjaCgoZnVuY3Rpb24odCl7cmV0dXJuIGUuc2V0QXR0cmlidXRlKHQsclt0XSl9KSksdGhpcy5ub2RlLnJlcGxhY2VDaGlsZCh0aGlzLnN2Zyx0aGlzLmltZyl9ZWxzZSB0aGlzLmZldGNoKCl9LGUucHJvdG90eXBlLnJlc3RvcmU9ZnVuY3Rpb24oKXt0aGlzLmltZyYmdGhpcy5zdmcmJih0aGlzLm5vZGUuc2V0QXR0cmlidXRlKCJkYXRhLWZyLWluamVjdC1zdmciLCExKSx0aGlzLm5vZGUucmVwbGFjZUNoaWxkKHRoaXMuaW1nLHRoaXMuc3ZnKSl9LE9iamVjdC5kZWZpbmVQcm9wZXJ0aWVzKGUucHJvdG90eXBlLHIpLE9iamVjdC5kZWZpbmVQcm9wZXJ0aWVzKGUsbiksZX0oX3QpLEJ0PXtJTkpFQ1RfU1ZHOiJbIit3LmF0dHIoImluamVjdC1zdmciKSsiXSJ9LFd0PWZ1bmN0aW9uKHQpe2Z1bmN0aW9uIGUoKXt0LmFwcGx5KHRoaXMsYXJndW1lbnRzKX10JiYoZS5fX3Byb3RvX189dCksZS5wcm90b3R5cGU9T2JqZWN0LmNyZWF0ZSh0JiZ0LnByb3RvdHlwZSksZS5wcm90b3R5cGUuY29uc3RydWN0b3I9ZTt2YXIgcj17cHJveHk6e2NvbmZpZ3VyYWJsZTohMH19LG49e2luc3RhbmNlQ2xhc3NOYW1lOntjb25maWd1cmFibGU6ITB9fTtyZXR1cm4gbi5pbnN0YW5jZUNsYXNzTmFtZS5nZXQ9ZnVuY3Rpb24oKXtyZXR1cm4iQXJ0d29yayJ9LGUucHJvdG90eXBlLmluaXQ9ZnVuY3Rpb24oKXt0aGlzLmlzTGVnYWN5JiZ0aGlzLnJlcGxhY2UoKX0sci5wcm94eS5nZXQ9ZnVuY3Rpb24oKXtyZXR1cm4gT2JqZWN0LmFzc2lnbi5jYWxsKHRoaXMsdC5wcm90b3R5cGUucHJveHkse3JlcGxhY2U6dGhpcy5yZXBsYWNlLmJpbmQodGhpcyl9KX0sZS5wcm90b3R5cGUuZmV0Y2g9ZnVuY3Rpb24oKXt2YXIgdD10aGlzO3RoaXMueGxpbms9dGhpcy5ub2RlLmdldEF0dHJpYnV0ZSgiaHJlZiIpO3ZhciBlPXRoaXMueGxpbmsuc3BsaXQoIiMiKTt0aGlzLnN2Z1VybD1lWzBdLHRoaXMuc3ZnTmFtZT1lWzFdO3ZhciByPW5ldyBYTUxIdHRwUmVxdWVzdDtyLm9ubG9hZD1mdW5jdGlvbigpe3ZhciBlPShuZXcgRE9NUGFyc2VyKS5wYXJzZUZyb21TdHJpbmcoci5yZXNwb25zZVRleHQsInRleHQvaHRtbCIpO3QucmVhbFN2Z0NvbnRlbnQ9ZS5nZXRFbGVtZW50QnlJZCh0LnN2Z05hbWUpLHQucmVhbFN2Z0NvbnRlbnQmJih0LnJlYWxTdmdDb250ZW50LmNsYXNzTGlzdC5hZGQodC5ub2RlLmNsYXNzTGlzdCksdC5yZXBsYWNlKCkpfSxyLm9wZW4oIkdFVCIsdGhpcy5zdmdVcmwpLHIuc2VuZCgpfSxlLnByb3RvdHlwZS5yZXBsYWNlPWZ1bmN0aW9uKCl7dGhpcy5yZWFsU3ZnQ29udGVudD90aGlzLm5vZGUucGFyZW50Tm9kZS5yZXBsYWNlQ2hpbGQodGhpcy5yZWFsU3ZnQ29udGVudCx0aGlzLm5vZGUpOnRoaXMuZmV0Y2goKX0sT2JqZWN0LmRlZmluZVByb3BlcnRpZXMoZS5wcm90b3R5cGUsciksT2JqZWN0LmRlZmluZVByb3BlcnRpZXMoZSxuKSxlfShfdCkscXQ9e0FSVFdPUktfVVNFOncuc2VsZWN0b3IoImFydHdvcmsiKSsiIHVzZSJ9LEt0PXtBU1NFU1NfRklMRToiIit3LmF0dHIuc2VsZWN0b3IoImFzc2Vzcy1maWxlIiksREVUQUlMOncuYXR0ci5zZWxlY3RvcigiYXNzZXNzLWZpbGUiKSsnIFtjbGFzcyQ9Il9fZGV0YWlsIl0sICcrdy5hdHRyLnNlbGVjdG9yKCJhc3Nlc3MtZmlsZSIpKycgW2NsYXNzKj0iX19kZXRhaWwgIl0nfSxWdD17VVBEQVRFOncuZW1pc3Npb24oImFzc2VzcyIsInVwZGF0ZSIpLEFEREVEOncuZW1pc3Npb24oImFzc2VzcyIsImFkZGVkIil9LFl0PWZ1bmN0aW9uKHQpe2Z1bmN0aW9uIGUoKXt0LmFwcGx5KHRoaXMsYXJndW1lbnRzKX10JiYoZS5fX3Byb3RvX189dCksZS5wcm90b3R5cGU9T2JqZWN0LmNyZWF0ZSh0JiZ0LnByb3RvdHlwZSksZS5wcm90b3R5cGUuY29uc3RydWN0b3I9ZTt2YXIgcj17aW5zdGFuY2VDbGFzc05hbWU6e2NvbmZpZ3VyYWJsZTohMH19O3JldHVybiByLmluc3RhbmNlQ2xhc3NOYW1lLmdldD1mdW5jdGlvbigpe3JldHVybiJBc3Nlc3NGaWxlIn0sZS5wcm90b3R5cGUuaW5pdD1mdW5jdGlvbigpe3RoaXMubGFuZz10aGlzLmdldExhbmcodGhpcy5ub2RlKSx0aGlzLmhyZWY9dGhpcy5nZXRBdHRyaWJ1dGUoImhyZWYiKSx0aGlzLmhyZWZsYW5nPXRoaXMuZ2V0QXR0cmlidXRlKCJocmVmbGFuZyIpLHRoaXMuZmlsZT17fSx0aGlzLmdhdGhlcigpLHRoaXMuYWRkQXNjZW50KFZ0LkFEREVELHRoaXMudXBkYXRlLmJpbmQodGhpcykpLHRoaXMuYWRkRGVzY2VudChWdC5BRERFRCx0aGlzLnVwZGF0ZS5iaW5kKHRoaXMpKX0sZS5wcm90b3R5cGUuZ2V0RmlsZUxlbmd0aD1mdW5jdGlvbigpe3ZhciB0PXRoaXM7dm9pZCAwIT09dGhpcy5ocmVmP2ZldGNoKHRoaXMuaHJlZix7bWV0aG9kOiJIRUFEIixtb2RlOiJjb3JzIn0pLnRoZW4oKGZ1bmN0aW9uKGUpe3QubGVuZ3RoPWUuaGVhZGVycy5nZXQoImNvbnRlbnQtbGVuZ3RoIil8fC0xLC0xPT09dC5sZW5ndGgmJmgud2FybigiRmlsZSBzaXplIHVua25vd246ICIrdC5ocmVmKydcblVuYWJsZSB0byBnZXQgSFRUUCBoZWFkZXI6ICJjb250ZW50LWxlbmd0aCInKSx0LmdhdGhlcigpfSkpOnRoaXMubGVuZ3RoPS0xfSxlLnByb3RvdHlwZS5tdXRhdGU9ZnVuY3Rpb24odCl7LTEhPT10LmluZGV4T2YoImhyZWYiKSYmKHRoaXMuaHJlZj10aGlzLmdldEF0dHJpYnV0ZSgiaHJlZiIpLHRoaXMuZ2V0RmlsZUxlbmd0aCgpKSwtMSE9PXQuaW5kZXhPZigiaHJlZmxhbmciKSYmKHRoaXMuaHJlZmxhbmc9dGhpcy5nZXRBdHRyaWJ1dGUoImhyZWZsYW5nIiksdGhpcy5nYXRoZXIoKSl9LGUucHJvdG90eXBlLmdhdGhlcj1mdW5jdGlvbigpe2lmKHRoaXMuaXNMZWdhY3kmJih0aGlzLmxlbmd0aD0tMSksdGhpcy5sZW5ndGgpe2lmKHRoaXMuZGV0YWlscz1bXSx0aGlzLmhyZWYpe3ZhciB0PXRoaXMucGFyc2VFeHRlbnNpb24odGhpcy5ocmVmKTt0JiZ0aGlzLmRldGFpbHMucHVzaCh0LnRvVXBwZXJDYXNlKCkpfS0xIT09dGhpcy5sZW5ndGgmJnRoaXMuZGV0YWlscy5wdXNoKHRoaXMuYnl0ZXNUb1NpemUodGhpcy5sZW5ndGgpKSx0aGlzLmhyZWZsYW5nJiZ0aGlzLmRldGFpbHMucHVzaCh0aGlzLmdldExhbmdEaXNwbGF5TmFtZSh0aGlzLmhyZWZsYW5nKSksdGhpcy51cGRhdGUoKX1lbHNlIHRoaXMuZ2V0RmlsZUxlbmd0aCgpfSxlLnByb3RvdHlwZS51cGRhdGU9ZnVuY3Rpb24oKXt0aGlzLmRldGFpbHMmJih0aGlzLmRlc2NlbmQoVnQuVVBEQVRFLHRoaXMuZGV0YWlscyksdGhpcy5hc2NlbmQoVnQuVVBEQVRFLHRoaXMuZGV0YWlscykpfSxlLnByb3RvdHlwZS5nZXRMYW5nPWZ1bmN0aW9uKHQpe3JldHVybiB0Lmxhbmc/dC5sYW5nOmRvY3VtZW50LmRvY3VtZW50RWxlbWVudD09PXQ/d2luZG93Lm5hdmlnYXRvci5sYW5ndWFnZTp0aGlzLmdldExhbmcodC5wYXJlbnRFbGVtZW50KX0sZS5wcm90b3R5cGUucGFyc2VFeHRlbnNpb249ZnVuY3Rpb24odCl7cmV0dXJuIHQubWF0Y2goL1wuKFx3ezEsOX0pKD86JHxbPyNdKS8pWzBdLnJlcGxhY2UoIi4iLCIiKX0sZS5wcm90b3R5cGUuZ2V0TGFuZ0Rpc3BsYXlOYW1lPWZ1bmN0aW9uKHQpe2lmKHRoaXMuaXNMZWdhY3kpcmV0dXJuIHQ7dmFyIGU9bmV3IEludGwuRGlzcGxheU5hbWVzKFt0aGlzLmxhbmddLHt0eXBlOiJsYW5ndWFnZSJ9KS5vZih0KTtyZXR1cm4gZS5jaGFyQXQoMCkudG9VcHBlckNhc2UoKStlLnNsaWNlKDEpfSxlLnByb3RvdHlwZS5ieXRlc1RvU2l6ZT1mdW5jdGlvbih0KXtpZigtMT09PXQpcmV0dXJuIG51bGw7dmFyIGU9WyJvY3RldHMiLCJrbyIsIk1vIiwiR28iLCJUbyJdOyJieXRlcyI9PT10aGlzLmdldEF0dHJpYnV0ZSh3LmF0dHIoImFzc2Vzcy1maWxlIikpJiYoZT1bImJ5dGVzIiwiS0IiLCJNQiIsIkdCIiwiVEIiXSk7dmFyIHI9cGFyc2VJbnQoTWF0aC5mbG9vcihNYXRoLmxvZyh0KS9NYXRoLmxvZygxZTMpKSwxMCk7aWYoMD09PXIpcmV0dXJuIHQrIiAiK2Vbcl07dmFyIG49dC9NYXRoLnBvdygxZTMsciksaT1NYXRoLnJvdW5kKDEwMCoobitOdW1iZXIuRVBTSUxPTikpLzEwMDtyZXR1cm4gU3RyaW5nKGkpLnJlcGxhY2UoIi4iLCIsIikrIiAiK2Vbcl19LE9iamVjdC5kZWZpbmVQcm9wZXJ0aWVzKGUsciksZX0oX3QpLFh0PWZ1bmN0aW9uKHQpe2Z1bmN0aW9uIGUoKXt0LmFwcGx5KHRoaXMsYXJndW1lbnRzKX10JiYoZS5fX3Byb3RvX189dCksZS5wcm90b3R5cGU9T2JqZWN0LmNyZWF0ZSh0JiZ0LnByb3RvdHlwZSksZS5wcm90b3R5cGUuY29uc3RydWN0b3I9ZTt2YXIgcj17aW5zdGFuY2VDbGFzc05hbWU6e2NvbmZpZ3VyYWJsZTohMH19O3JldHVybiByLmluc3RhbmNlQ2xhc3NOYW1lLmdldD1mdW5jdGlvbigpe3JldHVybiJBc3Nlc3NEZXRhaWwifSxlLnByb3RvdHlwZS5pbml0PWZ1bmN0aW9uKCl7dGhpcy5hZGREZXNjZW50KFZ0LlVQREFURSx0aGlzLnVwZGF0ZS5iaW5kKHRoaXMpKSx0aGlzLmFzY2VuZChWdC5BRERFRCl9LGUucHJvdG90eXBlLnVwZGF0ZT1mdW5jdGlvbih0KXt0aGlzLm5vZGUuaW5uZXJIVE1MPXQuam9pbigiIC0gIil9LE9iamVjdC5kZWZpbmVQcm9wZXJ0aWVzKGUsciksZX0oX3QpLFF0PVsiMzJ4OSIsIjE2eDkiLCIzeDIiLCI0eDMiLCIxeDEiLCIzeDQiLCIyeDMiXSxKdD1mdW5jdGlvbih0LGUpe3JldHVybiBlLm1hcCgoZnVuY3Rpb24oZSl7cmV0dXJuIHcuc2VsZWN0b3IodCsiLS0iK2UpfSkpLmpvaW4oIiwiKX0sWnQ9dy5zZWxlY3RvcigicmVzcG9uc2l2ZS1pbWciKSsiLCAiK0p0KCJyZXNwb25zaXZlLWltZyIsUXQpKyIsICIrdy5zZWxlY3RvcigicmVzcG9uc2l2ZS12aWQiKSsiLCAiK0p0KCJyZXNwb25zaXZlLXZpZCIsWyIxNng5IiwiNHgzIiwiMXgxIl0pLHRlPXtSQVRJTzp3LnNlbGVjdG9yKCJyYXRpbyIpKyIsICIrSnQoInJhdGlvIixRdCkrIiwgIitadH0sZWU9d2luZG93W2ldLHJlPWZ1bmN0aW9uKHQpe2Z1bmN0aW9uIGUoKXt0LmFwcGx5KHRoaXMsYXJndW1lbnRzKX10JiYoZS5fX3Byb3RvX189dCksZS5wcm90b3R5cGU9T2JqZWN0LmNyZWF0ZSh0JiZ0LnByb3RvdHlwZSksZS5wcm90b3R5cGUuY29uc3RydWN0b3I9ZTt2YXIgcj17aW5zdGFuY2VDbGFzc05hbWU6e2NvbmZpZ3VyYWJsZTohMH19O3JldHVybiByLmluc3RhbmNlQ2xhc3NOYW1lLmdldD1mdW5jdGlvbigpe3JldHVybiJSYXRpbyJ9LGUucHJvdG90eXBlLmluaXQ9ZnVuY3Rpb24oKXtpZighZWUuaW50ZXJuYWxzLnN1cHBvcnQuc3VwcG9ydEFzcGVjdFJhdGlvKCkpe2Zvcih2YXIgdCBpbiB0aGlzLnJhdGlvPTE2LzksdGhpcy5jbGFzc05hbWVzKWlmKHRoaXMucmVnaXN0cmF0aW9uLnNlbGVjdG9yLmluZGV4T2YodGhpcy5jbGFzc05hbWVzW3RdKT4wKXt2YXIgZT10aGlzLmNsYXNzTmFtZXNbdF0uc3BsaXQoInJhdGlvLSIpO2VbMV0mJih0aGlzLnJhdGlvPWVbMV0uc3BsaXQoIngiKVswXS9lWzFdLnNwbGl0KCJ4IilbMV0pfXRoaXMuaXNSZW5kZXJpbmc9ITAsdGhpcy51cGRhdGUoKX19LGUucHJvdG90eXBlLnJlbmRlcj1mdW5jdGlvbigpe3RoaXMuZ2V0UmVjdCgpLndpZHRoIT09dGhpcy5jdXJyZW50V2lkdGgmJnRoaXMudXBkYXRlKCl9LGUucHJvdG90eXBlLnVwZGF0ZT1mdW5jdGlvbigpe3RoaXMuY3VycmVudFdpZHRoPXRoaXMuZ2V0UmVjdCgpLndpZHRoLHRoaXMuc3R5bGUuaGVpZ2h0PXRoaXMuY3VycmVudFdpZHRoL3RoaXMucmF0aW8rInB4In0sT2JqZWN0LmRlZmluZVByb3BlcnRpZXMoZSxyKSxlfShfdCksbmU9e1RPUDp3LnNlbGVjdG9yKCJwbGFjZW1lbnQtLXRvcCIpLFJJR0hUOncuc2VsZWN0b3IoInBsYWNlbWVudC0tcmlnaHQiKSxCT1RUT006dy5zZWxlY3RvcigicGxhY2VtZW50LS1ib3R0b20iKSxMRUZUOncuc2VsZWN0b3IoInBsYWNlbWVudC0tbGVmdCIpfSxpZT17U1RBUlQ6dy5zZWxlY3RvcigicGxhY2VtZW50LS1zdGFydCIpLENFTlRFUjp3LnNlbGVjdG9yKCJwbGFjZW1lbnQtLWNlbnRlciIpLEVORDp3LnNlbGVjdG9yKCJwbGFjZW1lbnQtLWVuZCIpfSxvZT17VE9QOiJwbGFjZV90b3AiLFJJR0hUOiJwbGFjZV9yaWdodCIsQk9UVE9NOiJwbGFjZV9ib3R0b20iLExFRlQ6InBsYWNlX2xlZnQifSxzZT17U1RBUlQ6ImFsaWduX3N0YXJ0IixDRU5URVI6ImFsaWduX2NlbnRlciIsRU5EOiJhbGlnbl9lbmQifSxhZT17QVVUTzoicGxhY2VtZW50X2F1dG8iLE1BTlVBTDoicGxhY2VtZW50X21hbnVhbCJ9LGNlPWZ1bmN0aW9uKHQpe2Z1bmN0aW9uIGUoZSxyLG4saSl7dm9pZCAwPT09ZSYmKGU9YWUuQVVUTyksdm9pZCAwPT09ciYmKHI9W29lLkJPVFRPTSxvZS5UT1Asb2UuTEVGVCxvZS5SSUdIVF0pLHZvaWQgMD09PW4mJihuPVtzZS5DRU5URVIsc2UuU1RBUlQsc2UuRU5EXSksdm9pZCAwPT09aSYmKGk9MTYpLHQuY2FsbCh0aGlzKSx0aGlzLl9tb2RlPWUsdGhpcy5fcGxhY2VzPXIsdGhpcy5fYWxpZ25zPW4sdGhpcy5fc2FmZUFyZWFNYXJnaW49aSx0aGlzLl9pc1Nob3duPSExfXQmJihlLl9fcHJvdG9fXz10KSxlLnByb3RvdHlwZT1PYmplY3QuY3JlYXRlKHQmJnQucHJvdG90eXBlKSxlLnByb3RvdHlwZS5jb25zdHJ1Y3Rvcj1lO3ZhciByPXtwcm94eTp7Y29uZmlndXJhYmxlOiEwfSxtb2RlOntjb25maWd1cmFibGU6ITB9LHBsYWNlOntjb25maWd1cmFibGU6ITB9LGFsaWduOntjb25maWd1cmFibGU6ITB9LGlzU2hvd246e2NvbmZpZ3VyYWJsZTohMH19LG49e2luc3RhbmNlQ2xhc3NOYW1lOntjb25maWd1cmFibGU6ITB9fTtyZXR1cm4gbi5pbnN0YW5jZUNsYXNzTmFtZS5nZXQ9ZnVuY3Rpb24oKXtyZXR1cm4iUGxhY2VtZW50In0sZS5wcm90b3R5cGUuaW5pdD1mdW5jdGlvbigpe3RoaXMuaXNSZXNpemluZz0hMH0sci5wcm94eS5nZXQ9ZnVuY3Rpb24oKXt2YXIgZT10aGlzLHI9T2JqZWN0LmFzc2lnbi5jYWxsKHRoaXMsdC5wcm90b3R5cGUucHJveHkse3Nob3c6ZS5zaG93LmJpbmQoZSksaGlkZTplLmhpZGUuYmluZChlKX0pO3JldHVybiBwdChyLHtnZXQgbW9kZSgpe3JldHVybiBlLm1vZGV9LHNldCBtb2RlKHQpe2UubW9kZT10fSxnZXQgcGxhY2UoKXtyZXR1cm4gZS5wbGFjZX0sc2V0IHBsYWNlKHQpe2UucGxhY2U9dH0sZ2V0IGFsaWduKCl7cmV0dXJuIGUuYWxpZ259LHNldCBhbGlnbih0KXtlLmFsaWduPXR9LGdldCBpc1Nob3duKCl7cmV0dXJuIGUuaXNTaG93bn0sc2V0IGlzU2hvd24odCl7ZS5pc1Nob3duPXR9fSl9LHIubW9kZS5nZXQ9ZnVuY3Rpb24oKXtyZXR1cm4gdGhpcy5fbW9kZX0sci5tb2RlLnNldD1mdW5jdGlvbih0KXt0aGlzLl9tb2RlPXR9LHIucGxhY2UuZ2V0PWZ1bmN0aW9uKCl7cmV0dXJuIHRoaXMuX3BsYWNlfSxyLnBsYWNlLnNldD1mdW5jdGlvbih0KXtpZih0aGlzLl9wbGFjZSE9PXQpe3N3aXRjaCh0aGlzLl9wbGFjZSl7Y2FzZSBvZS5UT1A6dGhpcy5yZW1vdmVDbGFzcyhuZS5UT1ApO2JyZWFrO2Nhc2Ugb2UuUklHSFQ6dGhpcy5yZW1vdmVDbGFzcyhuZS5SSUdIVCk7YnJlYWs7Y2FzZSBvZS5CT1RUT006dGhpcy5yZW1vdmVDbGFzcyhuZS5CT1RUT00pO2JyZWFrO2Nhc2Ugb2UuTEVGVDp0aGlzLnJlbW92ZUNsYXNzKG5lLkxFRlQpfXN3aXRjaCh0aGlzLl9wbGFjZT10LHRoaXMuX3BsYWNlKXtjYXNlIG9lLlRPUDp0aGlzLmFkZENsYXNzKG5lLlRPUCk7YnJlYWs7Y2FzZSBvZS5SSUdIVDp0aGlzLmFkZENsYXNzKG5lLlJJR0hUKTticmVhaztjYXNlIG9lLkJPVFRPTTp0aGlzLmFkZENsYXNzKG5lLkJPVFRPTSk7YnJlYWs7Y2FzZSBvZS5MRUZUOnRoaXMuYWRkQ2xhc3MobmUuTEVGVCl9fX0sci5hbGlnbi5nZXQ9ZnVuY3Rpb24oKXtyZXR1cm4gdGhpcy5fYWxpZ259LHIuYWxpZ24uc2V0PWZ1bmN0aW9uKHQpe2lmKHRoaXMuX2FsaWduIT09dCl7c3dpdGNoKHRoaXMuX2FsaWduKXtjYXNlIHNlLlNUQVJUOnRoaXMucmVtb3ZlQ2xhc3MoaWUuU1RBUlQpO2JyZWFrO2Nhc2Ugc2UuQ0VOVEVSOnRoaXMucmVtb3ZlQ2xhc3MoaWUuQ0VOVEVSKTticmVhaztjYXNlIHNlLkVORDp0aGlzLnJlbW92ZUNsYXNzKGllLkVORCl9c3dpdGNoKHRoaXMuX2FsaWduPXQsdGhpcy5fYWxpZ24pe2Nhc2Ugc2UuU1RBUlQ6dGhpcy5hZGRDbGFzcyhpZS5TVEFSVCk7YnJlYWs7Y2FzZSBzZS5DRU5URVI6dGhpcy5hZGRDbGFzcyhpZS5DRU5URVIpO2JyZWFrO2Nhc2Ugc2UuRU5EOnRoaXMuYWRkQ2xhc3MoaWUuRU5EKX19fSxlLnByb3RvdHlwZS5zaG93PWZ1bmN0aW9uKCl7dGhpcy5pc1Nob3duPSEwfSxlLnByb3RvdHlwZS5oaWRlPWZ1bmN0aW9uKCl7dGhpcy5pc1Nob3duPSExfSxyLmlzU2hvd24uZ2V0PWZ1bmN0aW9uKCl7cmV0dXJuIHRoaXMuX2lzU2hvd259LHIuaXNTaG93bi5zZXQ9ZnVuY3Rpb24odCl7dGhpcy5faXNTaG93biE9PXQmJnRoaXMuaXNFbmFibGVkJiYodGhpcy5pc1JlbmRlcmluZz10LHRoaXMuX2lzU2hvd249dCl9LGUucHJvdG90eXBlLnNldFJlZmVyZW50PWZ1bmN0aW9uKHQpe3RoaXMuX3JlZmVyZW50PXR9LGUucHJvdG90eXBlLnJlc2l6ZT1mdW5jdGlvbigpe3RoaXMuc2FmZUFyZWE9e3RvcDp0aGlzLl9zYWZlQXJlYU1hcmdpbixyaWdodDp3aW5kb3cuaW5uZXJXaWR0aC10aGlzLl9zYWZlQXJlYU1hcmdpbixib3R0b206d2luZG93LmlubmVySGVpZ2h0LXRoaXMuX3NhZmVBcmVhTWFyZ2luLGxlZnQ6dGhpcy5fc2FmZUFyZWFNYXJnaW4sY2VudGVyOi41KndpbmRvdy5pbm5lcldpZHRoLG1pZGRsZTouNSp3aW5kb3cuaW5uZXJIZWlnaHR9fSxlLnByb3RvdHlwZS5yZW5kZXI9ZnVuY3Rpb24oKXtpZih0aGlzLl9yZWZlcmVudCl7aWYodGhpcy5yZWN0PXRoaXMuZ2V0UmVjdCgpLHRoaXMucmVmZXJlbnRSZWN0PXRoaXMuX3JlZmVyZW50LmdldFJlY3QoKSx0aGlzLm1vZGU9PT1hZS5BVVRPKXN3aXRjaCh0aGlzLnBsYWNlPXRoaXMuZ2V0UGxhY2UoKSx0aGlzLnBsYWNlKXtjYXNlIG9lLlRPUDpjYXNlIG9lLkJPVFRPTTp0aGlzLmFsaWduPXRoaXMuZ2V0SG9yaXpvbnRhbEFsaWduKCk7YnJlYWs7Y2FzZSBvZS5MRUZUOmNhc2Ugb2UuUklHSFQ6dGhpcy5hbGlnbj10aGlzLmdldFZlcnRpY2FsQWxpZ24oKX12YXIgdCxlO3N3aXRjaCh0aGlzLnBsYWNlKXtjYXNlIG9lLlRPUDplPXRoaXMucmVmZXJlbnRSZWN0LnRvcC10aGlzLnJlY3QuaGVpZ2h0O2JyZWFrO2Nhc2Ugb2UuUklHSFQ6dD10aGlzLnJlZmVyZW50UmVjdC5yaWdodDticmVhaztjYXNlIG9lLkJPVFRPTTplPXRoaXMucmVmZXJlbnRSZWN0LmJvdHRvbTticmVhaztjYXNlIG9lLkxFRlQ6dD10aGlzLnJlZmVyZW50UmVjdC5sZWZ0LXRoaXMucmVjdC53aWR0aH1zd2l0Y2godGhpcy5wbGFjZSl7Y2FzZSBvZS5UT1A6Y2FzZSBvZS5CT1RUT006c3dpdGNoKHRoaXMuYWxpZ24pe2Nhc2Ugc2UuQ0VOVEVSOnQ9dGhpcy5yZWZlcmVudFJlY3QuY2VudGVyLS41KnRoaXMucmVjdC53aWR0aDticmVhaztjYXNlIHNlLlNUQVJUOnQ9dGhpcy5yZWZlcmVudFJlY3QubGVmdDticmVhaztjYXNlIHNlLkVORDp0PXRoaXMucmVmZXJlbnRSZWN0LnJpZ2h0LXRoaXMucmVjdC53aWR0aH1icmVhaztjYXNlIG9lLlJJR0hUOmNhc2Ugb2UuTEVGVDpzd2l0Y2godGhpcy5hbGlnbil7Y2FzZSBzZS5DRU5URVI6ZT10aGlzLnJlZmVyZW50UmVjdC5taWRkbGUtLjUqdGhpcy5yZWN0LmhlaWdodDticmVhaztjYXNlIHNlLlNUQVJUOmU9dGhpcy5yZWZlcmVudFJlY3QudG9wO2JyZWFrO2Nhc2Ugc2UuRU5EOmU9dGhpcy5yZWZlcmVudFJlY3QuYm90dG9tLXRoaXMucmVjdC5oZWlnaHR9fXRoaXMuX3g9PT10JiZ0aGlzLl95PT09ZXx8KHRoaXMuX3g9dCsuNXwwLHRoaXMuX3k9ZSsuNXwwLHRoaXMubm9kZS5zdHlsZS50cmFuc2Zvcm09InRyYW5zbGF0ZSgiK3RoaXMuX3grInB4LCIrdGhpcy5feSsicHgpIil9fSxlLnByb3RvdHlwZS5nZXRQbGFjZT1mdW5jdGlvbigpe2Zvcih2YXIgdD0wLGU9dGhpcy5fcGxhY2VzO3Q8ZS5sZW5ndGg7dCs9MSl7c3dpdGNoKGVbdF0pe2Nhc2Ugb2UuVE9QOmlmKHRoaXMucmVmZXJlbnRSZWN0LnRvcC10aGlzLnJlY3QuaGVpZ2h0PnRoaXMuc2FmZUFyZWEudG9wKXJldHVybiBvZS5UT1A7YnJlYWs7Y2FzZSBvZS5SSUdIVDppZih0aGlzLnJlZmVyZW50UmVjdC5yaWdodCt0aGlzLnJlY3Qud2lkdGg8dGhpcy5zYWZlQXJlYS5yaWdodClyZXR1cm4gb2UuUklHSFQ7YnJlYWs7Y2FzZSBvZS5CT1RUT006aWYodGhpcy5yZWZlcmVudFJlY3QuYm90dG9tK3RoaXMucmVjdC5oZWlnaHQ8dGhpcy5zYWZlQXJlYS5ib3R0b20pcmV0dXJuIG9lLkJPVFRPTTticmVhaztjYXNlIG9lLkxFRlQ6aWYodGhpcy5yZWZlcmVudFJlY3QubGVmdC10aGlzLnJlY3Qud2lkdGg+dGhpcy5zYWZlQXJlYS5sZWZ0KXJldHVybiBvZS5MRUZUfX1yZXR1cm4gdGhpcy5fcGxhY2VzWzBdfSxlLnByb3RvdHlwZS5nZXRIb3Jpem9udGFsQWxpZ249ZnVuY3Rpb24oKXtmb3IodmFyIHQ9MCxlPXRoaXMuX2FsaWduczt0PGUubGVuZ3RoO3QrPTEpe3N3aXRjaChlW3RdKXtjYXNlIHNlLkNFTlRFUjppZih0aGlzLnJlZmVyZW50UmVjdC5jZW50ZXItLjUqdGhpcy5yZWN0LndpZHRoPnRoaXMuc2FmZUFyZWEubGVmdCYmdGhpcy5yZWZlcmVudFJlY3QuY2VudGVyKy41KnRoaXMucmVjdC53aWR0aDx0aGlzLnNhZmVBcmVhLnJpZ2h0KXJldHVybiBzZS5DRU5URVI7YnJlYWs7Y2FzZSBzZS5TVEFSVDppZih0aGlzLnJlZmVyZW50UmVjdC5sZWZ0K3RoaXMucmVjdC53aWR0aDx0aGlzLnNhZmVBcmVhLnJpZ2h0KXJldHVybiBzZS5TVEFSVDticmVhaztjYXNlIHNlLkVORDppZih0aGlzLnJlZmVyZW50UmVjdC5yaWdodC10aGlzLnJlY3Qud2lkdGg+dGhpcy5zYWZlQXJlYS5sZWZ0KXJldHVybiBzZS5FTkR9fXJldHVybiB0aGlzLl9hbGlnbnNbMF19LGUucHJvdG90eXBlLmdldFZlcnRpY2FsQWxpZ249ZnVuY3Rpb24oKXtmb3IodmFyIHQ9MCxlPXRoaXMuX2FsaWduczt0PGUubGVuZ3RoO3QrPTEpe3N3aXRjaChlW3RdKXtjYXNlIHNlLkNFTlRFUjppZih0aGlzLnJlZmVyZW50UmVjdC5taWRkbGUtLjUqdGhpcy5yZWN0LmhlaWdodD50aGlzLnNhZmVBcmVhLnRvcCYmdGhpcy5yZWZlcmVudFJlY3QubWlkZGxlKy41KnRoaXMucmVjdC5oZWlnaHQ8dGhpcy5zYWZlQXJlYS5ib3R0b20pcmV0dXJuIHNlLkNFTlRFUjticmVhaztjYXNlIHNlLlNUQVJUOmlmKHRoaXMucmVmZXJlbnRSZWN0LnRvcCt0aGlzLnJlY3QuaGVpZ2h0PHRoaXMuc2FmZUFyZWEuYm90dG9tKXJldHVybiBzZS5TVEFSVDticmVhaztjYXNlIHNlLkVORDppZih0aGlzLnJlZmVyZW50UmVjdC5ib3R0b20tdGhpcy5yZWN0LmhlaWdodD50aGlzLnNhZmVBcmVhLnRvcClyZXR1cm4gc2UuRU5EfX1yZXR1cm4gdGhpcy5fYWxpZ25zWzBdfSxlLnByb3RvdHlwZS5kaXNwb3NlPWZ1bmN0aW9uKCl7dGhpcy5fcmVmZXJlbnQ9bnVsbCx0LnByb3RvdHlwZS5kaXNwb3NlLmNhbGwodGhpcyl9LE9iamVjdC5kZWZpbmVQcm9wZXJ0aWVzKGUucHJvdG90eXBlLHIpLE9iamVjdC5kZWZpbmVQcm9wZXJ0aWVzKGUsbiksZX0oX3QpLGxlPWZ1bmN0aW9uKHQpe2Z1bmN0aW9uIGUoKXt0LmNhbGwodGhpcyksdGhpcy5faXNTaG93bj0hMX10JiYoZS5fX3Byb3RvX189dCksZS5wcm90b3R5cGU9T2JqZWN0LmNyZWF0ZSh0JiZ0LnByb3RvdHlwZSksZS5wcm90b3R5cGUuY29uc3RydWN0b3I9ZTt2YXIgcj17cGxhY2VtZW50Ontjb25maWd1cmFibGU6ITB9LGlzU2hvd246e2NvbmZpZ3VyYWJsZTohMH19LG49e2luc3RhbmNlQ2xhc3NOYW1lOntjb25maWd1cmFibGU6ITB9fTtyZXR1cm4gbi5pbnN0YW5jZUNsYXNzTmFtZS5nZXQ9ZnVuY3Rpb24oKXtyZXR1cm4iUGxhY2VtZW50UmVmZXJlbnQifSxlLnByb3RvdHlwZS5pbml0PWZ1bmN0aW9uKCl7dGhpcy5yZWdpc3RyYXRpb24uY3JlYXRvci5zZXRSZWZlcmVudCh0aGlzKSx0aGlzLl9wbGFjZW1lbnQ9dGhpcy5yZWdpc3RyYXRpb24uY3JlYXRvcn0sci5wbGFjZW1lbnQuZ2V0PWZ1bmN0aW9uKCl7cmV0dXJuIHRoaXMuX3BsYWNlbWVudH0sci5pc1Nob3duLmdldD1mdW5jdGlvbigpe3JldHVybiB0aGlzLl9pc1Nob3dufSxyLmlzU2hvd24uc2V0PWZ1bmN0aW9uKHQpe3RoaXMuX2lzU2hvd24hPT10JiZ0aGlzLmlzRW5hYmxlZCYmKHRoaXMuX2lzU2hvd249dCx0P3RoaXMucmVnaXN0cmF0aW9uLmNyZWF0b3Iuc2hvdygpOnRoaXMucmVnaXN0cmF0aW9uLmNyZWF0b3IuaGlkZSgpKX0sZS5wcm90b3R5cGUuc2hvdz1mdW5jdGlvbigpe3RoaXMuaXNTaG93bj0hMH0sZS5wcm90b3R5cGUuaGlkZT1mdW5jdGlvbigpe3RoaXMuaXNTaG93bj0hMX0sT2JqZWN0LmRlZmluZVByb3BlcnRpZXMoZS5wcm90b3R5cGUsciksT2JqZWN0LmRlZmluZVByb3BlcnRpZXMoZSxuKSxlfShfdCk7eXQuY29yZT17SW5zdGFuY2U6X3QsQnJlYWtwb2ludHM6bXQsS2V5Q29kZXM6SSxEaXNjbG9zdXJlOk50LERpc2Nsb3N1cmVCdXR0b246Q3QsRGlzY2xvc3VyZXNHcm91cDpMdCxEaXNjbG9zdXJlVHlwZTpNdCxEaXNjbG9zdXJlRXZlbnQ6UHQsRGlzY2xvc3VyZVNlbGVjdG9yOkl0LERpc2Nsb3N1cmVFbWlzc2lvbjpBdCxDb2xsYXBzZTpSdCxDb2xsYXBzZUJ1dHRvbjpEdCxDb2xsYXBzZXNHcm91cDprdCxDb2xsYXBzZVNlbGVjdG9yOnh0LFJvb3RTZWxlY3Rvcjp7Uk9PVDoiOnJvb3QifSxSb290RW1pc3Npb246QyxFcXVpc2l6ZWQ6R3QsRXF1aXNpemVkRW1pc3Npb246SHQsVG9nZ2xlOlV0LEVxdWlzaXplZHNHcm91cDokdCxJbmplY3RTdmc6enQsSW5qZWN0U3ZnU2VsZWN0b3I6QnQsQXJ0d29yazpXdCxBcnR3b3JrU2VsZWN0b3I6cXQsQXNzZXNzRmlsZTpZdCxBc3Nlc3NEZXRhaWw6WHQsQXNzZXNzRW1pc3Npb246VnQsQXNzZXNzU2VsZWN0b3I6S3QsUmF0aW86cmUsUmF0aW9TZWxlY3Rvcjp0ZSxQbGFjZW1lbnQ6Y2UsUGxhY2VtZW50UmVmZXJlbnQ6bGUsUGxhY2VtZW50QWxpZ246c2UsUGxhY2VtZW50UG9zaXRpb246b2UsUGxhY2VtZW50TW9kZTphZX0seXQuaW50ZXJuYWxzLnJlZ2lzdGVyKHl0LmNvcmUuQ29sbGFwc2VTZWxlY3Rvci5DT0xMQVBTRSx5dC5jb3JlLkNvbGxhcHNlKSx5dC5pbnRlcm5hbHMucmVnaXN0ZXIoeXQuY29yZS5JbmplY3RTdmdTZWxlY3Rvci5JTkpFQ1RfU1ZHLHl0LmNvcmUuSW5qZWN0U3ZnKSx5dC5pbnRlcm5hbHMucmVnaXN0ZXIoeXQuY29yZS5SYXRpb1NlbGVjdG9yLlJBVElPLHl0LmNvcmUuUmF0aW8pLHl0LmludGVybmFscy5yZWdpc3Rlcih5dC5jb3JlLkFzc2Vzc1NlbGVjdG9yLkFTU0VTU19GSUxFLHl0LmNvcmUuQXNzZXNzRmlsZSkseXQuaW50ZXJuYWxzLnJlZ2lzdGVyKHl0LmNvcmUuQXNzZXNzU2VsZWN0b3IuREVUQUlMLHl0LmNvcmUuQXNzZXNzRGV0YWlsKTt2YXIgdWU9e1NZU1RFTToic3lzdGVtIixMSUdIVDoibGlnaHQiLERBUks6ImRhcmsifSxwZT17VEhFTUU6ZWUuaW50ZXJuYWxzLm5zLmF0dHIoInRoZW1lIiksU0NIRU1FOmVlLmludGVybmFscy5ucy5hdHRyKCJzY2hlbWUiKSxUUkFOU0lUSU9OOmVlLmludGVybmFscy5ucy5hdHRyKCJ0cmFuc2l0aW9uIil9LGhlPXtMSUdIVDoibGlnaHQiLERBUks6ImRhcmsifSxmZT17U0NIRU1FOmVlLmludGVybmFscy5ucy5lbWlzc2lvbigic2NoZW1lIiwic2NoZW1lIiksVEhFTUU6ZWUuaW50ZXJuYWxzLm5zLmVtaXNzaW9uKCJzY2hlbWUiLCJ0aGVtZSIpLEFTSzplZS5pbnRlcm5hbHMubnMuZW1pc3Npb24oInNjaGVtZSIsImFzayIpfSxkZT17U0NIRU1FOmVlLmludGVybmFscy5ucy5ldmVudCgic2NoZW1lIiksVEhFTUU6ZWUuaW50ZXJuYWxzLm5zLmV2ZW50KCJ0aGVtZSIpfSx5ZT1mdW5jdGlvbih0KXtmdW5jdGlvbiBlKCl7dC5jYWxsKHRoaXMsITEpfXQmJihlLl9fcHJvdG9fXz10KSxlLnByb3RvdHlwZT1PYmplY3QuY3JlYXRlKHQmJnQucHJvdG90eXBlKSxlLnByb3RvdHlwZS5jb25zdHJ1Y3Rvcj1lO3ZhciByPXtwcm94eTp7Y29uZmlndXJhYmxlOiEwfSxzY2hlbWU6e2NvbmZpZ3VyYWJsZTohMH0sdGhlbWU6e2NvbmZpZ3VyYWJsZTohMH19LG49e2luc3RhbmNlQ2xhc3NOYW1lOntjb25maWd1cmFibGU6ITB9fTtyZXR1cm4gbi5pbnN0YW5jZUNsYXNzTmFtZS5nZXQ9ZnVuY3Rpb24oKXtyZXR1cm4iU2NoZW1lIn0sZS5wcm90b3R5cGUuaW5pdD1mdW5jdGlvbigpe3RoaXMuY2hhbmdpbmc9dGhpcy5jaGFuZ2UuYmluZCh0aGlzKSx0aGlzLmhhc0F0dHJpYnV0ZShwZS5UUkFOU0lUSU9OKSYmKHRoaXMucmVtb3ZlQXR0cmlidXRlKHBlLlRSQU5TSVRJT04pLHRoaXMucmVxdWVzdCh0aGlzLnJlc3RvcmVUcmFuc2l0aW9uLmJpbmQodGhpcykpKTt2YXIgdD1lZS5pbnRlcm5hbHMuc3VwcG9ydC5zdXBwb3J0TG9jYWxTdG9yYWdlKCk/bG9jYWxTdG9yYWdlLmdldEl0ZW0oInNjaGVtZSIpOiIiLGU9dGhpcy5nZXRBdHRyaWJ1dGUocGUuU0NIRU1FKTtzd2l0Y2godCl7Y2FzZSB1ZS5EQVJLOmNhc2UgdWUuTElHSFQ6Y2FzZSB1ZS5TWVNURU06dGhpcy5zY2hlbWU9dDticmVhaztkZWZhdWx0OnN3aXRjaChlKXtjYXNlIHVlLkRBUks6dGhpcy5zY2hlbWU9dWUuREFSSzticmVhaztjYXNlIHVlLkxJR0hUOnRoaXMuc2NoZW1lPXVlLkxJR0hUO2JyZWFrO2RlZmF1bHQ6dGhpcy5zY2hlbWU9dWUuU1lTVEVNfX10aGlzLmFkZEFzY2VudChmZS5BU0ssdGhpcy5hc2suYmluZCh0aGlzKSksdGhpcy5hZGRBc2NlbnQoZmUuU0NIRU1FLHRoaXMuYXBwbHkuYmluZCh0aGlzKSl9LHIucHJveHkuZ2V0PWZ1bmN0aW9uKCl7dmFyIGU9dGhpcyxyPXtnZXQgc2NoZW1lKCl7cmV0dXJuIGUuc2NoZW1lfSxzZXQgc2NoZW1lKHQpe2Uuc2NoZW1lPXR9fTtyZXR1cm4gZWUuaW50ZXJuYWxzLnByb3BlcnR5LmNvbXBsZXRlQXNzaWduLmNhbGwodGhpcyx0LnByb3RvdHlwZS5wcm94eSxyKX0sZS5wcm90b3R5cGUucmVzdG9yZVRyYW5zaXRpb249ZnVuY3Rpb24oKXt0aGlzLnNldEF0dHJpYnV0ZShwZS5UUkFOU0lUSU9OLCIiKX0sZS5wcm90b3R5cGUuYXNrPWZ1bmN0aW9uKCl7dGhpcy5kZXNjZW5kKGZlLlNDSEVNRSx0aGlzLnNjaGVtZSl9LGUucHJvdG90eXBlLmFwcGx5PWZ1bmN0aW9uKHQpe3RoaXMuc2NoZW1lPXR9LHIuc2NoZW1lLmdldD1mdW5jdGlvbigpe3JldHVybiB0aGlzLl9zY2hlbWV9LHIuc2NoZW1lLnNldD1mdW5jdGlvbih0KXtpZih0aGlzLl9zY2hlbWUhPT10KXtzd2l0Y2godGhpcy5fc2NoZW1lPXQsdCl7Y2FzZSB1ZS5TWVNURU06dGhpcy5saXN0ZW5QcmVmZXJlbmNlcygpO2JyZWFrO2Nhc2UgdWUuREFSSzp0aGlzLnVubGlzdGVuUHJlZmVyZW5jZXMoKSx0aGlzLnRoZW1lPWhlLkRBUks7YnJlYWs7Y2FzZSB1ZS5MSUdIVDp0aGlzLnVubGlzdGVuUHJlZmVyZW5jZXMoKSx0aGlzLnRoZW1lPWhlLkxJR0hUO2JyZWFrO2RlZmF1bHQ6cmV0dXJuIHZvaWQodGhpcy5zY2hlbWU9dWUuU1lTVEVNKX10aGlzLmRlc2NlbmQoZmUuU0NIRU1FLHQpLGVlLmludGVybmFscy5zdXBwb3J0LnN1cHBvcnRMb2NhbFN0b3JhZ2UoKSYmbG9jYWxTdG9yYWdlLnNldEl0ZW0oInNjaGVtZSIsdCksdGhpcy5zZXRBdHRyaWJ1dGUocGUuU0NIRU1FLHQpLHRoaXMuZGlzcGF0Y2goZGUuU0NIRU1FLHtzY2hlbWU6dGhpcy5fc2NoZW1lfSl9fSxyLnRoZW1lLmdldD1mdW5jdGlvbigpe3JldHVybiB0aGlzLl90aGVtZX0sci50aGVtZS5zZXQ9ZnVuY3Rpb24odCl7aWYodGhpcy5fdGhlbWUhPT10KXN3aXRjaCh0KXtjYXNlIGhlLkxJR0hUOmNhc2UgaGUuREFSSzp0aGlzLl90aGVtZT10LHRoaXMuc2V0QXR0cmlidXRlKHBlLlRIRU1FLHQpLHRoaXMuZGVzY2VuZChmZS5USEVNRSx0KSx0aGlzLmRpc3BhdGNoKGRlLlRIRU1FLHt0aGVtZTp0aGlzLl90aGVtZX0pLGRvY3VtZW50LmRvY3VtZW50RWxlbWVudC5zdHlsZS5jb2xvclNjaGVtZT10PT09aGUuREFSSz8iZGFyayI6IiJ9fSxlLnByb3RvdHlwZS5saXN0ZW5QcmVmZXJlbmNlcz1mdW5jdGlvbigpe3RoaXMuaXNMaXN0ZW5pbmd8fCh0aGlzLmlzTGlzdGVuaW5nPSEwLHRoaXMubWVkaWFRdWVyeT13aW5kb3cubWF0Y2hNZWRpYSgiKHByZWZlcnMtY29sb3Itc2NoZW1lOiBkYXJrKSIpLHRoaXMubWVkaWFRdWVyeS5hZGRFdmVudExpc3RlbmVyJiZ0aGlzLm1lZGlhUXVlcnkuYWRkRXZlbnRMaXN0ZW5lcigiY2hhbmdlIix0aGlzLmNoYW5naW5nKSx0aGlzLmNoYW5nZSgpKX0sZS5wcm90b3R5cGUudW5saXN0ZW5QcmVmZXJlbmNlcz1mdW5jdGlvbigpe3RoaXMuaXNMaXN0ZW5pbmcmJih0aGlzLmlzTGlzdGVuaW5nPSExLHRoaXMubWVkaWFRdWVyeS5yZW1vdmVFdmVudExpc3RlbmVyKCJjaGFuZ2UiLHRoaXMuY2hhbmdpbmcpLHRoaXMubWVkaWFRdWVyeT1udWxsKX0sZS5wcm90b3R5cGUuY2hhbmdlPWZ1bmN0aW9uKCl7dGhpcy5pc0xpc3RlbmluZyYmKHRoaXMudGhlbWU9dGhpcy5tZWRpYVF1ZXJ5Lm1hdGNoZXM/aGUuREFSSzpoZS5MSUdIVCl9LGUucHJvdG90eXBlLm11dGF0ZT1mdW5jdGlvbih0KXt0LmluZGV4T2YocGUuU0NIRU1FKT4tMSYmKHRoaXMuc2NoZW1lPXRoaXMuZ2V0QXR0cmlidXRlKHBlLlNDSEVNRSkpLHQuaW5kZXhPZihwZS5USEVNRSk+LTEmJih0aGlzLnRoZW1lPXRoaXMuZ2V0QXR0cmlidXRlKHBlLlRIRU1FKSl9LGUucHJvdG90eXBlLmRpc3Bvc2U9ZnVuY3Rpb24oKXt0aGlzLnVubGlzdGVuUHJlZmVyZW5jZXMoKX0sT2JqZWN0LmRlZmluZVByb3BlcnRpZXMoZS5wcm90b3R5cGUsciksT2JqZWN0LmRlZmluZVByb3BlcnRpZXMoZSxuKSxlfShlZS5jb3JlLkluc3RhbmNlKSxiZT17U0NIRU1FOiI6cm9vdCIrZWUuaW50ZXJuYWxzLm5zLmF0dHIuc2VsZWN0b3IoInRoZW1lIikrIiwgOnJvb3QiK2VlLmludGVybmFscy5ucy5hdHRyLnNlbGVjdG9yKCJzY2hlbWUiKSxTV0lUQ0hfVEhFTUU6ZWUuaW50ZXJuYWxzLm5zLnNlbGVjdG9yKCJzd2l0Y2gtdGhlbWUiKSxSQURJT19CVVRUT05TOidpbnB1dFtuYW1lPSInK2VlLmludGVybmFscy5ucygicmFkaW9zLXRoZW1lIikrJyJdJ307ZWUuc2NoZW1lPXtTY2hlbWU6eWUsU2NoZW1lVmFsdWU6dWUsU2NoZW1lU2VsZWN0b3I6YmUsU2NoZW1lRW1pc3Npb246ZmUsU2NoZW1lVGhlbWU6aGUsU2NoZW1lRXZlbnQ6ZGV9LGVlLmludGVybmFscy5yZWdpc3RlcihlZS5zY2hlbWUuU2NoZW1lU2VsZWN0b3IuU0NIRU1FLGVlLnNjaGVtZS5TY2hlbWUpO3ZhciBnZT1lZS5pbnRlcm5hbHMubnMuc2VsZWN0b3IoImFjY29yZGlvbiIpLHZlPWVlLmludGVybmFscy5ucy5zZWxlY3RvcigiY29sbGFwc2UiKSxtZT17R1JPVVA6ZWUuaW50ZXJuYWxzLm5zLnNlbGVjdG9yKCJhY2NvcmRpb25zLWdyb3VwIiksQUNDT1JESU9OOmdlLENPTExBUFNFOmdlKyIgPiAiK3ZlKyIsICIrZ2UrIiA+ICo6bm90KCIrZ2UrIik6bm90KCIrdmUrIikgPiAiK3ZlKyIsICIrZ2UrIiA+ICo6bm90KCIrZ2UrIik6bm90KCIrdmUrIikgPiAqOm5vdCgiK2dlKyIpOm5vdCgiK3ZlKyIpID4gIit2ZSxDT0xMQVBTRV9MRUdBQ1k6Z2UrIiAiK3ZlLEJVVFRPTjpnZSsiX19idG4ifSxfZT1mdW5jdGlvbih0KXtmdW5jdGlvbiBlKCl7dC5hcHBseSh0aGlzLGFyZ3VtZW50cyl9dCYmKGUuX19wcm90b19fPXQpLGUucHJvdG90eXBlPU9iamVjdC5jcmVhdGUodCYmdC5wcm90b3R5cGUpLGUucHJvdG90eXBlLmNvbnN0cnVjdG9yPWU7dmFyIHI9e2NvbGxhcHNlUHJpbWFyeTp7Y29uZmlndXJhYmxlOiEwfX0sbj17aW5zdGFuY2VDbGFzc05hbWU6e2NvbmZpZ3VyYWJsZTohMH19O3JldHVybiBuLmluc3RhbmNlQ2xhc3NOYW1lLmdldD1mdW5jdGlvbigpe3JldHVybiJBY2NvcmRpb24ifSxyLmNvbGxhcHNlUHJpbWFyeS5nZXQ9ZnVuY3Rpb24oKXtyZXR1cm4gdGhpcy5lbGVtZW50LmNoaWxkcmVuLm1hcCgoZnVuY3Rpb24odCl7cmV0dXJuIHQuZ2V0SW5zdGFuY2UoIkNvbGxhcHNlQnV0dG9uIil9KSkuZmlsdGVyKChmdW5jdGlvbih0KXtyZXR1cm4gbnVsbCE9PXQmJnQuaGFzQ2xhc3MobWUuQlVUVE9OKX0pKVswXX0sT2JqZWN0LmRlZmluZVByb3BlcnRpZXMoZS5wcm90b3R5cGUsciksT2JqZWN0LmRlZmluZVByb3BlcnRpZXMoZSxuKSxlfShlZS5jb3JlLkluc3RhbmNlKSx3ZT1mdW5jdGlvbih0KXtmdW5jdGlvbiBlKCl7dC5hcHBseSh0aGlzLGFyZ3VtZW50cyl9dCYmKGUuX19wcm90b19fPXQpLGUucHJvdG90eXBlPU9iamVjdC5jcmVhdGUodCYmdC5wcm90b3R5cGUpLGUucHJvdG90eXBlLmNvbnN0cnVjdG9yPWU7dmFyIHI9e2luc3RhbmNlQ2xhc3NOYW1lOntjb25maWd1cmFibGU6ITB9fTtyZXR1cm4gci5pbnN0YW5jZUNsYXNzTmFtZS5nZXQ9ZnVuY3Rpb24oKXtyZXR1cm4iQWNjb3JkaW9uc0dyb3VwIn0sZS5wcm90b3R5cGUudmFsaWRhdGU9ZnVuY3Rpb24oZSl7dmFyIHI9ZS5ub2RlLm1hdGNoZXMoZWUuaW50ZXJuYWxzLmxlZ2FjeS5pc0xlZ2FjeT9tZS5DT0xMQVBTRV9MRUdBQ1k6bWUuQ09MTEFQU0UpO3JldHVybiB0LnByb3RvdHlwZS52YWxpZGF0ZS5jYWxsKHRoaXMsZSkmJnJ9LE9iamVjdC5kZWZpbmVQcm9wZXJ0aWVzKGUsciksZX0oZWUuY29yZS5Db2xsYXBzZXNHcm91cCk7ZWUuYWNjb3JkaW9uPXtBY2NvcmRpb246X2UsQWNjb3JkaW9uU2VsZWN0b3I6bWUsQWNjb3JkaW9uc0dyb3VwOndlfSxlZS5pbnRlcm5hbHMucmVnaXN0ZXIoZWUuYWNjb3JkaW9uLkFjY29yZGlvblNlbGVjdG9yLkdST1VQLGVlLmFjY29yZGlvbi5BY2NvcmRpb25zR3JvdXApLGVlLmludGVybmFscy5yZWdpc3RlcihlZS5hY2NvcmRpb24uQWNjb3JkaW9uU2VsZWN0b3IuQUNDT1JESU9OLGVlLmFjY29yZGlvbi5BY2NvcmRpb24pO3ZhciBTZT17RVFVSVNJWkVEX0JVVFRPTjplZS5pbnRlcm5hbHMubnMuc2VsZWN0b3IoImJ0bnMtZ3JvdXAtLWVxdWlzaXplZCIpKyIgIitlZS5pbnRlcm5hbHMubnMuc2VsZWN0b3IoImJ0biIpLEVRVUlTSVpFRF9HUk9VUDplZS5pbnRlcm5hbHMubnMuc2VsZWN0b3IoImJ0bnMtZ3JvdXAtLWVxdWlzaXplZCIpfTtlZS5idXR0b249e0J1dHRvblNlbGVjdG9yOlNlfSxlZS5pbnRlcm5hbHMucmVnaXN0ZXIoZWUuYnV0dG9uLkJ1dHRvblNlbGVjdG9yLkVRVUlTSVpFRF9CVVRUT04sZWUuY29yZS5FcXVpc2l6ZWQpLGVlLmludGVybmFscy5yZWdpc3RlcihlZS5idXR0b24uQnV0dG9uU2VsZWN0b3IuRVFVSVNJWkVEX0dST1VQLGVlLmNvcmUuRXF1aXNpemVkc0dyb3VwKTt2YXIgRWU9ZnVuY3Rpb24odCl7ZnVuY3Rpb24gZSgpe3QuYXBwbHkodGhpcyxhcmd1bWVudHMpfXQmJihlLl9fcHJvdG9fXz10KSxlLnByb3RvdHlwZT1PYmplY3QuY3JlYXRlKHQmJnQucHJvdG90eXBlKSxlLnByb3RvdHlwZS5jb25zdHJ1Y3Rvcj1lO3ZhciByPXtpbnN0YW5jZUNsYXNzTmFtZTp7Y29uZmlndXJhYmxlOiEwfX07cmV0dXJuIHIuaW5zdGFuY2VDbGFzc05hbWUuZ2V0PWZ1bmN0aW9uKCl7cmV0dXJuIkNhcmREb3dubG9hZCJ9LGUucHJvdG90eXBlLmluaXQ9ZnVuY3Rpb24oKXt2YXIgdD10aGlzO3RoaXMuYWRkQXNjZW50KGVlLmNvcmUuQXNzZXNzRW1pc3Npb24uVVBEQVRFLChmdW5jdGlvbihlKXt0LmRlc2NlbmQoZWUuY29yZS5Bc3Nlc3NFbWlzc2lvbi5VUERBVEUsZSl9KSksdGhpcy5hZGRBc2NlbnQoZWUuY29yZS5Bc3Nlc3NFbWlzc2lvbi5BRERFRCwoZnVuY3Rpb24oKXt0LmRlc2NlbmQoZWUuY29yZS5Bc3Nlc3NFbWlzc2lvbi5BRERFRCl9KSl9LE9iamVjdC5kZWZpbmVQcm9wZXJ0aWVzKGUsciksZX0oZWUuY29yZS5JbnN0YW5jZSksT2U9e0RPV05MT0FEOmVlLmludGVybmFscy5ucy5zZWxlY3RvcigiY2FyZC0tZG93bmxvYWQiKSxET1dOTE9BRF9ERVRBSUw6ZWUuaW50ZXJuYWxzLm5zLnNlbGVjdG9yKCJjYXJkLS1kb3dubG9hZCIpKyIgIitlZS5pbnRlcm5hbHMubnMuc2VsZWN0b3IoImNhcmRfX2VuZCIpKyIgIitlZS5pbnRlcm5hbHMubnMuc2VsZWN0b3IoImNhcmRfX2RldGFpbCIpfTtlZS5jYXJkPXtDYXJkU2VsZWN0b3I6T2UsQ2FyZERvd25sb2FkOkVlfSxlZS5pbnRlcm5hbHMucmVnaXN0ZXIoZWUuY2FyZC5DYXJkU2VsZWN0b3IuRE9XTkxPQUQsZWUuY2FyZC5DYXJkRG93bmxvYWQpLGVlLmludGVybmFscy5yZWdpc3RlcihlZS5jYXJkLkNhcmRTZWxlY3Rvci5ET1dOTE9BRF9ERVRBSUwsZWUuY29yZS5Bc3Nlc3NEZXRhaWwpO3ZhciBqZT17U0VHTUVOVEVEOmVlLmludGVybmFscy5ucy5zZWxlY3Rvcigic2VnbWVudGVkIiksU0VHTUVOVEVEX0VMRU1FTlRTOmVlLmludGVybmFscy5ucy5zZWxlY3Rvcigic2VnbWVudGVkX19lbGVtZW50cyIpLFNFR01FTlRFRF9FTEVNRU5UOmVlLmludGVybmFscy5ucy5zZWxlY3Rvcigic2VnbWVudGVkX19lbGVtZW50IGlucHV0IiksU0VHTUVOVEVEX0xFR0VORDplZS5pbnRlcm5hbHMubnMuc2VsZWN0b3IoInNlZ21lbnRlZF9fbGVnZW5kIil9LFRlPXtBRERFRDplZS5pbnRlcm5hbHMubnMuZW1pc3Npb24oInNlZ21lbnRlZCIsImFkZGVkIiksUkVNT1ZFRDplZS5pbnRlcm5hbHMubnMuZW1pc3Npb24oInNlZ21lbnRlZCIsInJlbW92ZWQiKX0sUGU9ZnVuY3Rpb24odCl7ZnVuY3Rpb24gZSgpe3QuYXBwbHkodGhpcyxhcmd1bWVudHMpfXQmJihlLl9fcHJvdG9fXz10KSxlLnByb3RvdHlwZT1PYmplY3QuY3JlYXRlKHQmJnQucHJvdG90eXBlKSxlLnByb3RvdHlwZS5jb25zdHJ1Y3Rvcj1lO3ZhciByPXtpbnN0YW5jZUNsYXNzTmFtZTp7Y29uZmlndXJhYmxlOiEwfX07cmV0dXJuIHIuaW5zdGFuY2VDbGFzc05hbWUuZ2V0PWZ1bmN0aW9uKCl7cmV0dXJuIlNlZ21lbnRlZCJ9LGUucHJvdG90eXBlLmluaXQ9ZnVuY3Rpb24oKXt0aGlzLmVsZW1lbnRzPXRoaXMubm9kZS5xdWVyeVNlbGVjdG9yKGplLlNFR01FTlRFRF9FTEVNRU5UUyksdGhpcy5sZWdlbmQ9dGhpcy5ub2RlLnF1ZXJ5U2VsZWN0b3IoamUuU0VHTUVOVEVEX0xFR0VORCksdGhpcy5hZGRBc2NlbnQoVGUuQURERUQsdGhpcy5yZXNpemUuYmluZCh0aGlzKSksdGhpcy5hZGRBc2NlbnQoVGUuUkVNT1ZFRCx0aGlzLnJlc2l6ZS5iaW5kKHRoaXMpKSx0aGlzLl9pc0xlZ2VuZElubGluZT10aGlzLmxlZ2VuZCYmdGhpcy5sZWdlbmQuY2xhc3NMaXN0LmNvbnRhaW5zKGVlLnByZWZpeCsiLXNlZ21lbnRlZF9fbGVnZW5kLS1pbmxpbmUiKSx0aGlzLmlzUmVzaXppbmc9ITB9LGUucHJvdG90eXBlLnJlc2l6ZT1mdW5jdGlvbigpe3ZhciB0PWVlLnByZWZpeCsiLXNlZ21lbnRlZC0tdmVydGljYWwiLGU9ZWUucHJlZml4KyItc2VnbWVudGVkX19sZWdlbmQtLWlubGluZSI7dGhpcy5yZW1vdmVDbGFzcyh0KSx0aGlzLl9pc0xlZ2VuZElubGluZSYmKHRoaXMubGVnZW5kLmNsYXNzTGlzdC5hZGQoZSksKHRoaXMubm9kZS5vZmZzZXRXaWR0aD50aGlzLm5vZGUucGFyZW50Tm9kZS5vZmZzZXRXaWR0aHx8dGhpcy5lbGVtZW50cy5zY3JvbGxXaWR0aCt0aGlzLmxlZ2VuZC5vZmZzZXRXaWR0aCsxNj50aGlzLm5vZGUucGFyZW50Tm9kZS5vZmZzZXRXaWR0aCkmJnRoaXMubGVnZW5kLmNsYXNzTGlzdC5yZW1vdmUoZSkpLHRoaXMuZWxlbWVudHMub2Zmc2V0V2lkdGg+dGhpcy5ub2RlLnBhcmVudE5vZGUub2Zmc2V0V2lkdGh8fHRoaXMuZWxlbWVudHMuc2Nyb2xsV2lkdGg+dGhpcy5ub2RlLnBhcmVudE5vZGUub2Zmc2V0V2lkdGg/dGhpcy5hZGRDbGFzcyh0KTp0aGlzLnJlbW92ZUNsYXNzKHQpfSxPYmplY3QuZGVmaW5lUHJvcGVydGllcyhlLHIpLGV9KGVlLmNvcmUuSW5zdGFuY2UpLEFlPWZ1bmN0aW9uKHQpe2Z1bmN0aW9uIGUoKXt0LmFwcGx5KHRoaXMsYXJndW1lbnRzKX10JiYoZS5fX3Byb3RvX189dCksZS5wcm90b3R5cGU9T2JqZWN0LmNyZWF0ZSh0JiZ0LnByb3RvdHlwZSksZS5wcm90b3R5cGUuY29uc3RydWN0b3I9ZTt2YXIgcj17aW5zdGFuY2VDbGFzc05hbWU6e2NvbmZpZ3VyYWJsZTohMH19O3JldHVybiByLmluc3RhbmNlQ2xhc3NOYW1lLmdldD1mdW5jdGlvbigpe3JldHVybiJTZWdtZW50ZWRFbGVtZW50In0sZS5wcm90b3R5cGUuaW5pdD1mdW5jdGlvbigpe3RoaXMuYXNjZW5kKFRlLkFEREVEKX0sZS5wcm90b3R5cGUuZGlzcG9zZT1mdW5jdGlvbigpe3RoaXMuYXNjZW5kKFRlLlJFTU9WRUQpfSxPYmplY3QuZGVmaW5lUHJvcGVydGllcyhlLHIpLGV9KGVlLmNvcmUuSW5zdGFuY2UpO2VlLnNlZ21lbnRlZD17U2VnbWVudGVkU2VsZWN0b3I6amUsU2VnbWVudGVkRW1pc3Npb246VGUsU2VnbWVudGVkRWxlbWVudDpBZSxTZWdtZW50ZWQ6UGV9LGVlLmludGVybmFscy5yZWdpc3RlcihlZS5zZWdtZW50ZWQuU2VnbWVudGVkU2VsZWN0b3IuU0VHTUVOVEVELGVlLnNlZ21lbnRlZC5TZWdtZW50ZWQpLGVlLmludGVybmFscy5yZWdpc3RlcihlZS5zZWdtZW50ZWQuU2VnbWVudGVkU2VsZWN0b3IuU0VHTUVOVEVEX0VMRU1FTlQsZWUuc2VnbWVudGVkLlNlZ21lbnRlZEVsZW1lbnQpO3ZhciBOZT17QlJFQURDUlVNQjplZS5pbnRlcm5hbHMubnMuc2VsZWN0b3IoImJyZWFkY3J1bWIiKSxCVVRUT046ZWUuaW50ZXJuYWxzLm5zLnNlbGVjdG9yKCJicmVhZGNydW1iX19idXR0b24iKX0sQ2U9ZnVuY3Rpb24odCl7ZnVuY3Rpb24gZSgpe3QuY2FsbCh0aGlzKSx0aGlzLmNvdW50PTAsdGhpcy5mb2N1c2luZz10aGlzLmZvY3VzLmJpbmQodGhpcyl9dCYmKGUuX19wcm90b19fPXQpLGUucHJvdG90eXBlPU9iamVjdC5jcmVhdGUodCYmdC5wcm90b3R5cGUpLGUucHJvdG90eXBlLmNvbnN0cnVjdG9yPWU7dmFyIHI9e3Byb3h5Ontjb25maWd1cmFibGU6ITB9LGxpbmtzOntjb25maWd1cmFibGU6ITB9LGNvbGxhcHNlOntjb25maWd1cmFibGU6ITB9LGNvbGxhcHNlUHJpbWFyeTp7Y29uZmlndXJhYmxlOiEwfX0sbj17aW5zdGFuY2VDbGFzc05hbWU6e2NvbmZpZ3VyYWJsZTohMH19O3JldHVybiBuLmluc3RhbmNlQ2xhc3NOYW1lLmdldD1mdW5jdGlvbigpe3JldHVybiJCcmVhZGNydW1iIn0sZS5wcm90b3R5cGUuaW5pdD1mdW5jdGlvbigpe3RoaXMuZ2V0Q29sbGFwc2UoKSx0aGlzLmlzUmVzaXppbmc9ITB9LHIucHJveHkuZ2V0PWZ1bmN0aW9uKCl7dmFyIGU9dGhpcztyZXR1cm4gT2JqZWN0LmFzc2lnbi5jYWxsKHRoaXMsdC5wcm90b3R5cGUucHJveHkse2ZvY3VzOmUuZm9jdXMuYmluZChlKSxkaXNjbG9zZTplLmNvbGxhcHNlLmRpc2Nsb3NlLmJpbmQoZS5jb2xsYXBzZSl9KX0sZS5wcm90b3R5cGUuZ2V0Q29sbGFwc2U9ZnVuY3Rpb24oKXt2YXIgdD10aGlzLmNvbGxhcHNlO3Q/dC5saXN0ZW4oZWUuY29yZS5EaXNjbG9zdXJlRXZlbnQuRElTQ0xPU0UsdGhpcy5mb2N1c2luZyk6dGhpcy5hZGRBc2NlbnQoZWUuY29yZS5EaXNjbG9zdXJlRW1pc3Npb24uQURERUQsdGhpcy5nZXRDb2xsYXBzZS5iaW5kKHRoaXMpKX0sZS5wcm90b3R5cGUucmVzaXplPWZ1bmN0aW9uKCl7dmFyIHQ9dGhpcy5jb2xsYXBzZSxlPXRoaXMubGlua3M7dCYmZS5sZW5ndGgmJih0aGlzLmlzQnJlYWtwb2ludChlZS5jb3JlLkJyZWFrcG9pbnRzLk1EKT90LmJ1dHRvbkhhc0ZvY3VzJiZlWzBdLmZvY3VzKCk6ZS5pbmRleE9mKGRvY3VtZW50LmFjdGl2ZUVsZW1lbnQpPi0xJiZ0LmZvY3VzKCkpfSxyLmxpbmtzLmdldD1mdW5jdGlvbigpe3JldHVybltdLmNvbmNhdCh0aGlzLnF1ZXJ5U2VsZWN0b3JBbGwoImFbaHJlZl0iKSl9LHIuY29sbGFwc2UuZ2V0PWZ1bmN0aW9uKCl7cmV0dXJuIHRoaXMuZWxlbWVudC5nZXREZXNjZW5kYW50SW5zdGFuY2VzKGVlLmNvcmUuQ29sbGFwc2UuaW5zdGFuY2VDbGFzc05hbWUsbnVsbCwhMClbMF19LGUucHJvdG90eXBlLmZvY3VzPWZ1bmN0aW9uKCl7dGhpcy5jb3VudD0wLHRoaXMuX2ZvY3VzKCl9LGUucHJvdG90eXBlLl9mb2N1cz1mdW5jdGlvbigpe3ZhciB0PXRoaXMubGlua3NbMF07dCYmKHQuZm9jdXMoKSx0aGlzLnJlcXVlc3QodGhpcy52ZXJpZnkuYmluZCh0aGlzKSkpfSxlLnByb3RvdHlwZS52ZXJpZnk9ZnVuY3Rpb24oKXtpZih0aGlzLmNvdW50KyssISh0aGlzLmNvdW50PjEwMCkpe3ZhciB0PXRoaXMubGlua3NbMF07dCYmZG9jdW1lbnQuYWN0aXZlRWxlbWVudCE9PXQmJnRoaXMuX2ZvY3VzKCl9fSxyLmNvbGxhcHNlUHJpbWFyeS5nZXQ9ZnVuY3Rpb24oKXtyZXR1cm4gdGhpcy5lbGVtZW50LmNoaWxkcmVuLm1hcCgoZnVuY3Rpb24odCl7cmV0dXJuIHQuZ2V0SW5zdGFuY2UoIkNvbGxhcHNlQnV0dG9uIil9KSkuZmlsdGVyKChmdW5jdGlvbih0KXtyZXR1cm4gbnVsbCE9PXQmJnQuaGFzQ2xhc3MoTmUuQlVUVE9OKX0pKVswXX0sT2JqZWN0LmRlZmluZVByb3BlcnRpZXMoZS5wcm90b3R5cGUsciksT2JqZWN0LmRlZmluZVByb3BlcnRpZXMoZSxuKSxlfShlZS5jb3JlLkluc3RhbmNlKTtlZS5icmVhZGNydW1iPXtCcmVhZGNydW1iU2VsZWN0b3I6TmUsQnJlYWRjcnVtYjpDZX0sZWUuaW50ZXJuYWxzLnJlZ2lzdGVyKGVlLmJyZWFkY3J1bWIuQnJlYWRjcnVtYlNlbGVjdG9yLkJSRUFEQ1JVTUIsZWUuYnJlYWRjcnVtYi5CcmVhZGNydW1iKTt2YXIgSWU9e1RPT0xUSVA6ZWUuaW50ZXJuYWxzLm5zLnNlbGVjdG9yKCJ0b29sdGlwIiksU0hPV046ZWUuaW50ZXJuYWxzLm5zLnNlbGVjdG9yKCJ0b29sdGlwLS1zaG93biIpLEJVVFRPTjplZS5pbnRlcm5hbHMubnMuc2VsZWN0b3IoImJ0bi0tdG9vbHRpcCIpfSxMZT0xLE1lPTIsRGU9ZnVuY3Rpb24odCl7ZnVuY3Rpb24gZSgpe3QuY2FsbCh0aGlzKSx0aGlzLl9zdGF0ZT0wfXQmJihlLl9fcHJvdG9fXz10KSxlLnByb3RvdHlwZT1PYmplY3QuY3JlYXRlKHQmJnQucHJvdG90eXBlKSxlLnByb3RvdHlwZS5jb25zdHJ1Y3Rvcj1lO3ZhciByPXtzdGF0ZTp7Y29uZmlndXJhYmxlOiEwfX0sbj17aW5zdGFuY2VDbGFzc05hbWU6e2NvbmZpZ3VyYWJsZTohMH19O3JldHVybiBuLmluc3RhbmNlQ2xhc3NOYW1lLmdldD1mdW5jdGlvbigpe3JldHVybiJUb29sdGlwUmVmZXJlbnQifSxlLnByb3RvdHlwZS5pbml0PWZ1bmN0aW9uKCl7aWYodC5wcm90b3R5cGUuaW5pdC5jYWxsKHRoaXMpLHRoaXMubGlzdGVuKCJmb2N1c2luIix0aGlzLmZvY3VzSW4uYmluZCh0aGlzKSksdGhpcy5saXN0ZW4oImZvY3Vzb3V0Iix0aGlzLmZvY3VzT3V0LmJpbmQodGhpcykpLCF0aGlzLm1hdGNoZXMoSWUuQlVUVE9OKSl7dmFyIGU9dGhpcy5tb3VzZW92ZXIuYmluZCh0aGlzKTt0aGlzLmxpc3RlbigibW91c2VvdmVyIixlKSx0aGlzLnBsYWNlbWVudC5saXN0ZW4oIm1vdXNlb3ZlciIsZSk7dmFyIHI9dGhpcy5tb3VzZW91dC5iaW5kKHRoaXMpO3RoaXMubGlzdGVuKCJtb3VzZW91dCIsciksdGhpcy5wbGFjZW1lbnQubGlzdGVuKCJtb3VzZW91dCIscil9dGhpcy5hZGRFbWlzc2lvbihlZS5jb3JlLlJvb3RFbWlzc2lvbi5LRVlET1dOLHRoaXMuX2tleWRvd24uYmluZCh0aGlzKSksdGhpcy5saXN0ZW4oImNsaWNrIix0aGlzLl9jbGljay5iaW5kKHRoaXMpKSx0aGlzLmFkZEVtaXNzaW9uKGVlLmNvcmUuUm9vdEVtaXNzaW9uLkNMSUNLLHRoaXMuX2NsaWNrT3V0LmJpbmQodGhpcykpfSxlLnByb3RvdHlwZS5fY2xpY2s9ZnVuY3Rpb24oKXt0aGlzLmZvY3VzKCl9LGUucHJvdG90eXBlLl9jbGlja091dD1mdW5jdGlvbih0KXt0aGlzLm5vZGUuY29udGFpbnModCl8fHRoaXMuYmx1cigpfSxlLnByb3RvdHlwZS5fa2V5ZG93bj1mdW5jdGlvbih0KXtpZih0PT09ZWUuY29yZS5LZXlDb2Rlcy5FU0NBUEUpdGhpcy5ibHVyKCksdGhpcy5jbG9zZSgpfSxlLnByb3RvdHlwZS5jbG9zZT1mdW5jdGlvbigpe3RoaXMuc3RhdGU9MH0sci5zdGF0ZS5nZXQ9ZnVuY3Rpb24oKXtyZXR1cm4gdGhpcy5fc3RhdGV9LHIuc3RhdGUuc2V0PWZ1bmN0aW9uKHQpe3RoaXMuX3N0YXRlIT09dCYmKHRoaXMuaXNTaG93bj10PjAsdGhpcy5fc3RhdGU9dCl9LGUucHJvdG90eXBlLmZvY3VzSW49ZnVuY3Rpb24oKXt0aGlzLnN0YXRlfD1MZX0sZS5wcm90b3R5cGUuZm9jdXNPdXQ9ZnVuY3Rpb24oKXt0aGlzLnN0YXRlJj1+TGV9LGUucHJvdG90eXBlLm1vdXNlb3Zlcj1mdW5jdGlvbigpe3RoaXMuc3RhdGV8PU1lfSxlLnByb3RvdHlwZS5tb3VzZW91dD1mdW5jdGlvbigpe3RoaXMuc3RhdGUmPX5NZX0sT2JqZWN0LmRlZmluZVByb3BlcnRpZXMoZS5wcm90b3R5cGUsciksT2JqZWN0LmRlZmluZVByb3BlcnRpZXMoZSxuKSxlfShlZS5jb3JlLlBsYWNlbWVudFJlZmVyZW50KSx4ZT17U0hPVzp3LmV2ZW50KCJzaG93IiksSElERTp3LmV2ZW50KCJoaWRlIil9LFJlPSJoaWRkZW4iLGtlPSJzaG93biIsSGU9ImhpZGluZyIsR2U9ZnVuY3Rpb24odCl7ZnVuY3Rpb24gZSgpe3QuY2FsbCh0aGlzLGVlLmNvcmUuUGxhY2VtZW50TW9kZS5BVVRPLFtlZS5jb3JlLlBsYWNlbWVudFBvc2l0aW9uLlRPUCxlZS5jb3JlLlBsYWNlbWVudFBvc2l0aW9uLkJPVFRPTV0sW2VlLmNvcmUuUGxhY2VtZW50QWxpZ24uQ0VOVEVSLGVlLmNvcmUuUGxhY2VtZW50QWxpZ24uU1RBUlQsZWUuY29yZS5QbGFjZW1lbnRBbGlnbi5FTkRdKSx0aGlzLm1vZGlmaWVyPSIiLHRoaXMuX3N0YXRlPVJlfXQmJihlLl9fcHJvdG9fXz10KSxlLnByb3RvdHlwZT1PYmplY3QuY3JlYXRlKHQmJnQucHJvdG90eXBlKSxlLnByb3RvdHlwZS5jb25zdHJ1Y3Rvcj1lO3ZhciByPXtpc1Nob3duOntjb25maWd1cmFibGU6ITB9fSxuPXtpbnN0YW5jZUNsYXNzTmFtZTp7Y29uZmlndXJhYmxlOiEwfX07cmV0dXJuIG4uaW5zdGFuY2VDbGFzc05hbWUuZ2V0PWZ1bmN0aW9uKCl7cmV0dXJuIlRvb2x0aXAifSxlLnByb3RvdHlwZS5pbml0PWZ1bmN0aW9uKCl7dC5wcm90b3R5cGUuaW5pdC5jYWxsKHRoaXMpLHRoaXMucmVnaXN0ZXIoJ1thcmlhLWRlc2NyaWJlZGJ5PSInK3RoaXMuaWQrJyJdJyxEZSksdGhpcy5saXN0ZW4oInRyYW5zaXRpb25lbmQiLHRoaXMudHJhbnNpdGlvbkVuZC5iaW5kKHRoaXMpKX0sZS5wcm90b3R5cGUudHJhbnNpdGlvbkVuZD1mdW5jdGlvbigpe3RoaXMuX3N0YXRlPT09SGUmJih0aGlzLl9zdGF0ZT1SZSx0aGlzLmlzU2hvd249ITEpfSxyLmlzU2hvd24uZ2V0PWZ1bmN0aW9uKCl7cmV0dXJuIHQucHJvdG90eXBlLmlzU2hvd259LHIuaXNTaG93bi5zZXQ9ZnVuY3Rpb24oZSl7aWYodGhpcy5pc0VuYWJsZWQpc3dpdGNoKCEwKXtjYXNlIGU6dGhpcy5fc3RhdGU9a2UsdGhpcy5hZGRDbGFzcyhJZS5TSE9XTiksdGhpcy5kaXNwYXRjaCh4ZS5TSE9XKSx0LnByb3RvdHlwZS5pc1Nob3duPSEwO2JyZWFrO2Nhc2UgdGhpcy5pc1Nob3duJiYhZSYmdGhpcy5fc3RhdGU9PT1rZTp0aGlzLl9zdGF0ZT1IZSx0aGlzLnJlbW92ZUNsYXNzKEllLlNIT1dOKTticmVhaztjYXNlIHRoaXMuaXNTaG93biYmIWUmJnRoaXMuX3N0YXRlPT09UmU6dGhpcy5kaXNwYXRjaCh4ZS5ISURFKSx0LnByb3RvdHlwZS5pc1Nob3duPSExfX0sZS5wcm90b3R5cGUucmVuZGVyPWZ1bmN0aW9uKCl7dC5wcm90b3R5cGUucmVuZGVyLmNhbGwodGhpcyk7dmFyIGU9dGhpcy5yZWZlcmVudFJlY3QuY2VudGVyLXRoaXMucmVjdC5jZW50ZXIscj0uNSp0aGlzLnJlY3Qud2lkdGgtODtlPC1yJiYoZT0tciksZT5yJiYoZT1yKSx0aGlzLnNldFByb3BlcnR5KCItLWFycm93LXgiLGUudG9GaXhlZCgyKSsicHgiKX0sT2JqZWN0LmRlZmluZVByb3BlcnRpZXMoZS5wcm90b3R5cGUsciksT2JqZWN0LmRlZmluZVByb3BlcnRpZXMoZSxuKSxlfShlZS5jb3JlLlBsYWNlbWVudCk7ZWUudG9vbHRpcD17VG9vbHRpcDpHZSxUb29sdGlwU2VsZWN0b3I6SWUsVG9vbHRpcEV2ZW50OnhlfSxlZS5pbnRlcm5hbHMucmVnaXN0ZXIoZWUudG9vbHRpcC5Ub29sdGlwU2VsZWN0b3IuVE9PTFRJUCxlZS50b29sdGlwLlRvb2x0aXApO3ZhciAkZT1mdW5jdGlvbih0KXtmdW5jdGlvbiBlKCl7dC5hcHBseSh0aGlzLGFyZ3VtZW50cyl9dCYmKGUuX19wcm90b19fPXQpLGUucHJvdG90eXBlPU9iamVjdC5jcmVhdGUodCYmdC5wcm90b3R5cGUpLGUucHJvdG90eXBlLmNvbnN0cnVjdG9yPWU7dmFyIHI9e2lzQ2hlY2tlZDp7Y29uZmlndXJhYmxlOiEwfX0sbj17aW5zdGFuY2VDbGFzc05hbWU6e2NvbmZpZ3VyYWJsZTohMH19O3JldHVybiBuLmluc3RhbmNlQ2xhc3NOYW1lLmdldD1mdW5jdGlvbigpe3JldHVybiJUb2dnbGVJbnB1dCJ9LHIuaXNDaGVja2VkLmdldD1mdW5jdGlvbigpe3JldHVybiB0aGlzLm5vZGUuY2hlY2tlZH0sT2JqZWN0LmRlZmluZVByb3BlcnRpZXMoZS5wcm90b3R5cGUsciksT2JqZWN0LmRlZmluZVByb3BlcnRpZXMoZSxuKSxlfShlZS5jb3JlLkluc3RhbmNlKSxGZT1mdW5jdGlvbih0KXtmdW5jdGlvbiBlKCl7dC5hcHBseSh0aGlzLGFyZ3VtZW50cyl9dCYmKGUuX19wcm90b19fPXQpLGUucHJvdG90eXBlPU9iamVjdC5jcmVhdGUodCYmdC5wcm90b3R5cGUpLGUucHJvdG90eXBlLmNvbnN0cnVjdG9yPWU7dmFyIHI9e3Byb3h5Ontjb25maWd1cmFibGU6ITB9LGlucHV0Ontjb25maWd1cmFibGU6ITB9fSxuPXtpbnN0YW5jZUNsYXNzTmFtZTp7Y29uZmlndXJhYmxlOiEwfX07cmV0dXJuIG4uaW5zdGFuY2VDbGFzc05hbWUuZ2V0PWZ1bmN0aW9uKCl7cmV0dXJuIlRvZ2dsZVN0YXR1c0xhYmVsIn0sZS5wcm90b3R5cGUuaW5pdD1mdW5jdGlvbigpe3RoaXMucmVnaXN0ZXIoJ2lucHV0W2lkPSInK3RoaXMuZ2V0QXR0cmlidXRlKCJmb3IiKSsnIl0nLCRlKSx0aGlzLnVwZGF0ZSgpLHRoaXMuaXNTd2FwcGluZ0ZvbnQ9ITB9LHIucHJveHkuZ2V0PWZ1bmN0aW9uKCl7cmV0dXJuIE9iamVjdC5hc3NpZ24uY2FsbCh0aGlzLHQucHJvdG90eXBlLnByb3h5LHt1cGRhdGU6dGhpcy51cGRhdGUuYmluZCh0aGlzKX0pfSxyLmlucHV0LmdldD1mdW5jdGlvbigpe3JldHVybiB0aGlzLmdldFJlZ2lzdGVyZWRJbnN0YW5jZXMoIlRvZ2dsZUlucHV0IilbMF19LGUucHJvdG90eXBlLnVwZGF0ZT1mdW5jdGlvbigpe3RoaXMubm9kZS5zdHlsZS5yZW1vdmVQcm9wZXJ0eSgiLS10b2dnbGUtc3RhdHVzLXdpZHRoIik7dmFyIHQ9dGhpcy5pbnB1dC5pc0NoZWNrZWQsZT1nZXRDb21wdXRlZFN0eWxlKHRoaXMubm9kZSwiOmJlZm9yZSIpLHI9cGFyc2VGbG9hdChlLndpZHRoKTt0aGlzLmlucHV0Lm5vZGUuY2hlY2tlZD0hdDt2YXIgbj1nZXRDb21wdXRlZFN0eWxlKHRoaXMubm9kZSwiOmJlZm9yZSIpLGk9cGFyc2VGbG9hdChuLndpZHRoKTtpPnImJihyPWkpLHRoaXMuaW5wdXQubm9kZS5jaGVja2VkPXQsdGhpcy5ub2RlLnN0eWxlLnNldFByb3BlcnR5KCItLXRvZ2dsZS1zdGF0dXMtd2lkdGgiLHIvMTYrInJlbSIpfSxlLnByb3RvdHlwZS5zd2FwRm9udD1mdW5jdGlvbih0KXt0aGlzLnVwZGF0ZSgpfSxPYmplY3QuZGVmaW5lUHJvcGVydGllcyhlLnByb3RvdHlwZSxyKSxPYmplY3QuZGVmaW5lUHJvcGVydGllcyhlLG4pLGV9KGVlLmNvcmUuSW5zdGFuY2UpLFVlPXtTVEFUVVNfTEFCRUw6IiIrZWUuaW50ZXJuYWxzLm5zLnNlbGVjdG9yKCJ0b2dnbGVfX2xhYmVsIikrZWUuaW50ZXJuYWxzLm5zLmF0dHIuc2VsZWN0b3IoImNoZWNrZWQtbGFiZWwiKStlZS5pbnRlcm5hbHMubnMuYXR0ci5zZWxlY3RvcigidW5jaGVja2VkLWxhYmVsIil9O2VlLnRvZ2dsZT17VG9nZ2xlU3RhdHVzTGFiZWw6RmUsVG9nZ2xlU2VsZWN0b3I6VWV9LGVlLmludGVybmFscy5yZWdpc3RlcihlZS50b2dnbGUuVG9nZ2xlU2VsZWN0b3IuU1RBVFVTX0xBQkVMLGVlLnRvZ2dsZS5Ub2dnbGVTdGF0dXNMYWJlbCk7dmFyIHplPWVlLmludGVybmFscy5ucy5zZWxlY3Rvcigic2lkZW1lbnVfX2l0ZW0iKSxCZT1lZS5pbnRlcm5hbHMubnMuc2VsZWN0b3IoImNvbGxhcHNlIiksV2U9e0xJU1Q6ZWUuaW50ZXJuYWxzLm5zLnNlbGVjdG9yKCJzaWRlbWVudV9fbGlzdCIpLENPTExBUFNFOnplKyIgPiAiK0JlKyIsICIremUrIiA+ICo6bm90KCIremUrIik6bm90KCIrQmUrIikgPiAiK0JlKyIsICIremUrIiA+ICo6bm90KCIremUrIik6bm90KCIrQmUrIikgPiAqOm5vdCgiK3plKyIpOm5vdCgiK0JlKyIpID4gIitCZSxDT0xMQVBTRV9MRUdBQ1k6emUrIiAiK0JlLElURU06ZWUuaW50ZXJuYWxzLm5zLnNlbGVjdG9yKCJzaWRlbWVudV9faXRlbSIpLEJVVFRPTjplZS5pbnRlcm5hbHMubnMuc2VsZWN0b3IoInNpZGVtZW51X19idG4iKX0scWU9ZnVuY3Rpb24odCl7ZnVuY3Rpb24gZSgpe3QuYXBwbHkodGhpcyxhcmd1bWVudHMpfXQmJihlLl9fcHJvdG9fXz10KSxlLnByb3RvdHlwZT1PYmplY3QuY3JlYXRlKHQmJnQucHJvdG90eXBlKSxlLnByb3RvdHlwZS5jb25zdHJ1Y3Rvcj1lO3ZhciByPXtpbnN0YW5jZUNsYXNzTmFtZTp7Y29uZmlndXJhYmxlOiEwfX07cmV0dXJuIHIuaW5zdGFuY2VDbGFzc05hbWUuZ2V0PWZ1bmN0aW9uKCl7cmV0dXJuIlNpZGVtZW51TGlzdCJ9LGUucHJvdG90eXBlLnZhbGlkYXRlPWZ1bmN0aW9uKGUpe3JldHVybiB0LnByb3RvdHlwZS52YWxpZGF0ZS5jYWxsKHRoaXMsZSkmJmUubm9kZS5tYXRjaGVzKGVlLmludGVybmFscy5sZWdhY3kuaXNMZWdhY3k/V2UuQ09MTEFQU0VfTEVHQUNZOldlLkNPTExBUFNFKX0sT2JqZWN0LmRlZmluZVByb3BlcnRpZXMoZSxyKSxlfShlZS5jb3JlLkNvbGxhcHNlc0dyb3VwKSxLZT1mdW5jdGlvbih0KXtmdW5jdGlvbiBlKCl7dC5hcHBseSh0aGlzLGFyZ3VtZW50cyl9dCYmKGUuX19wcm90b19fPXQpLGUucHJvdG90eXBlPU9iamVjdC5jcmVhdGUodCYmdC5wcm90b3R5cGUpLGUucHJvdG90eXBlLmNvbnN0cnVjdG9yPWU7dmFyIHI9e2NvbGxhcHNlUHJpbWFyeTp7Y29uZmlndXJhYmxlOiEwfX0sbj17aW5zdGFuY2VDbGFzc05hbWU6e2NvbmZpZ3VyYWJsZTohMH19O3JldHVybiBuLmluc3RhbmNlQ2xhc3NOYW1lLmdldD1mdW5jdGlvbigpe3JldHVybiJTaWRlbWVudUl0ZW0ifSxyLmNvbGxhcHNlUHJpbWFyeS5nZXQ9ZnVuY3Rpb24oKXtyZXR1cm4gdGhpcy5lbGVtZW50LmNoaWxkcmVuLm1hcCgoZnVuY3Rpb24odCl7cmV0dXJuIHQuZ2V0SW5zdGFuY2UoIkNvbGxhcHNlQnV0dG9uIil9KSkuZmlsdGVyKChmdW5jdGlvbih0KXtyZXR1cm4gbnVsbCE9PXQmJnQuaGFzQ2xhc3MoV2UuQlVUVE9OKX0pKVswXX0sT2JqZWN0LmRlZmluZVByb3BlcnRpZXMoZS5wcm90b3R5cGUsciksT2JqZWN0LmRlZmluZVByb3BlcnRpZXMoZSxuKSxlfShlZS5jb3JlLkluc3RhbmNlKTtlZS5zaWRlbWVudT17U2lkZW1lbnVMaXN0OnFlLFNpZGVtZW51SXRlbTpLZSxTaWRlbWVudVNlbGVjdG9yOldlfSxlZS5pbnRlcm5hbHMucmVnaXN0ZXIoZWUuc2lkZW1lbnUuU2lkZW1lbnVTZWxlY3Rvci5MSVNULGVlLnNpZGVtZW51LlNpZGVtZW51TGlzdCksZWUuaW50ZXJuYWxzLnJlZ2lzdGVyKGVlLnNpZGVtZW51LlNpZGVtZW51U2VsZWN0b3IuSVRFTSxlZS5zaWRlbWVudS5TaWRlbWVudUl0ZW0pO3ZhciBWZT17TU9EQUw6ZWUuaW50ZXJuYWxzLm5zLnNlbGVjdG9yKCJtb2RhbCIpLFNDUk9MTF9ESVZJREVSOmVlLmludGVybmFscy5ucy5zZWxlY3Rvcigic2Nyb2xsLWRpdmlkZXIiKSxCT0RZOmVlLmludGVybmFscy5ucy5zZWxlY3RvcigibW9kYWxfX2JvZHkiKSxUSVRMRTplZS5pbnRlcm5hbHMubnMuc2VsZWN0b3IoIm1vZGFsX190aXRsZSIpfSxZZT1mdW5jdGlvbih0KXtmdW5jdGlvbiBlKCl7dC5jYWxsKHRoaXMsZWUuY29yZS5EaXNjbG9zdXJlVHlwZS5PUEVORUQpfXQmJihlLl9fcHJvdG9fXz10KSxlLnByb3RvdHlwZT1PYmplY3QuY3JlYXRlKHQmJnQucHJvdG90eXBlKSxlLnByb3RvdHlwZS5jb25zdHJ1Y3Rvcj1lO3ZhciByPXtpbnN0YW5jZUNsYXNzTmFtZTp7Y29uZmlndXJhYmxlOiEwfX07cmV0dXJuIHIuaW5zdGFuY2VDbGFzc05hbWUuZ2V0PWZ1bmN0aW9uKCl7cmV0dXJuIk1vZGFsQnV0dG9uIn0sT2JqZWN0LmRlZmluZVByb3BlcnRpZXMoZSxyKSxlfShlZS5jb3JlLkRpc2Nsb3N1cmVCdXR0b24pLFhlPXtDT05DRUFMSU5HX0JBQ0tEUk9QOmVlLmludGVybmFscy5ucy5hdHRyKCJjb25jZWFsaW5nLWJhY2tkcm9wIil9LFFlPWZ1bmN0aW9uKHQpe2Z1bmN0aW9uIGUoKXt0LmNhbGwodGhpcyxlZS5jb3JlLkRpc2Nsb3N1cmVUeXBlLk9QRU5FRCxWZS5NT0RBTCxZZSwiTW9kYWxzR3JvdXAiKSx0aGlzLl9pc0FjdGl2ZT0hMSx0aGlzLnNjcm9sbGluZz10aGlzLnJlc2l6ZS5iaW5kKHRoaXMsITEpLHRoaXMucmVzaXppbmc9dGhpcy5yZXNpemUuYmluZCh0aGlzLCEwKX10JiYoZS5fX3Byb3RvX189dCksZS5wcm90b3R5cGU9T2JqZWN0LmNyZWF0ZSh0JiZ0LnByb3RvdHlwZSksZS5wcm90b3R5cGUuY29uc3RydWN0b3I9ZTt2YXIgcj17Ym9keTp7Y29uZmlndXJhYmxlOiEwfSxpc0RpYWxvZzp7Y29uZmlndXJhYmxlOiEwfX0sbj17aW5zdGFuY2VDbGFzc05hbWU6e2NvbmZpZ3VyYWJsZTohMH19O3JldHVybiBuLmluc3RhbmNlQ2xhc3NOYW1lLmdldD1mdW5jdGlvbigpe3JldHVybiJNb2RhbCJ9LGUucHJvdG90eXBlLmluaXQ9ZnVuY3Rpb24oKXt0LnByb3RvdHlwZS5pbml0LmNhbGwodGhpcyksdGhpcy5faXNEaWFsb2c9IkRJQUxPRyI9PT10aGlzLm5vZGUudGFnTmFtZSx0aGlzLmlzU2Nyb2xsaW5nPSExLHRoaXMubGlzdGVuQ2xpY2soKSx0aGlzLmFkZEVtaXNzaW9uKGVlLmNvcmUuUm9vdEVtaXNzaW9uLktFWURPV04sdGhpcy5fa2V5ZG93bi5iaW5kKHRoaXMpKX0sZS5wcm90b3R5cGUuX2tleWRvd249ZnVuY3Rpb24odCl7aWYodD09PWVlLmNvcmUuS2V5Q29kZXMuRVNDQVBFKXRoaXMuX2VzY2FwZSgpfSxlLnByb3RvdHlwZS5fZXNjYXBlPWZ1bmN0aW9uKCl7c3dpdGNoKGRvY3VtZW50LmFjdGl2ZUVsZW1lbnQ/ZG9jdW1lbnQuYWN0aXZlRWxlbWVudC50YWdOYW1lOnZvaWQgMCl7Y2FzZSJJTlBVVCI6Y2FzZSJMQUJFTCI6Y2FzZSJURVhUQVJFQSI6Y2FzZSJTRUxFQ1QiOmNhc2UiQVVESU8iOmNhc2UiVklERU8iOmJyZWFrO2RlZmF1bHQ6dGhpcy5pc0Rpc2Nsb3NlZCYmKHRoaXMuY29uY2VhbCgpLHRoaXMuZm9jdXMoKSl9fSxlLnByb3RvdHlwZS5yZXRyaWV2ZWQ9ZnVuY3Rpb24oKXt0aGlzLl9lbnN1cmVBY2Nlc3NpYmxlTmFtZSgpfSxyLmJvZHkuZ2V0PWZ1bmN0aW9uKCl7cmV0dXJuIHRoaXMuZWxlbWVudC5nZXREZXNjZW5kYW50SW5zdGFuY2VzKCJNb2RhbEJvZHkiLCJNb2RhbCIpWzBdfSxlLnByb3RvdHlwZS5oYW5kbGVDbGljaz1mdW5jdGlvbih0KXt0LnRhcmdldD09PXRoaXMubm9kZSYmImZhbHNlIiE9PXRoaXMuZ2V0QXR0cmlidXRlKFhlLkNPTkNFQUxJTkdfQkFDS0RST1ApJiZ0aGlzLmNvbmNlYWwoKX0sZS5wcm90b3R5cGUuZGlzY2xvc2U9ZnVuY3Rpb24oZSl7cmV0dXJuISF0LnByb3RvdHlwZS5kaXNjbG9zZS5jYWxsKHRoaXMsZSkmJih0aGlzLmJvZHkmJnRoaXMuYm9keS5hY3RpdmF0ZSgpLHRoaXMuaXNTY3JvbGxMb2NrZWQ9ITAsdGhpcy5zZXRBdHRyaWJ1dGUoImFyaWEtbW9kYWwiLCJ0cnVlIiksdGhpcy5zZXRBdHRyaWJ1dGUoIm9wZW4iLCJ0cnVlIiksdGhpcy5faXNEaWFsb2d8fHRoaXMuYWN0aXZhdGVNb2RhbCgpLCEwKX0sZS5wcm90b3R5cGUuY29uY2VhbD1mdW5jdGlvbihlLHIpe3JldHVybiEhdC5wcm90b3R5cGUuY29uY2VhbC5jYWxsKHRoaXMsZSxyKSYmKHRoaXMuaXNTY3JvbGxMb2NrZWQ9ITEsdGhpcy5yZW1vdmVBdHRyaWJ1dGUoImFyaWEtbW9kYWwiKSx0aGlzLnJlbW92ZUF0dHJpYnV0ZSgib3BlbiIpLHRoaXMuYm9keSYmdGhpcy5ib2R5LmRlYWN0aXZhdGUoKSx0aGlzLl9pc0RpYWxvZ3x8dGhpcy5kZWFjdGl2YXRlTW9kYWwoKSwhMCl9LHIuaXNEaWFsb2cuZ2V0PWZ1bmN0aW9uKCl7cmV0dXJuIHRoaXMuX2lzRGlhbG9nfSxyLmlzRGlhbG9nLnNldD1mdW5jdGlvbih0KXt0aGlzLl9pc0RpYWxvZz10fSxlLnByb3RvdHlwZS5hY3RpdmF0ZU1vZGFsPWZ1bmN0aW9uKCl7dGhpcy5faXNBY3RpdmV8fCh0aGlzLl9pc0FjdGl2ZT0hMCx0aGlzLl9oYXNEaWFsb2dSb2xlPSJkaWFsb2ciPT09dGhpcy5nZXRBdHRyaWJ1dGUoInJvbGUiKSx0aGlzLl9oYXNEaWFsb2dSb2xlfHx0aGlzLnNldEF0dHJpYnV0ZSgicm9sZSIsImRpYWxvZyIpKX0sZS5wcm90b3R5cGUuZGVhY3RpdmF0ZU1vZGFsPWZ1bmN0aW9uKCl7dGhpcy5faXNBY3RpdmUmJih0aGlzLl9pc0FjdGl2ZT0hMSx0aGlzLl9oYXNEaWFsb2dSb2xlfHx0aGlzLnJlbW92ZUF0dHJpYnV0ZSgicm9sZSIpKX0sZS5wcm90b3R5cGUuX3NldEFjY2Vzc2libGVOYW1lPWZ1bmN0aW9uKHQsZSl7dmFyIHI9dGhpcy5yZXRyaWV2ZU5vZGVJZCh0LGUpO3RoaXMud2FybigiYWRkIHJlZmVyZW5jZSB0byAiK2UrIiBmb3IgYWNjZXNzaWJsZSBuYW1lIChhcmlhLWxhYmVsbGVkYnkpIiksdGhpcy5zZXRBdHRyaWJ1dGUoImFyaWEtbGFiZWxsZWRieSIscil9LGUucHJvdG90eXBlLl9lbnN1cmVBY2Nlc3NpYmxlTmFtZT1mdW5jdGlvbigpe2lmKCF0aGlzLmhhc0F0dHJpYnV0ZSgiYXJpYS1sYWJlbGxlZGJ5IikmJiF0aGlzLmhhc0F0dHJpYnV0ZSgiYXJpYS1sYWJlbCIpKXt0aGlzLndhcm4oIm1pc3NpbmcgYWNjZXNzaWJsZSBuYW1lIik7dmFyIHQ9dGhpcy5ub2RlLnF1ZXJ5U2VsZWN0b3IoVmUuVElUTEUpLGU9dGhpcy5wcmltYXJ5QnV0dG9uc1swXTtzd2l0Y2goITApe2Nhc2UgbnVsbCE9PXQ6dGhpcy5fc2V0QWNjZXNzaWJsZU5hbWUodCwidGl0bGUiKTticmVhaztjYXNlIHZvaWQgMCE9PWU6dGhpcy53YXJuKCJtaXNzaW5nIHJlcXVpcmVkIHRpdGxlLCBmYWxsYmFjayB0byBwcmltYXJ5IGJ1dHRvbiIpLHRoaXMuX3NldEFjY2Vzc2libGVOYW1lKGUsInByaW1hcnkiKX19fSxPYmplY3QuZGVmaW5lUHJvcGVydGllcyhlLnByb3RvdHlwZSxyKSxPYmplY3QuZGVmaW5lUHJvcGVydGllcyhlLG4pLGV9KGVlLmNvcmUuRGlzY2xvc3VyZSksSmU9WydbdGFiaW5kZXg9IjAiXScsImFbaHJlZl0iLCJidXR0b246bm90KFtkaXNhYmxlZF0pIiwiaW5wdXQ6bm90KFtkaXNhYmxlZF0pIiwic2VsZWN0Om5vdChbZGlzYWJsZWRdKSIsInRleHRhcmVhOm5vdChbZGlzYWJsZWRdKSIsImF1ZGlvW2NvbnRyb2xzXSIsInZpZGVvW2NvbnRyb2xzXSIsJ1tjb250ZW50ZWRpdGFibGVdOm5vdChbY29udGVudGVkaXRhYmxlPSJmYWxzZSJdKScsImRldGFpbHM+c3VtbWFyeTpmaXJzdC1vZi10eXBlIiwiZGV0YWlscyIsImlmcmFtZSJdLmpvaW4oKSxaZT1bJ1t0YWJpbmRleF06bm90KFt0YWJpbmRleD0iLTEiXSk6bm90KFt0YWJpbmRleD0iMCJdKSddLmpvaW4oKSx0cj1mdW5jdGlvbih0LGUpe2lmKCEodCBpbnN0YW5jZW9mIEVsZW1lbnQpKXJldHVybiExO3ZhciByPXdpbmRvdy5nZXRDb21wdXRlZFN0eWxlKHQpO2lmKCFyKXJldHVybiExO2lmKCJoaWRkZW4iPT09ci52aXNpYmlsaXR5KXJldHVybiExO2Zvcih2b2lkIDA9PT1lJiYoZT10KTtlLmNvbnRhaW5zKHQpOyl7aWYoIm5vbmUiPT09ci5kaXNwbGF5KXJldHVybiExO3Q9dC5wYXJlbnRFbGVtZW50fXJldHVybiEwfSxlcj1mdW5jdGlvbih0LGUpe3RoaXMuZWxlbWVudD1udWxsLHRoaXMuYWN0aXZlRWxlbWVudD1udWxsLHRoaXMub25UcmFwPXQsdGhpcy5vblVudHJhcD1lLHRoaXMud2FpdGluZz10aGlzLndhaXQuYmluZCh0aGlzKSx0aGlzLmhhbmRsaW5nPXRoaXMuaGFuZGxlLmJpbmQodGhpcyksdGhpcy5mb2N1c2luZz10aGlzLm1haW50YWluRm9jdXMuYmluZCh0aGlzKSx0aGlzLmN1cnJlbnQ9bnVsbH0scnI9e3RyYXBwZWQ6e2NvbmZpZ3VyYWJsZTohMH0sZm9jdXNhYmxlczp7Y29uZmlndXJhYmxlOiEwfX07cnIudHJhcHBlZC5nZXQ9ZnVuY3Rpb24oKXtyZXR1cm4gbnVsbCE9PXRoaXMuZWxlbWVudH0sZXIucHJvdG90eXBlLnRyYXA9ZnVuY3Rpb24odCl7dGhpcy50cmFwcGVkJiZ0aGlzLnVudHJhcCgpLHRoaXMuZWxlbWVudD10LHRoaXMuaXNUcmFwcGluZz0hMCx0aGlzLndhaXQoKSx0aGlzLm9uVHJhcCYmdGhpcy5vblRyYXAoKX0sZXIucHJvdG90eXBlLndhaXQ9ZnVuY3Rpb24oKXt0cih0aGlzLmVsZW1lbnQpP3RoaXMudHJhcHBpbmcoKTp3aW5kb3cucmVxdWVzdEFuaW1hdGlvbkZyYW1lKHRoaXMud2FpdGluZyl9LGVyLnByb3RvdHlwZS50cmFwcGluZz1mdW5jdGlvbigpe2lmKHRoaXMuaXNUcmFwcGluZyl7dGhpcy5pc1RyYXBwaW5nPSExO3ZhciB0PXRoaXMuZm9jdXNhYmxlczt0Lmxlbmd0aCYmLTE9PT10LmluZGV4T2YoZG9jdW1lbnQuYWN0aXZlRWxlbWVudCkmJnRbMF0uZm9jdXMoKSx0aGlzLmVsZW1lbnQuc2V0QXR0cmlidXRlKCJhcmlhLW1vZGFsIiwhMCksd2luZG93LmFkZEV2ZW50TGlzdGVuZXIoImtleWRvd24iLHRoaXMuaGFuZGxpbmcpLGRvY3VtZW50LmJvZHkuYWRkRXZlbnRMaXN0ZW5lcigiZm9jdXMiLHRoaXMuZm9jdXNpbmcsITApfX0sZXIucHJvdG90eXBlLnN0dW49ZnVuY3Rpb24odCl7Zm9yKHZhciBlPTAscj10LmNoaWxkcmVuO2U8ci5sZW5ndGg7ZSs9MSl7dmFyIG49cltlXTtuIT09dGhpcy5lbGVtZW50JiYobi5jb250YWlucyh0aGlzLmVsZW1lbnQpP3RoaXMuc3R1bihuKTp0aGlzLnN0dW5uZWRzLnB1c2gobmV3IG5yKG4pKSl9fSxlci5wcm90b3R5cGUubWFpbnRhaW5Gb2N1cz1mdW5jdGlvbih0KXtpZighdGhpcy5lbGVtZW50LmNvbnRhaW5zKHQudGFyZ2V0KSl7dmFyIGU9dGhpcy5mb2N1c2FibGVzO2lmKDA9PT1lLmxlbmd0aClyZXR1cm47dmFyIHI9ZVswXTt0LnByZXZlbnREZWZhdWx0KCksci5mb2N1cygpfX0sZXIucHJvdG90eXBlLmhhbmRsZT1mdW5jdGlvbih0KXtpZig5PT09dC5rZXlDb2RlKXt2YXIgZT10aGlzLmZvY3VzYWJsZXM7aWYoMCE9PWUubGVuZ3RoKXt2YXIgcj1lWzBdLG49ZVtlLmxlbmd0aC0xXSxpPWUuaW5kZXhPZihkb2N1bWVudC5hY3RpdmVFbGVtZW50KTt0LnNoaWZ0S2V5PyF0aGlzLmVsZW1lbnQuY29udGFpbnMoZG9jdW1lbnQuYWN0aXZlRWxlbWVudCl8fGk8MT8odC5wcmV2ZW50RGVmYXVsdCgpLG4uZm9jdXMoKSk6KGRvY3VtZW50LmFjdGl2ZUVsZW1lbnQudGFiSW5kZXg+MHx8ZVtpLTFdLnRhYkluZGV4PjApJiYodC5wcmV2ZW50RGVmYXVsdCgpLGVbaS0xXS5mb2N1cygpKTp0aGlzLmVsZW1lbnQuY29udGFpbnMoZG9jdW1lbnQuYWN0aXZlRWxlbWVudCkmJmkhPT1lLmxlbmd0aC0xJiYtMSE9PWk/ZG9jdW1lbnQuYWN0aXZlRWxlbWVudC50YWJJbmRleD4wJiYodC5wcmV2ZW50RGVmYXVsdCgpLGVbaSsxXS5mb2N1cygpKToodC5wcmV2ZW50RGVmYXVsdCgpLHIuZm9jdXMoKSl9fX0scnIuZm9jdXNhYmxlcy5nZXQ9ZnVuY3Rpb24oKXt2YXIgdD10aGlzLGU9ZWUuaW50ZXJuYWxzLmRvbS5xdWVyeVNlbGVjdG9yQWxsQXJyYXkodGhpcy5lbGVtZW50LEplKSxyPWVlLmludGVybmFscy5kb20ucXVlcnlTZWxlY3RvckFsbEFycmF5KGRvY3VtZW50LmRvY3VtZW50RWxlbWVudCwnaW5wdXRbdHlwZT0icmFkaW8iXScpO2lmKHIubGVuZ3RoKXtmb3IodmFyIG49e30saT0wLG89cjtpPG8ubGVuZ3RoO2krPTEpe3ZhciBzPW9baV0sYT1zLmdldEF0dHJpYnV0ZSgibmFtZSIpO3ZvaWQgMD09PW5bYV0mJihuW2FdPW5ldyBpcihhKSksblthXS5wdXNoKHMpfWU9ZS5maWx0ZXIoKGZ1bmN0aW9uKHQpe2lmKCJpbnB1dCIhPT10LnRhZ05hbWUudG9Mb3dlckNhc2UoKXx8InJhZGlvIiE9PXQuZ2V0QXR0cmlidXRlKCJ0eXBlIikudG9Mb3dlckNhc2UoKSlyZXR1cm4hMDt2YXIgZT10LmdldEF0dHJpYnV0ZSgibmFtZSIpO3JldHVybiBuW2VdLmtlZXAodCl9KSl9dmFyIGM9ZWUuaW50ZXJuYWxzLmRvbS5xdWVyeVNlbGVjdG9yQWxsQXJyYXkodGhpcy5lbGVtZW50LFplKTtjLnNvcnQoKGZ1bmN0aW9uKHQsZSl7cmV0dXJuIHQudGFiSW5kZXgtZS50YWJJbmRleH0pKTt2YXIgbD1lLmZpbHRlcigoZnVuY3Rpb24odCl7cmV0dXJuLTE9PT1jLmluZGV4T2YodCl9KSk7cmV0dXJuIGMuY29uY2F0KGwpLmZpbHRlcigoZnVuY3Rpb24oZSl7cmV0dXJuIi0xIiE9PWUudGFiSW5kZXgmJnRyKGUsdC5lbGVtZW50KX0pKX0sZXIucHJvdG90eXBlLnVudHJhcD1mdW5jdGlvbigpe3RoaXMudHJhcHBlZCYmKHRoaXMuaXNUcmFwcGluZz0hMSx0aGlzLmVsZW1lbnQucmVtb3ZlQXR0cmlidXRlKCJhcmlhLW1vZGFsIiksd2luZG93LnJlbW92ZUV2ZW50TGlzdGVuZXIoImtleWRvd24iLHRoaXMuaGFuZGxpbmcpLGRvY3VtZW50LmJvZHkucmVtb3ZlRXZlbnRMaXN0ZW5lcigiZm9jdXMiLHRoaXMuZm9jdXNpbmcsITApLHRoaXMuZWxlbWVudD1udWxsLHRoaXMub25VbnRyYXAmJnRoaXMub25VbnRyYXAoKSl9LGVyLnByb3RvdHlwZS5kaXNwb3NlPWZ1bmN0aW9uKCl7dGhpcy51bnRyYXAoKX0sT2JqZWN0LmRlZmluZVByb3BlcnRpZXMoZXIucHJvdG90eXBlLHJyKTt2YXIgbnI9ZnVuY3Rpb24odCl7dGhpcy5lbGVtZW50PXQsdGhpcy5pbmVydD10LmdldEF0dHJpYnV0ZSgiaW5lcnQiKSx0aGlzLmVsZW1lbnQuc2V0QXR0cmlidXRlKCJpbmVydCIsIiIpfTtuci5wcm90b3R5cGUudW5zdHVuPWZ1bmN0aW9uKCl7bnVsbD09PXRoaXMuaW5lcnQ/dGhpcy5lbGVtZW50LnJlbW92ZUF0dHJpYnV0ZSgiaW5lcnQiKTp0aGlzLmVsZW1lbnQuc2V0QXR0cmlidXRlKCJpbmVydCIsdGhpcy5pbmVydCl9O3ZhciBpcj1mdW5jdGlvbih0KXt0aGlzLm5hbWU9dCx0aGlzLmJ1dHRvbnM9W119O2lyLnByb3RvdHlwZS5wdXNoPWZ1bmN0aW9uKHQpe3RoaXMuYnV0dG9ucy5wdXNoKHQpLCh0PT09ZG9jdW1lbnQuYWN0aXZlRWxlbWVudHx8dC5jaGVja2VkfHx2b2lkIDA9PT10aGlzLnNlbGVjdGVkKSYmKHRoaXMuc2VsZWN0ZWQ9dCl9LGlyLnByb3RvdHlwZS5rZWVwPWZ1bmN0aW9uKHQpe3JldHVybiB0aGlzLnNlbGVjdGVkPT09dH07dmFyIG9yPWZ1bmN0aW9uKHQpe2Z1bmN0aW9uIGUoKXt0LmNhbGwodGhpcywiTW9kYWwiLCExKSx0aGlzLmZvY3VzVHJhcD1uZXcgZXJ9dCYmKGUuX19wcm90b19fPXQpLGUucHJvdG90eXBlPU9iamVjdC5jcmVhdGUodCYmdC5wcm90b3R5cGUpLGUucHJvdG90eXBlLmNvbnN0cnVjdG9yPWU7dmFyIHI9e2luc3RhbmNlQ2xhc3NOYW1lOntjb25maWd1cmFibGU6ITB9fTtyZXR1cm4gci5pbnN0YW5jZUNsYXNzTmFtZS5nZXQ9ZnVuY3Rpb24oKXtyZXR1cm4iTW9kYWxzR3JvdXAifSxlLnByb3RvdHlwZS5hcHBseT1mdW5jdGlvbihlLHIpe3QucHJvdG90eXBlLmFwcGx5LmNhbGwodGhpcyxlLHIpLG51bGw9PT10aGlzLmN1cnJlbnQ/dGhpcy5mb2N1c1RyYXAudW50cmFwKCk6dGhpcy5mb2N1c1RyYXAudHJhcCh0aGlzLmN1cnJlbnQubm9kZSl9LE9iamVjdC5kZWZpbmVQcm9wZXJ0aWVzKGUsciksZX0oZWUuY29yZS5EaXNjbG9zdXJlc0dyb3VwKSxzcj1mdW5jdGlvbih0KXtmdW5jdGlvbiBlKCl7dC5hcHBseSh0aGlzLGFyZ3VtZW50cyl9dCYmKGUuX19wcm90b19fPXQpLGUucHJvdG90eXBlPU9iamVjdC5jcmVhdGUodCYmdC5wcm90b3R5cGUpLGUucHJvdG90eXBlLmNvbnN0cnVjdG9yPWU7dmFyIHI9e2luc3RhbmNlQ2xhc3NOYW1lOntjb25maWd1cmFibGU6ITB9fTtyZXR1cm4gci5pbnN0YW5jZUNsYXNzTmFtZS5nZXQ9ZnVuY3Rpb24oKXtyZXR1cm4iTW9kYWxCb2R5In0sZS5wcm90b3R5cGUuaW5pdD1mdW5jdGlvbigpe3RoaXMubGlzdGVuKCJzY3JvbGwiLHRoaXMuZGl2aWRlLmJpbmQodGhpcykpfSxlLnByb3RvdHlwZS5hY3RpdmF0ZT1mdW5jdGlvbigpe3RoaXMuaXNSZXNpemluZz0hMCx0aGlzLnJlc2l6ZSgpfSxlLnByb3RvdHlwZS5kZWFjdGl2YXRlPWZ1bmN0aW9uKCl7dGhpcy5pc1Jlc2l6aW5nPSExfSxlLnByb3RvdHlwZS5kaXZpZGU9ZnVuY3Rpb24oKXt0aGlzLm5vZGUuc2Nyb2xsSGVpZ2h0PnRoaXMubm9kZS5jbGllbnRIZWlnaHQ/dGhpcy5ub2RlLm9mZnNldEhlaWdodCt0aGlzLm5vZGUuc2Nyb2xsVG9wPj10aGlzLm5vZGUuc2Nyb2xsSGVpZ2h0P3RoaXMucmVtb3ZlQ2xhc3MoVmUuU0NST0xMX0RJVklERVIpOnRoaXMuYWRkQ2xhc3MoVmUuU0NST0xMX0RJVklERVIpOnRoaXMucmVtb3ZlQ2xhc3MoVmUuU0NST0xMX0RJVklERVIpfSxlLnByb3RvdHlwZS5yZXNpemU9ZnVuY3Rpb24oKXt0aGlzLmFkanVzdCgpLHRoaXMucmVxdWVzdCh0aGlzLmFkanVzdC5iaW5kKHRoaXMpKX0sZS5wcm90b3R5cGUuYWRqdXN0PWZ1bmN0aW9uKCl7dmFyIHQ9MzIqKHRoaXMuaXNCcmVha3BvaW50KGVlLmNvcmUuQnJlYWtwb2ludHMuTUQpPzI6MSk7dGhpcy5pc0xlZ2FjeT90aGlzLnN0eWxlLm1heEhlaWdodD13aW5kb3cuaW5uZXJIZWlnaHQtdCsicHgiOnRoaXMuc3R5bGUuc2V0UHJvcGVydHkoIi0tbW9kYWwtbWF4LWhlaWdodCIsd2luZG93LmlubmVySGVpZ2h0LXQrInB4IiksdGhpcy5kaXZpZGUoKX0sT2JqZWN0LmRlZmluZVByb3BlcnRpZXMoZSxyKSxlfShlZS5jb3JlLkluc3RhbmNlKTtlZS5tb2RhbD17TW9kYWw6UWUsTW9kYWxCdXR0b246WWUsTW9kYWxCb2R5OnNyLE1vZGFsc0dyb3VwOm9yLE1vZGFsU2VsZWN0b3I6VmV9LGVlLmludGVybmFscy5yZWdpc3RlcihlZS5tb2RhbC5Nb2RhbFNlbGVjdG9yLk1PREFMLGVlLm1vZGFsLk1vZGFsKSxlZS5pbnRlcm5hbHMucmVnaXN0ZXIoZWUubW9kYWwuTW9kYWxTZWxlY3Rvci5CT0RZLGVlLm1vZGFsLk1vZGFsQm9keSksZWUuaW50ZXJuYWxzLnJlZ2lzdGVyKGVlLmNvcmUuUm9vdFNlbGVjdG9yLlJPT1QsZWUubW9kYWwuTW9kYWxzR3JvdXApO3ZhciBhcj17VE9HR0xFOmVlLmludGVybmFscy5ucy5lbWlzc2lvbigicGFzc3dvcmQiLCJ0b2dnbGUiKSxBREpVU1Q6ZWUuaW50ZXJuYWxzLm5zLmVtaXNzaW9uKCJwYXNzd29yZCIsImFkanVzdCIpfSxjcj1mdW5jdGlvbih0KXtmdW5jdGlvbiBlKCl7dC5hcHBseSh0aGlzLGFyZ3VtZW50cyl9dCYmKGUuX19wcm90b19fPXQpLGUucHJvdG90eXBlPU9iamVjdC5jcmVhdGUodCYmdC5wcm90b3R5cGUpLGUucHJvdG90eXBlLmNvbnN0cnVjdG9yPWU7dmFyIHI9e3dpZHRoOntjb25maWd1cmFibGU6ITB9LGlzQ2hlY2tlZDp7Y29uZmlndXJhYmxlOiEwfX0sbj17aW5zdGFuY2VDbGFzc05hbWU6e2NvbmZpZ3VyYWJsZTohMH19O3JldHVybiBuLmluc3RhbmNlQ2xhc3NOYW1lLmdldD1mdW5jdGlvbigpe3JldHVybiJQYXNzd29yZFRvZ2dsZSJ9LGUucHJvdG90eXBlLmluaXQ9ZnVuY3Rpb24oKXt0aGlzLmxpc3RlbkNsaWNrKCksdGhpcy5hc2NlbmQoYXIuQURKVVNULHRoaXMud2lkdGgpLHRoaXMuaXNTd2FwcGluZ0ZvbnQ9ITAsdGhpcy5faXNDaGVja2VkPXRoaXMuaXNDaGVja2VkfSxyLndpZHRoLmdldD1mdW5jdGlvbigpe3ZhciB0PWdldENvbXB1dGVkU3R5bGUodGhpcy5ub2RlLnBhcmVudE5vZGUpO3JldHVybiBwYXJzZUludCh0LndpZHRoKX0sci5pc0NoZWNrZWQuZ2V0PWZ1bmN0aW9uKCl7cmV0dXJuIHRoaXMubm9kZS5jaGVja2VkfSxyLmlzQ2hlY2tlZC5zZXQ9ZnVuY3Rpb24odCl7dGhpcy5faXNDaGVja2VkPXQsdGhpcy5hc2NlbmQoYXIuVE9HR0xFLHQpfSxlLnByb3RvdHlwZS5oYW5kbGVDbGljaz1mdW5jdGlvbigpe3RoaXMuaXNDaGVja2VkPSF0aGlzLl9pc0NoZWNrZWR9LGUucHJvdG90eXBlLnN3YXBGb250PWZ1bmN0aW9uKHQpe3RoaXMuYXNjZW5kKGFyLkFESlVTVCx0aGlzLndpZHRoKX0sT2JqZWN0LmRlZmluZVByb3BlcnRpZXMoZS5wcm90b3R5cGUsciksT2JqZWN0LmRlZmluZVByb3BlcnRpZXMoZSxuKSxlfShlZS5jb3JlLkluc3RhbmNlKSxscj1mdW5jdGlvbih0KXtmdW5jdGlvbiBlKCl7dC5hcHBseSh0aGlzLGFyZ3VtZW50cyl9dCYmKGUuX19wcm90b19fPXQpLGUucHJvdG90eXBlPU9iamVjdC5jcmVhdGUodCYmdC5wcm90b3R5cGUpLGUucHJvdG90eXBlLmNvbnN0cnVjdG9yPWU7dmFyIHI9e2luc3RhbmNlQ2xhc3NOYW1lOntjb25maWd1cmFibGU6ITB9fTtyZXR1cm4gci5pbnN0YW5jZUNsYXNzTmFtZS5nZXQ9ZnVuY3Rpb24oKXtyZXR1cm4iUGFzc3dvcmQifSxlLnByb3RvdHlwZS5pbml0PWZ1bmN0aW9uKCl7dGhpcy5hZGRBc2NlbnQoYXIuVE9HR0xFLHRoaXMudG9nZ2xlLmJpbmQodGhpcykpLHRoaXMuYWRkQXNjZW50KGFyLkFESlVTVCx0aGlzLmFkanVzdC5iaW5kKHRoaXMpKX0sZS5wcm90b3R5cGUudG9nZ2xlPWZ1bmN0aW9uKHQpe3RoaXMuZGVzY2VuZChhci5UT0dHTEUsdCl9LGUucHJvdG90eXBlLmFkanVzdD1mdW5jdGlvbih0KXt0aGlzLmRlc2NlbmQoYXIuQURKVVNULHQpfSxPYmplY3QuZGVmaW5lUHJvcGVydGllcyhlLHIpLGV9KGVlLmNvcmUuSW5zdGFuY2UpLHVyPXtQQVNTV09SRDplZS5pbnRlcm5hbHMubnMuc2VsZWN0b3IoInBhc3N3b3JkIiksSU5QVVQ6ZWUuaW50ZXJuYWxzLm5zLnNlbGVjdG9yKCJwYXNzd29yZF9faW5wdXQiKSxMQUJFTDplZS5pbnRlcm5hbHMubnMuc2VsZWN0b3IoInBhc3N3b3JkX19sYWJlbCIpLFRPT0dMRTplZS5pbnRlcm5hbHMubnMuc2VsZWN0b3IoInBhc3N3b3JkX19jaGVja2JveCIpKycgaW5wdXRbdHlwZT0iY2hlY2tib3giXSd9LHByPWZ1bmN0aW9uKHQpe2Z1bmN0aW9uIGUoKXt0LmFwcGx5KHRoaXMsYXJndW1lbnRzKX10JiYoZS5fX3Byb3RvX189dCksZS5wcm90b3R5cGU9T2JqZWN0LmNyZWF0ZSh0JiZ0LnByb3RvdHlwZSksZS5wcm90b3R5cGUuY29uc3RydWN0b3I9ZTt2YXIgcj17aXNSZXZlYWxlZDp7Y29uZmlndXJhYmxlOiEwfX0sbj17aW5zdGFuY2VDbGFzc05hbWU6e2NvbmZpZ3VyYWJsZTohMH19O3JldHVybiBuLmluc3RhbmNlQ2xhc3NOYW1lLmdldD1mdW5jdGlvbigpe3JldHVybiJQYXNzd29yZElucHV0In0sZS5wcm90b3R5cGUuaW5pdD1mdW5jdGlvbigpe3RoaXMuYWRkRGVzY2VudChhci5UT0dHTEUsdGhpcy50b2dnbGUuYmluZCh0aGlzKSksdGhpcy5faXNSZXZlYWxlZD0icGFzc3dvcmQiPT09dGhpcy5oYXNBdHRyaWJ1dGUoInR5cGUiKSx0aGlzLmxpc3Rlbigia2V5ZG93biIsdGhpcy5jYXBzbG9jay5iaW5kKHRoaXMpKSx0aGlzLmxpc3Rlbigia2V5dXAiLHRoaXMuY2Fwc2xvY2suYmluZCh0aGlzKSl9LGUucHJvdG90eXBlLnRvZ2dsZT1mdW5jdGlvbih0KXt0aGlzLmlzUmV2ZWFsZWQ9dCx0aGlzLnNldEF0dHJpYnV0ZSgidHlwZSIsdD8idGV4dCI6InBhc3N3b3JkIil9LHIuaXNSZXZlYWxlZC5nZXQ9ZnVuY3Rpb24oKXtyZXR1cm4gdGhpcy5faXNSZXZlYWxlZH0sZS5wcm90b3R5cGUuY2Fwc2xvY2s9ZnVuY3Rpb24odCl7dCYmImZ1bmN0aW9uIiE9dHlwZW9mIHQuZ2V0TW9kaWZpZXJTdGF0ZXx8KHQuZ2V0TW9kaWZpZXJTdGF0ZSgiQ2Fwc0xvY2siKT90aGlzLm5vZGUucGFyZW50Tm9kZS5zZXRBdHRyaWJ1dGUoZWUuaW50ZXJuYWxzLm5zLmF0dHIoImNhcHNsb2NrIiksIiIpOnRoaXMubm9kZS5wYXJlbnROb2RlLnJlbW92ZUF0dHJpYnV0ZShlZS5pbnRlcm5hbHMubnMuYXR0cigiY2Fwc2xvY2siKSkpfSxyLmlzUmV2ZWFsZWQuc2V0PWZ1bmN0aW9uKHQpe3RoaXMuX2lzUmV2ZWFsZWQ9dCx0aGlzLnNldEF0dHJpYnV0ZSgidHlwZSIsdD8idGV4dCI6InBhc3N3b3JkIil9LE9iamVjdC5kZWZpbmVQcm9wZXJ0aWVzKGUucHJvdG90eXBlLHIpLE9iamVjdC5kZWZpbmVQcm9wZXJ0aWVzKGUsbiksZX0oZWUuY29yZS5JbnN0YW5jZSksaHI9ZnVuY3Rpb24odCl7ZnVuY3Rpb24gZSgpe3QuYXBwbHkodGhpcyxhcmd1bWVudHMpfXQmJihlLl9fcHJvdG9fXz10KSxlLnByb3RvdHlwZT1PYmplY3QuY3JlYXRlKHQmJnQucHJvdG90eXBlKSxlLnByb3RvdHlwZS5jb25zdHJ1Y3Rvcj1lO3ZhciByPXtpbnN0YW5jZUNsYXNzTmFtZTp7Y29uZmlndXJhYmxlOiEwfX07cmV0dXJuIHIuaW5zdGFuY2VDbGFzc05hbWUuZ2V0PWZ1bmN0aW9uKCl7cmV0dXJuIlBhc3N3b3JkTGFiZWwifSxlLnByb3RvdHlwZS5pbml0PWZ1bmN0aW9uKCl7dGhpcy5hZGREZXNjZW50KGFyLkFESlVTVCx0aGlzLmFkanVzdC5iaW5kKHRoaXMpKX0sZS5wcm90b3R5cGUuYWRqdXN0PWZ1bmN0aW9uKHQpe3ZhciBlPU1hdGguY2VpbCh0LzE2KTt0aGlzLm5vZGUuc3R5bGUucGFkZGluZ1JpZ2h0PWUrInJlbSJ9LE9iamVjdC5kZWZpbmVQcm9wZXJ0aWVzKGUsciksZX0oZWUuY29yZS5JbnN0YW5jZSk7ZWUucGFzc3dvcmQ9e1Bhc3N3b3JkOmxyLFBhc3N3b3JkVG9nZ2xlOmNyLFBhc3N3b3JkU2VsZWN0b3I6dXIsUGFzc3dvcmRJbnB1dDpwcixQYXNzd29yZExhYmVsOmhyfSxlZS5pbnRlcm5hbHMucmVnaXN0ZXIoZWUucGFzc3dvcmQuUGFzc3dvcmRTZWxlY3Rvci5JTlBVVCxlZS5wYXNzd29yZC5QYXNzd29yZElucHV0KSxlZS5pbnRlcm5hbHMucmVnaXN0ZXIoZWUucGFzc3dvcmQuUGFzc3dvcmRTZWxlY3Rvci5QQVNTV09SRCxlZS5wYXNzd29yZC5QYXNzd29yZCksZWUuaW50ZXJuYWxzLnJlZ2lzdGVyKGVlLnBhc3N3b3JkLlBhc3N3b3JkU2VsZWN0b3IuVE9PR0xFLGVlLnBhc3N3b3JkLlBhc3N3b3JkVG9nZ2xlKSxlZS5pbnRlcm5hbHMucmVnaXN0ZXIoZWUucGFzc3dvcmQuUGFzc3dvcmRTZWxlY3Rvci5MQUJFTCxlZS5wYXNzd29yZC5QYXNzd29yZExhYmVsKTt2YXIgZnI9ZWUuaW50ZXJuYWxzLm5zLnNlbGVjdG9yKCJuYXZfX2l0ZW0iKSxkcj1lZS5pbnRlcm5hbHMubnMuc2VsZWN0b3IoImNvbGxhcHNlIikseXI9e05BVklHQVRJT046ZWUuaW50ZXJuYWxzLm5zLnNlbGVjdG9yKCJuYXYiKSxDT0xMQVBTRTpmcisiID4gIitkcisiLCAiK2ZyKyIgPiAqOm5vdCgiK2ZyKyIpOm5vdCgiK2RyKyIpID4gIitkcisiLCAiK2ZyKyIgPiAqOm5vdCgiK2ZyKyIpOm5vdCgiK2RyKyIpID4gKjpub3QoIitmcisiKTpub3QoIitkcisiKSA+ICIrZHIsQ09MTEFQU0VfTEVHQUNZOmZyKyIgIitkcixJVEVNOmZyLElURU1fUklHSFQ6ZnIrIi0tYWxpZ24tcmlnaHQiLE1FTlU6ZWUuaW50ZXJuYWxzLm5zLnNlbGVjdG9yKCJtZW51IiksQlVUVE9OOmVlLmludGVybmFscy5ucy5zZWxlY3RvcigibmF2X19idG4iKSxUUkFOU0xBVEVfQlVUVE9OOmVlLmludGVybmFscy5ucy5zZWxlY3RvcigidHJhbnNsYXRlX19idG4iKX0sYnI9ZnVuY3Rpb24odCl7ZnVuY3Rpb24gZSgpe3QuY2FsbCh0aGlzKSx0aGlzLl9pc1JpZ2h0QWxpZ25lZD0hMX10JiYoZS5fX3Byb3RvX189dCksZS5wcm90b3R5cGU9T2JqZWN0LmNyZWF0ZSh0JiZ0LnByb3RvdHlwZSksZS5wcm90b3R5cGUuY29uc3RydWN0b3I9ZTt2YXIgcj17aXNSaWdodEFsaWduZWQ6e2NvbmZpZ3VyYWJsZTohMH0sY29sbGFwc2VQcmltYXJ5Ontjb25maWd1cmFibGU6ITB9fSxuPXtpbnN0YW5jZUNsYXNzTmFtZTp7Y29uZmlndXJhYmxlOiEwfX07cmV0dXJuIG4uaW5zdGFuY2VDbGFzc05hbWUuZ2V0PWZ1bmN0aW9uKCl7cmV0dXJuIk5hdmlnYXRpb25JdGVtIn0sZS5wcm90b3R5cGUuaW5pdD1mdW5jdGlvbigpe3RoaXMuYWRkQXNjZW50KGVlLmNvcmUuRGlzY2xvc3VyZUVtaXNzaW9uLkFEREVELHRoaXMuY2FsY3VsYXRlLmJpbmQodGhpcykpLHRoaXMuYWRkQXNjZW50KGVlLmNvcmUuRGlzY2xvc3VyZUVtaXNzaW9uLlJFTU9WRUQsdGhpcy5jYWxjdWxhdGUuYmluZCh0aGlzKSksdGhpcy5pc1Jlc2l6aW5nPSEwLHRoaXMuY2FsY3VsYXRlKCl9LGUucHJvdG90eXBlLnJlc2l6ZT1mdW5jdGlvbigpe3RoaXMuY2FsY3VsYXRlKCl9LGUucHJvdG90eXBlLmNhbGN1bGF0ZT1mdW5jdGlvbigpe3ZhciB0PXRoaXMuZWxlbWVudC5nZXREZXNjZW5kYW50SW5zdGFuY2VzKGVlLmNvcmUuQ29sbGFwc2UuaW5zdGFuY2VDbGFzc05hbWUsbnVsbCwhMClbMF07aWYodCYmdGhpcy5pc0JyZWFrcG9pbnQoZWUuY29yZS5CcmVha3BvaW50cy5MRykmJnQuZWxlbWVudC5ub2RlLm1hdGNoZXMoeXIuTUVOVSkpe3ZhciBlPXRoaXMuZWxlbWVudC5ub2RlLnBhcmVudEVsZW1lbnQuZ2V0Qm91bmRpbmdDbGllbnRSZWN0KCkucmlnaHQscj10LmVsZW1lbnQubm9kZS5nZXRCb3VuZGluZ0NsaWVudFJlY3QoKS53aWR0aCxuPXRoaXMuZWxlbWVudC5ub2RlLmdldEJvdW5kaW5nQ2xpZW50UmVjdCgpLmxlZnQ7dGhpcy5pc1JpZ2h0QWxpZ25lZD1uK3I+ZX1lbHNlIHRoaXMuaXNSaWdodEFsaWduZWQ9ITF9LHIuaXNSaWdodEFsaWduZWQuZ2V0PWZ1bmN0aW9uKCl7cmV0dXJuIHRoaXMuX2lzUmlnaHRBbGlnbmVkfSxyLmlzUmlnaHRBbGlnbmVkLnNldD1mdW5jdGlvbih0KXt0aGlzLl9pc1JpZ2h0QWxpZ25lZCE9PXQmJih0aGlzLl9pc1JpZ2h0QWxpZ25lZD10LHQ/ZWUuaW50ZXJuYWxzLmRvbS5hZGRDbGFzcyh0aGlzLmVsZW1lbnQubm9kZSx5ci5JVEVNX1JJR0hUKTplZS5pbnRlcm5hbHMuZG9tLnJlbW92ZUNsYXNzKHRoaXMuZWxlbWVudC5ub2RlLHlyLklURU1fUklHSFQpKX0sci5jb2xsYXBzZVByaW1hcnkuZ2V0PWZ1bmN0aW9uKCl7cmV0dXJuIHRoaXMuZWxlbWVudC5jaGlsZHJlbi5tYXAoKGZ1bmN0aW9uKHQpe3JldHVybiB0LmdldEluc3RhbmNlKCJDb2xsYXBzZUJ1dHRvbiIpfSkpLmZpbHRlcigoZnVuY3Rpb24odCl7cmV0dXJuIG51bGwhPT10JiYodC5oYXNDbGFzcyh5ci5CVVRUT04pfHx0Lmhhc0NsYXNzKHlyLlRSQU5TTEFURV9CVVRUT04pKX0pKVswXX0sT2JqZWN0LmRlZmluZVByb3BlcnRpZXMoZS5wcm90b3R5cGUsciksT2JqZWN0LmRlZmluZVByb3BlcnRpZXMoZSxuKSxlfShlZS5jb3JlLkluc3RhbmNlKSxncj17Tk9ORTotMSxJTlNJREU6MCxPVVRTSURFOjF9LHZyPWZ1bmN0aW9uKHQpe2Z1bmN0aW9uIGUoKXt0LmFwcGx5KHRoaXMsYXJndW1lbnRzKX10JiYoZS5fX3Byb3RvX189dCksZS5wcm90b3R5cGU9T2JqZWN0LmNyZWF0ZSh0JiZ0LnByb3RvdHlwZSksZS5wcm90b3R5cGUuY29uc3RydWN0b3I9ZTt2YXIgcj17aW5kZXg6e2NvbmZpZ3VyYWJsZTohMH0sY2FuVW5ncm91cDp7Y29uZmlndXJhYmxlOiEwfX0sbj17aW5zdGFuY2VDbGFzc05hbWU6e2NvbmZpZ3VyYWJsZTohMH19O3JldHVybiBuLmluc3RhbmNlQ2xhc3NOYW1lLmdldD1mdW5jdGlvbigpe3JldHVybiJOYXZpZ2F0aW9uIn0sZS5wcm90b3R5cGUuaW5pdD1mdW5jdGlvbigpe3QucHJvdG90eXBlLmluaXQuY2FsbCh0aGlzKSx0aGlzLmNsaWNrZWQ9ITEsdGhpcy5vdXQ9ITEsdGhpcy5hZGRFbWlzc2lvbihlZS5jb3JlLlJvb3RFbWlzc2lvbi5DTElDSyx0aGlzLl9oYW5kbGVSb290Q2xpY2suYmluZCh0aGlzKSksdGhpcy5saXN0ZW4oIm1vdXNlZG93biIsdGhpcy5oYW5kbGVNb3VzZURvd24uYmluZCh0aGlzKSksdGhpcy5saXN0ZW5DbGljayh7Y2FwdHVyZTohMH0pLHRoaXMuaXNSZXNpemluZz0hMH0sZS5wcm90b3R5cGUudmFsaWRhdGU9ZnVuY3Rpb24oZSl7cmV0dXJuIHQucHJvdG90eXBlLnZhbGlkYXRlLmNhbGwodGhpcyxlKSYmZS5lbGVtZW50Lm5vZGUubWF0Y2hlcyhlZS5pbnRlcm5hbHMubGVnYWN5LmlzTGVnYWN5P3lyLkNPTExBUFNFX0xFR0FDWTp5ci5DT0xMQVBTRSl9LGUucHJvdG90eXBlLmhhbmRsZU1vdXNlRG93bj1mdW5jdGlvbih0KXt0aGlzLmlzQnJlYWtwb2ludChlZS5jb3JlLkJyZWFrcG9pbnRzLkxHKSYmLTEhPT10aGlzLmluZGV4JiZ0aGlzLmN1cnJlbnQmJih0aGlzLnBvc2l0aW9uPXRoaXMuY3VycmVudC5ub2RlLmNvbnRhaW5zKHQudGFyZ2V0KT9nci5JTlNJREU6Z3IuT1VUU0lERSx0aGlzLnJlcXVlc3RQb3NpdGlvbigpKX0sZS5wcm90b3R5cGUuaGFuZGxlQ2xpY2s9ZnVuY3Rpb24odCl7IXQudGFyZ2V0Lm1hdGNoZXMoImEsIGJ1dHRvbiIpfHx0LnRhcmdldC5tYXRjaGVzKCJbYXJpYS1jb250cm9sc10iKXx8dC50YXJnZXQubWF0Y2hlcyhlZS5jb3JlLkRpc2Nsb3N1cmVTZWxlY3Rvci5QUkVWRU5UX0NPTkNFQUwpfHwodGhpcy5pbmRleD0tMSl9LGUucHJvdG90eXBlLl9oYW5kbGVSb290Q2xpY2s9ZnVuY3Rpb24odCl7dGhpcy5pc0JyZWFrcG9pbnQoZWUuY29yZS5CcmVha3BvaW50cy5MRykmJih0aGlzLm5vZGUuY29udGFpbnModCl8fCh0aGlzLm91dD0hMCx0aGlzLnJlcXVlc3RQb3NpdGlvbigpKSl9LGUucHJvdG90eXBlLnJlcXVlc3RQb3NpdGlvbj1mdW5jdGlvbigpe3RoaXMuaXNSZXF1ZXN0aW5nfHwodGhpcy5pc1JlcXVlc3Rpbmc9ITAsdGhpcy5yZXF1ZXN0KHRoaXMuZ2V0UG9zaXRpb24uYmluZCh0aGlzKSkpfSxlLnByb3RvdHlwZS5nZXRQb3NpdGlvbj1mdW5jdGlvbigpe2lmKHRoaXMub3V0KXN3aXRjaCh0aGlzLnBvc2l0aW9uKXtjYXNlIGdyLk9VVFNJREU6dGhpcy5pbmRleD0tMTticmVhaztjYXNlIGdyLklOU0lERTp0aGlzLmN1cnJlbnQmJiF0aGlzLmN1cnJlbnQubm9kZS5jb250YWlucyhkb2N1bWVudC5hY3RpdmVFbGVtZW50KSYmdGhpcy5jdXJyZW50LmZvY3VzKCk7YnJlYWs7ZGVmYXVsdDp0aGlzLmluZGV4Pi0xJiYhdGhpcy5jdXJyZW50Lmhhc0ZvY3VzJiYodGhpcy5pbmRleD0tMSl9dGhpcy5yZXF1ZXN0KHRoaXMucmVxdWVzdGVkLmJpbmQodGhpcykpfSxlLnByb3RvdHlwZS5yZXF1ZXN0ZWQ9ZnVuY3Rpb24oKXt0aGlzLnBvc2l0aW9uPWdyLk5PTkUsdGhpcy5vdXQ9ITEsdGhpcy5pc1JlcXVlc3Rpbmc9ITF9LHIuaW5kZXguZ2V0PWZ1bmN0aW9uKCl7cmV0dXJuIHQucHJvdG90eXBlLmluZGV4fSxyLmluZGV4LnNldD1mdW5jdGlvbihlKXstMT09PWUmJnRoaXMuY3VycmVudCYmdGhpcy5jdXJyZW50Lmhhc0ZvY3VzJiZ0aGlzLmN1cnJlbnQuZm9jdXMoKSx0LnByb3RvdHlwZS5pbmRleD1lfSxyLmNhblVuZ3JvdXAuZ2V0PWZ1bmN0aW9uKCl7cmV0dXJuIXRoaXMuaXNCcmVha3BvaW50KGVlLmNvcmUuQnJlYWtwb2ludHMuTEcpfSxlLnByb3RvdHlwZS5yZXNpemU9ZnVuY3Rpb24oKXt0aGlzLnVwZGF0ZSgpfSxPYmplY3QuZGVmaW5lUHJvcGVydGllcyhlLnByb3RvdHlwZSxyKSxPYmplY3QuZGVmaW5lUHJvcGVydGllcyhlLG4pLGV9KGVlLmNvcmUuQ29sbGFwc2VzR3JvdXApO2VlLm5hdmlnYXRpb249e05hdmlnYXRpb246dnIsTmF2aWdhdGlvbkl0ZW06YnIsTmF2aWdhdGlvbk1vdXNlUG9zaXRpb246Z3IsTmF2aWdhdGlvblNlbGVjdG9yOnlyfSxlZS5pbnRlcm5hbHMucmVnaXN0ZXIoZWUubmF2aWdhdGlvbi5OYXZpZ2F0aW9uU2VsZWN0b3IuTkFWSUdBVElPTixlZS5uYXZpZ2F0aW9uLk5hdmlnYXRpb24pLGVlLmludGVybmFscy5yZWdpc3RlcihlZS5uYXZpZ2F0aW9uLk5hdmlnYXRpb25TZWxlY3Rvci5JVEVNLGVlLm5hdmlnYXRpb24uTmF2aWdhdGlvbkl0ZW0pO3ZhciBtcj1mdW5jdGlvbih0KXtmdW5jdGlvbiBlKCl7dC5jYWxsKHRoaXMsZWUuY29yZS5EaXNjbG9zdXJlVHlwZS5TRUxFQ1QpfXQmJihlLl9fcHJvdG9fXz10KSxlLnByb3RvdHlwZT1PYmplY3QuY3JlYXRlKHQmJnQucHJvdG90eXBlKSxlLnByb3RvdHlwZS5jb25zdHJ1Y3Rvcj1lO3ZhciByPXtsaXN0Ontjb25maWd1cmFibGU6ITB9fSxuPXtpbnN0YW5jZUNsYXNzTmFtZTp7Y29uZmlndXJhYmxlOiEwfX07cmV0dXJuIG4uaW5zdGFuY2VDbGFzc05hbWUuZ2V0PWZ1bmN0aW9uKCl7cmV0dXJuIlRhYkJ1dHRvbiJ9LGUucHJvdG90eXBlLmhhbmRsZUNsaWNrPWZ1bmN0aW9uKGUpe3QucHJvdG90eXBlLmhhbmRsZUNsaWNrLmNhbGwodGhpcyxlKSx0aGlzLmZvY3VzKCl9LGUucHJvdG90eXBlLmFwcGx5PWZ1bmN0aW9uKGUpe3QucHJvdG90eXBlLmFwcGx5LmNhbGwodGhpcyxlKSx0aGlzLmlzUHJpbWFyeSYmKHRoaXMuc2V0QXR0cmlidXRlKCJ0YWJpbmRleCIsZT8iMCI6Ii0xIiksZSYmdGhpcy5saXN0JiZ0aGlzLmxpc3QuZm9jYWxpemUodGhpcykpfSxyLmxpc3QuZ2V0PWZ1bmN0aW9uKCl7cmV0dXJuIHRoaXMuZWxlbWVudC5nZXRBc2NlbmRhbnRJbnN0YW5jZSgiVGFic0xpc3QiLCJUYWJzR3JvdXAiKX0sT2JqZWN0LmRlZmluZVByb3BlcnRpZXMoZS5wcm90b3R5cGUsciksT2JqZWN0LmRlZmluZVByb3BlcnRpZXMoZSxuKSxlfShlZS5jb3JlLkRpc2Nsb3N1cmVCdXR0b24pLF9yPXtUQUI6ZWUuaW50ZXJuYWxzLm5zLnNlbGVjdG9yKCJ0YWJzX190YWIiKSxHUk9VUDplZS5pbnRlcm5hbHMubnMuc2VsZWN0b3IoInRhYnMiKSxQQU5FTDplZS5pbnRlcm5hbHMubnMuc2VsZWN0b3IoInRhYnNfX3BhbmVsIiksTElTVDplZS5pbnRlcm5hbHMubnMuc2VsZWN0b3IoInRhYnNfX2xpc3QiKSxTSEFET1c6ZWUuaW50ZXJuYWxzLm5zLnNlbGVjdG9yKCJ0YWJzX19zaGFkb3ciKSxTSEFET1dfTEVGVDplZS5pbnRlcm5hbHMubnMuc2VsZWN0b3IoInRhYnNfX3NoYWRvdy0tbGVmdCIpLFNIQURPV19SSUdIVDplZS5pbnRlcm5hbHMubnMuc2VsZWN0b3IoInRhYnNfX3NoYWRvdy0tcmlnaHQiKSxQQU5FTF9TVEFSVDplZS5pbnRlcm5hbHMubnMuc2VsZWN0b3IoInRhYnNfX3BhbmVsLS1kaXJlY3Rpb24tc3RhcnQiKSxQQU5FTF9FTkQ6ZWUuaW50ZXJuYWxzLm5zLnNlbGVjdG9yKCJ0YWJzX19wYW5lbC0tZGlyZWN0aW9uLWVuZCIpfSx3cj0iZGlyZWN0aW9uLXN0YXJ0IixTcj0iZGlyZWN0aW9uLWVuZCIsRXI9Im5vbmUiLE9yPWZ1bmN0aW9uKHQpe2Z1bmN0aW9uIGUoKXt0LmNhbGwodGhpcyxlZS5jb3JlLkRpc2Nsb3N1cmVUeXBlLlNFTEVDVCxfci5QQU5FTCxtciwiVGFic0dyb3VwIiksdGhpcy5fZGlyZWN0aW9uPUVyLHRoaXMuX2lzUHJldmVudGluZ1RyYW5zaXRpb249ITF9dCYmKGUuX19wcm90b19fPXQpLGUucHJvdG90eXBlPU9iamVjdC5jcmVhdGUodCYmdC5wcm90b3R5cGUpLGUucHJvdG90eXBlLmNvbnN0cnVjdG9yPWU7dmFyIHI9e2RpcmVjdGlvbjp7Y29uZmlndXJhYmxlOiEwfSxpc1ByZXZlbnRpbmdUcmFuc2l0aW9uOntjb25maWd1cmFibGU6ITB9fSxuPXtpbnN0YW5jZUNsYXNzTmFtZTp7Y29uZmlndXJhYmxlOiEwfX07cmV0dXJuIG4uaW5zdGFuY2VDbGFzc05hbWUuZ2V0PWZ1bmN0aW9uKCl7cmV0dXJuIlRhYlBhbmVsIn0sci5kaXJlY3Rpb24uZ2V0PWZ1bmN0aW9uKCl7cmV0dXJuIHRoaXMuX2RpcmVjdGlvbn0sci5kaXJlY3Rpb24uc2V0PWZ1bmN0aW9uKHQpe2lmKHQhPT10aGlzLl9kaXJlY3Rpb24pe3N3aXRjaCh0aGlzLl9kaXJlY3Rpb24pe2Nhc2Ugd3I6dGhpcy5yZW1vdmVDbGFzcyhfci5QQU5FTF9TVEFSVCk7YnJlYWs7Y2FzZSBTcjp0aGlzLnJlbW92ZUNsYXNzKF9yLlBBTkVMX0VORCk7YnJlYWs7Y2FzZSBFcjpicmVhaztkZWZhdWx0OnJldHVybn1zd2l0Y2godGhpcy5fZGlyZWN0aW9uPXQsdGhpcy5fZGlyZWN0aW9uKXtjYXNlIHdyOnRoaXMuYWRkQ2xhc3MoX3IuUEFORUxfU1RBUlQpO2JyZWFrO2Nhc2UgU3I6dGhpcy5hZGRDbGFzcyhfci5QQU5FTF9FTkQpfX19LHIuaXNQcmV2ZW50aW5nVHJhbnNpdGlvbi5nZXQ9ZnVuY3Rpb24oKXtyZXR1cm4gdGhpcy5faXNQcmV2ZW50aW5nVHJhbnNpdGlvbn0sci5pc1ByZXZlbnRpbmdUcmFuc2l0aW9uLnNldD1mdW5jdGlvbih0KXt0aGlzLl9pc1ByZXZlbnRpbmdUcmFuc2l0aW9uIT09dCYmKHQ/dGhpcy5hZGRDbGFzcyhlZS5pbnRlcm5hbHMubW90aW9uLlRyYW5zaXRpb25TZWxlY3Rvci5OT05FKTp0aGlzLnJlbW92ZUNsYXNzKGVlLmludGVybmFscy5tb3Rpb24uVHJhbnNpdGlvblNlbGVjdG9yLk5PTkUpLHRoaXMuX2lzUHJldmVudGluZ1RyYW5zaXRpb249ITA9PT10KX0sZS5wcm90b3R5cGUudHJhbnNsYXRlPWZ1bmN0aW9uKHQsZSl7dGhpcy5pc1ByZXZlbnRpbmdUcmFuc2l0aW9uPWUsdGhpcy5kaXJlY3Rpb249dH0sZS5wcm90b3R5cGUucmVzZXQ9ZnVuY3Rpb24oKXt0aGlzLmdyb3VwJiZ0aGlzLmdyb3VwLnJldHJpZXZlKCEwKX0sZS5wcm90b3R5cGUuX2VsZWN0UHJpbWFyaWVzPWZ1bmN0aW9uKGUpe3ZhciByPXRoaXM7cmV0dXJuIHRoaXMuZ3JvdXAmJnRoaXMuZ3JvdXAubGlzdD90LnByb3RvdHlwZS5fZWxlY3RQcmltYXJpZXMuY2FsbCh0aGlzLGUpLmZpbHRlcigoZnVuY3Rpb24odCl7cmV0dXJuIHIuZ3JvdXAubGlzdC5ub2RlLmNvbnRhaW5zKHQubm9kZSl9KSk6W119LE9iamVjdC5kZWZpbmVQcm9wZXJ0aWVzKGUucHJvdG90eXBlLHIpLE9iamVjdC5kZWZpbmVQcm9wZXJ0aWVzKGUsbiksZX0oZWUuY29yZS5EaXNjbG9zdXJlKSxqcj0idGFiX2tleXNfbGVmdCIsVHI9InRhYl9rZXlzX3JpZ2h0IixQcj0idGFiX2tleXNfaG9tZSIsQXI9InRhYl9rZXlzX2VuZCIsTnI9e1BSRVNTX0tFWTplZS5pbnRlcm5hbHMubnMuZW1pc3Npb24oInRhYiIsInByZXNzX2tleSIpLExJU1RfSEVJR0hUOmVlLmludGVybmFscy5ucy5lbWlzc2lvbigidGFiIiwibGlzdF9oZWlnaHQiKX0sQ3I9ZnVuY3Rpb24odCl7ZnVuY3Rpb24gZSgpe3QuY2FsbCh0aGlzLCJUYWJQYW5lbCIpfXQmJihlLl9fcHJvdG9fXz10KSxlLnByb3RvdHlwZT1PYmplY3QuY3JlYXRlKHQmJnQucHJvdG90eXBlKSxlLnByb3RvdHlwZS5jb25zdHJ1Y3Rvcj1lO3ZhciByPXtsaXN0Ontjb25maWd1cmFibGU6ITB9LGJ1dHRvbkhhc0ZvY3VzOntjb25maWd1cmFibGU6ITB9LGlzUHJldmVudGluZ1RyYW5zaXRpb246e2NvbmZpZ3VyYWJsZTohMH19LG49e2luc3RhbmNlQ2xhc3NOYW1lOntjb25maWd1cmFibGU6ITB9fTtyZXR1cm4gbi5pbnN0YW5jZUNsYXNzTmFtZS5nZXQ9ZnVuY3Rpb24oKXtyZXR1cm4iVGFic0dyb3VwIn0sZS5wcm90b3R5cGUuaW5pdD1mdW5jdGlvbigpe3QucHJvdG90eXBlLmluaXQuY2FsbCh0aGlzKSx0aGlzLmxpc3RlbigidHJhbnNpdGlvbmVuZCIsdGhpcy50cmFuc2l0aW9uZW5kLmJpbmQodGhpcykpLHRoaXMuYWRkQXNjZW50KE5yLlBSRVNTX0tFWSx0aGlzLnByZXNzS2V5LmJpbmQodGhpcykpLHRoaXMuYWRkQXNjZW50KE5yLkxJU1RfSEVJR0hULHRoaXMuc2V0TGlzdEhlaWdodC5iaW5kKHRoaXMpKSx0aGlzLmlzUmVuZGVyaW5nPSEwfSxlLnByb3RvdHlwZS5nZXRJbmRleD1mdW5jdGlvbihlKXt2b2lkIDA9PT1lJiYoZT0wKSx0LnByb3RvdHlwZS5nZXRJbmRleC5jYWxsKHRoaXMsZSl9LHIubGlzdC5nZXQ9ZnVuY3Rpb24oKXtyZXR1cm4gdGhpcy5lbGVtZW50LmdldERlc2NlbmRhbnRJbnN0YW5jZXMoIlRhYnNMaXN0IiwiVGFic0dyb3VwIiwhMClbMF19LGUucHJvdG90eXBlLnNldExpc3RIZWlnaHQ9ZnVuY3Rpb24odCl7dGhpcy5saXN0SGVpZ2h0PXR9LGUucHJvdG90eXBlLnRyYW5zaXRpb25lbmQ9ZnVuY3Rpb24odCl7dGhpcy5pc1ByZXZlbnRpbmdUcmFuc2l0aW9uPSEwfSxyLmJ1dHRvbkhhc0ZvY3VzLmdldD1mdW5jdGlvbigpe3JldHVybiB0aGlzLm1lbWJlcnMuc29tZSgoZnVuY3Rpb24odCl7cmV0dXJuIHQuYnV0dG9uSGFzRm9jdXN9KSl9LGUucHJvdG90eXBlLnByZXNzS2V5PWZ1bmN0aW9uKHQpe3N3aXRjaCh0KXtjYXNlIGpyOnRoaXMucHJlc3NMZWZ0KCk7YnJlYWs7Y2FzZSBUcjp0aGlzLnByZXNzUmlnaHQoKTticmVhaztjYXNlIFByOnRoaXMucHJlc3NIb21lKCk7YnJlYWs7Y2FzZSBBcjp0aGlzLnByZXNzRW5kKCl9fSxlLnByb3RvdHlwZS5wcmVzc1JpZ2h0PWZ1bmN0aW9uKCl7dGhpcy5idXR0b25IYXNGb2N1cyYmKHRoaXMuaW5kZXg8dGhpcy5sZW5ndGgtMT90aGlzLmluZGV4Kys6dGhpcy5pbmRleD0wLHRoaXMuZm9jdXMoKSl9LGUucHJvdG90eXBlLnByZXNzTGVmdD1mdW5jdGlvbigpe3RoaXMuYnV0dG9uSGFzRm9jdXMmJih0aGlzLmluZGV4PjA/dGhpcy5pbmRleC0tOnRoaXMuaW5kZXg9dGhpcy5sZW5ndGgtMSx0aGlzLmZvY3VzKCkpfSxlLnByb3RvdHlwZS5wcmVzc0hvbWU9ZnVuY3Rpb24oKXt0aGlzLmJ1dHRvbkhhc0ZvY3VzJiYodGhpcy5pbmRleD0wLHRoaXMuZm9jdXMoKSl9LGUucHJvdG90eXBlLnByZXNzRW5kPWZ1bmN0aW9uKCl7dGhpcy5idXR0b25IYXNGb2N1cyYmKHRoaXMuaW5kZXg9dGhpcy5sZW5ndGgtMSx0aGlzLmZvY3VzKCkpfSxlLnByb3RvdHlwZS5mb2N1cz1mdW5jdGlvbigpe3RoaXMuY3VycmVudCYmdGhpcy5jdXJyZW50LmZvY3VzKCl9LGUucHJvdG90eXBlLmFwcGx5PWZ1bmN0aW9uKCl7Zm9yKHZhciB0PTA7dDx0aGlzLl9pbmRleDt0KyspdGhpcy5tZW1iZXJzW3RdLnRyYW5zbGF0ZSh3cik7dGhpcy5jdXJyZW50JiZ0aGlzLmN1cnJlbnQudHJhbnNsYXRlKEVyKTtmb3IodmFyIGU9dGhpcy5faW5kZXgrMTtlPHRoaXMubGVuZ3RoO2UrKyl0aGlzLm1lbWJlcnNbZV0udHJhbnNsYXRlKFNyKTt0aGlzLmlzUHJldmVudGluZ1RyYW5zaXRpb249ITF9LHIuaXNQcmV2ZW50aW5nVHJhbnNpdGlvbi5nZXQ9ZnVuY3Rpb24oKXtyZXR1cm4gdGhpcy5faXNQcmV2ZW50aW5nVHJhbnNpdGlvbn0sci5pc1ByZXZlbnRpbmdUcmFuc2l0aW9uLnNldD1mdW5jdGlvbih0KXt0aGlzLl9pc1ByZXZlbnRpbmdUcmFuc2l0aW9uIT09dCYmKHQ/dGhpcy5hZGRDbGFzcyhlZS5pbnRlcm5hbHMubW90aW9uLlRyYW5zaXRpb25TZWxlY3Rvci5OT05FKTp0aGlzLnJlbW92ZUNsYXNzKGVlLmludGVybmFscy5tb3Rpb24uVHJhbnNpdGlvblNlbGVjdG9yLk5PTkUpLHRoaXMuX2lzUHJldmVudGluZ1RyYW5zaXRpb249ITA9PT10KX0sZS5wcm90b3R5cGUucmVuZGVyPWZ1bmN0aW9uKCl7aWYobnVsbCE9PXRoaXMuY3VycmVudCl7dGhpcy5ub2RlLnNjcm9sbFRvcD0wLHRoaXMubm9kZS5zY3JvbGxMZWZ0PTA7dmFyIHQ9TWF0aC5yb3VuZCh0aGlzLmN1cnJlbnQubm9kZS5vZmZzZXRIZWlnaHQpO3RoaXMucGFuZWxIZWlnaHQhPT10JiYodGhpcy5wYW5lbEhlaWdodD10LHRoaXMuc3R5bGUuc2V0UHJvcGVydHkoIi0tdGFicy1oZWlnaHQiLHRoaXMucGFuZWxIZWlnaHQrdGhpcy5saXN0SGVpZ2h0KyJweCIpKX19LE9iamVjdC5kZWZpbmVQcm9wZXJ0aWVzKGUucHJvdG90eXBlLHIpLE9iamVjdC5kZWZpbmVQcm9wZXJ0aWVzKGUsbiksZX0oZWUuY29yZS5EaXNjbG9zdXJlc0dyb3VwKSxJcj1mdW5jdGlvbih0KXtmdW5jdGlvbiBlKCl7dC5hcHBseSh0aGlzLGFyZ3VtZW50cyl9dCYmKGUuX19wcm90b19fPXQpLGUucHJvdG90eXBlPU9iamVjdC5jcmVhdGUodCYmdC5wcm90b3R5cGUpLGUucHJvdG90eXBlLmNvbnN0cnVjdG9yPWU7dmFyIHI9e2lzU2Nyb2xsaW5nOntjb25maWd1cmFibGU6ITB9fSxuPXtpbnN0YW5jZUNsYXNzTmFtZTp7Y29uZmlndXJhYmxlOiEwfX07cmV0dXJuIG4uaW5zdGFuY2VDbGFzc05hbWUuZ2V0PWZ1bmN0aW9uKCl7cmV0dXJuIlRhYnNMaXN0In0sZS5wcm90b3R5cGUuaW5pdD1mdW5jdGlvbigpe3RoaXMubGlzdGVuKCJzY3JvbGwiLHRoaXMuc2Nyb2xsLmJpbmQodGhpcykpLHRoaXMubGlzdGVuS2V5KGVlLmNvcmUuS2V5Q29kZXMuUklHSFQsdGhpcy5hc2NlbmQuYmluZCh0aGlzLE5yLlBSRVNTX0tFWSxUciksITAsITApLHRoaXMubGlzdGVuS2V5KGVlLmNvcmUuS2V5Q29kZXMuTEVGVCx0aGlzLmFzY2VuZC5iaW5kKHRoaXMsTnIuUFJFU1NfS0VZLGpyKSwhMCwhMCksdGhpcy5saXN0ZW5LZXkoZWUuY29yZS5LZXlDb2Rlcy5IT01FLHRoaXMuYXNjZW5kLmJpbmQodGhpcyxOci5QUkVTU19LRVksUHIpLCEwLCEwKSx0aGlzLmxpc3RlbktleShlZS5jb3JlLktleUNvZGVzLkVORCx0aGlzLmFzY2VuZC5iaW5kKHRoaXMsTnIuUFJFU1NfS0VZLEFyKSwhMCwhMCksdGhpcy5pc1Jlc2l6aW5nPSEwfSxlLnByb3RvdHlwZS5mb2NhbGl6ZT1mdW5jdGlvbih0KXt2YXIgZT10LmdldFJlY3QoKSxyPXRoaXMuZ2V0UmVjdCgpLG49dGhpcy5ub2RlLnNjcm9sbExlZnQ7ZS5sZWZ0PHIubGVmdD90aGlzLm5vZGUuc2Nyb2xsVG8obi1yLmxlZnQrZS5sZWZ0LTE2LDApOmUucmlnaHQ+ci5yaWdodCYmdGhpcy5ub2RlLnNjcm9sbFRvKG4tci5yaWdodCtlLnJpZ2h0KzE2LDApfSxyLmlzU2Nyb2xsaW5nLmdldD1mdW5jdGlvbigpe3JldHVybiB0aGlzLl9pc1Njcm9sbGluZ30sci5pc1Njcm9sbGluZy5zZXQ9ZnVuY3Rpb24odCl7dGhpcy5faXNTY3JvbGxpbmchPT10JiYodGhpcy5faXNTY3JvbGxpbmc9dCx0aGlzLmFwcGx5KCkpfSxlLnByb3RvdHlwZS5hcHBseT1mdW5jdGlvbigpe3RoaXMuX2lzU2Nyb2xsaW5nPyh0aGlzLmFkZENsYXNzKF9yLlNIQURPVyksdGhpcy5zY3JvbGwoKSk6KHRoaXMucmVtb3ZlQ2xhc3MoX3IuU0hBRE9XX1JJR0hUKSx0aGlzLnJlbW92ZUNsYXNzKF9yLlNIQURPV19MRUZUKSx0aGlzLnJlbW92ZUNsYXNzKF9yLlNIQURPVykpfSxlLnByb3RvdHlwZS5zY3JvbGw9ZnVuY3Rpb24oKXt2YXIgdD10aGlzLm5vZGUuc2Nyb2xsTGVmdCxlPXQ8PTE2LHI9dGhpcy5ub2RlLnNjcm9sbFdpZHRoLXRoaXMubm9kZS5jbGllbnRXaWR0aC0xNixuPU1hdGguYWJzKHQpPj1yLGk9InJ0bCI9PT1kb2N1bWVudC5kb2N1bWVudEVsZW1lbnQuZ2V0QXR0cmlidXRlKCJkaXIiKSxvPWk/X3IuU0hBRE9XX1JJR0hUOl9yLlNIQURPV19MRUZULHM9aT9fci5TSEFET1dfTEVGVDpfci5TSEFET1dfUklHSFQ7ZT90aGlzLnJlbW92ZUNsYXNzKG8pOnRoaXMuYWRkQ2xhc3Mobyksbj90aGlzLnJlbW92ZUNsYXNzKHMpOnRoaXMuYWRkQ2xhc3Mocyl9LGUucHJvdG90eXBlLnJlc2l6ZT1mdW5jdGlvbigpe3RoaXMuaXNTY3JvbGxpbmc9dGhpcy5ub2RlLnNjcm9sbFdpZHRoPnRoaXMubm9kZS5jbGllbnRXaWR0aCsxNjt2YXIgdD10aGlzLmdldFJlY3QoKS5oZWlnaHQ7dGhpcy5zZXRQcm9wZXJ0eSgiLS10YWJzLWxpc3QtaGVpZ2h0Iix0KyJweCIpLHRoaXMuYXNjZW5kKE5yLkxJU1RfSEVJR0hULHQpfSxlLnByb3RvdHlwZS5kaXNwb3NlPWZ1bmN0aW9uKCl7dGhpcy5pc1Njcm9sbGluZz0hMX0sT2JqZWN0LmRlZmluZVByb3BlcnRpZXMoZS5wcm90b3R5cGUsciksT2JqZWN0LmRlZmluZVByb3BlcnRpZXMoZSxuKSxlfShlZS5jb3JlLkluc3RhbmNlKTtlZS50YWI9e1RhYlBhbmVsOk9yLFRhYkJ1dHRvbjptcixUYWJzR3JvdXA6Q3IsVGFic0xpc3Q6SXIsVGFiU2VsZWN0b3I6X3IsVGFiRW1pc3Npb246TnJ9LGVlLmludGVybmFscy5yZWdpc3RlcihlZS50YWIuVGFiU2VsZWN0b3IuUEFORUwsZWUudGFiLlRhYlBhbmVsKSxlZS5pbnRlcm5hbHMucmVnaXN0ZXIoZWUudGFiLlRhYlNlbGVjdG9yLkdST1VQLGVlLnRhYi5UYWJzR3JvdXApLGVlLmludGVybmFscy5yZWdpc3RlcihlZS50YWIuVGFiU2VsZWN0b3IuTElTVCxlZS50YWIuVGFic0xpc3QpO3ZhciBMcj17U0NST0xMQUJMRTplZS5pbnRlcm5hbHMubnMuZW1pc3Npb24oInRhYmxlIiwic2Nyb2xsYWJsZSIpLENIQU5HRTplZS5pbnRlcm5hbHMubnMuZW1pc3Npb24oInRhYmxlIiwiY2hhbmdlIiksQ0FQVElPTl9IRUlHSFQ6ZWUuaW50ZXJuYWxzLm5zLmVtaXNzaW9uKCJ0YWJsZSIsImNhcHRpb25oZWlnaHQiKX0sTXI9ZnVuY3Rpb24odCl7ZnVuY3Rpb24gZSgpe3QuYXBwbHkodGhpcyxhcmd1bWVudHMpfXQmJihlLl9fcHJvdG9fXz10KSxlLnByb3RvdHlwZT1PYmplY3QuY3JlYXRlKHQmJnQucHJvdG90eXBlKSxlLnByb3RvdHlwZS5jb25zdHJ1Y3Rvcj1lO3ZhciByPXtpbnN0YW5jZUNsYXNzTmFtZTp7Y29uZmlndXJhYmxlOiEwfX07cmV0dXJuIHIuaW5zdGFuY2VDbGFzc05hbWUuZ2V0PWZ1bmN0aW9uKCl7cmV0dXJuIlRhYmxlIn0sZS5wcm90b3R5cGUuaW5pdD1mdW5jdGlvbigpe3RoaXMuYWRkQXNjZW50KExyLkNBUFRJT05fSEVJR0hULHRoaXMuc2V0Q2FwdGlvbkhlaWdodC5iaW5kKHRoaXMpKX0sZS5wcm90b3R5cGUuc2V0Q2FwdGlvbkhlaWdodD1mdW5jdGlvbih0KXt0aGlzLnNldFByb3BlcnR5KCItLXRhYmxlLW9mZnNldCIsImNhbGMoIit0KyJweCArIDFyZW0pIil9LE9iamVjdC5kZWZpbmVQcm9wZXJ0aWVzKGUsciksZX0oZWUuY29yZS5JbnN0YW5jZSksRHI9e1RBQkxFOmVlLmludGVybmFscy5ucy5zZWxlY3RvcigidGFibGUiKSxTSEFET1c6ZWUuaW50ZXJuYWxzLm5zLnNlbGVjdG9yKCJ0YWJsZV9fc2hhZG93IiksU0hBRE9XX0xFRlQ6ZWUuaW50ZXJuYWxzLm5zLnNlbGVjdG9yKCJ0YWJsZV9fc2hhZG93LS1sZWZ0IiksU0hBRE9XX1JJR0hUOmVlLmludGVybmFscy5ucy5zZWxlY3RvcigidGFibGVfX3NoYWRvdy0tcmlnaHQiKSxFTEVNRU5UOmVlLmludGVybmFscy5ucy5zZWxlY3RvcigidGFibGUiKSsiOm5vdCgiK2VlLmludGVybmFscy5ucy5zZWxlY3RvcigidGFibGUtLW5vLXNjcm9sbCIpKyIpIHRhYmxlIixDQVBUSU9OOmVlLmludGVybmFscy5ucy5zZWxlY3RvcigidGFibGUiKSsiIHRhYmxlIGNhcHRpb24ifSx4cj1mdW5jdGlvbih0KXtmdW5jdGlvbiBlKCl7dC5hcHBseSh0aGlzLGFyZ3VtZW50cyl9dCYmKGUuX19wcm90b19fPXQpLGUucHJvdG90eXBlPU9iamVjdC5jcmVhdGUodCYmdC5wcm90b3R5cGUpLGUucHJvdG90eXBlLmNvbnN0cnVjdG9yPWU7dmFyIHI9e2lzU2Nyb2xsaW5nOntjb25maWd1cmFibGU6ITB9fSxuPXtpbnN0YW5jZUNsYXNzTmFtZTp7Y29uZmlndXJhYmxlOiEwfX07cmV0dXJuIG4uaW5zdGFuY2VDbGFzc05hbWUuZ2V0PWZ1bmN0aW9uKCl7cmV0dXJuIlRhYmxlRWxlbWVudCJ9LGUucHJvdG90eXBlLmluaXQ9ZnVuY3Rpb24oKXt0aGlzLmxpc3Rlbigic2Nyb2xsIix0aGlzLnNjcm9sbC5iaW5kKHRoaXMpKSx0aGlzLmNvbnRlbnQ9dGhpcy5xdWVyeVNlbGVjdG9yKCJ0Ym9keSIpLHRoaXMuaXNSZXNpemluZz0hMH0sci5pc1Njcm9sbGluZy5nZXQ9ZnVuY3Rpb24oKXtyZXR1cm4gdGhpcy5faXNTY3JvbGxpbmd9LHIuaXNTY3JvbGxpbmcuc2V0PWZ1bmN0aW9uKHQpe3RoaXMuX2lzU2Nyb2xsaW5nIT09dCYmKHRoaXMuX2lzU2Nyb2xsaW5nPXQsdD8odGhpcy5hZGRDbGFzcyhEci5TSEFET1cpLHRoaXMuc2Nyb2xsKCkpOih0aGlzLnJlbW92ZUNsYXNzKERyLlNIQURPVyksdGhpcy5yZW1vdmVDbGFzcyhEci5TSEFET1dfTEVGVCksdGhpcy5yZW1vdmVDbGFzcyhEci5TSEFET1dfUklHSFQpKSl9LGUucHJvdG90eXBlLnNjcm9sbD1mdW5jdGlvbigpe3ZhciB0PXRoaXMubm9kZS5zY3JvbGxMZWZ0PD04LGU9dGhpcy5jb250ZW50Lm9mZnNldFdpZHRoLXRoaXMubm9kZS5vZmZzZXRXaWR0aC04LHI9TWF0aC5hYnModGhpcy5ub2RlLnNjcm9sbExlZnQpPj1lLG49InJ0bCI9PT1kb2N1bWVudC5kb2N1bWVudEVsZW1lbnQuZ2V0QXR0cmlidXRlKCJkaXIiKSxpPW4/RHIuU0hBRE9XX1JJR0hUOkRyLlNIQURPV19MRUZULG89bj9Eci5TSEFET1dfTEVGVDpEci5TSEFET1dfUklHSFQ7dD90aGlzLnJlbW92ZUNsYXNzKGkpOnRoaXMuYWRkQ2xhc3MoaSkscj90aGlzLnJlbW92ZUNsYXNzKG8pOnRoaXMuYWRkQ2xhc3Mobyl9LGUucHJvdG90eXBlLnJlc2l6ZT1mdW5jdGlvbigpe3RoaXMuaXNTY3JvbGxpbmc9dGhpcy5jb250ZW50Lm9mZnNldFdpZHRoPnRoaXMubm9kZS5vZmZzZXRXaWR0aH0sZS5wcm90b3R5cGUuZGlzcG9zZT1mdW5jdGlvbigpe3RoaXMuaXNTY3JvbGxpbmc9ITF9LE9iamVjdC5kZWZpbmVQcm9wZXJ0aWVzKGUucHJvdG90eXBlLHIpLE9iamVjdC5kZWZpbmVQcm9wZXJ0aWVzKGUsbiksZX0oZWUuY29yZS5JbnN0YW5jZSksUnI9ZnVuY3Rpb24odCl7ZnVuY3Rpb24gZSgpe3QuYXBwbHkodGhpcyxhcmd1bWVudHMpfXQmJihlLl9fcHJvdG9fXz10KSxlLnByb3RvdHlwZT1PYmplY3QuY3JlYXRlKHQmJnQucHJvdG90eXBlKSxlLnByb3RvdHlwZS5jb25zdHJ1Y3Rvcj1lO3ZhciByPXtpbnN0YW5jZUNsYXNzTmFtZTp7Y29uZmlndXJhYmxlOiEwfX07cmV0dXJuIHIuaW5zdGFuY2VDbGFzc05hbWUuZ2V0PWZ1bmN0aW9uKCl7cmV0dXJuIlRhYmxlQ2FwdGlvbiJ9LGUucHJvdG90eXBlLmluaXQ9ZnVuY3Rpb24oKXt0aGlzLmhlaWdodD0wLHRoaXMuaXNSZXNpemluZz0hMH0sZS5wcm90b3R5cGUucmVzaXplPWZ1bmN0aW9uKCl7dmFyIHQ9dGhpcy5nZXRSZWN0KCkuaGVpZ2h0O3RoaXMuaGVpZ2h0IT09dCYmKHRoaXMuaGVpZ2h0PXQsdGhpcy5hc2NlbmQoTHIuQ0FQVElPTl9IRUlHSFQsdCkpfSxPYmplY3QuZGVmaW5lUHJvcGVydGllcyhlLHIpLGV9KGVlLmNvcmUuSW5zdGFuY2UpO2VlLnRhYmxlPXtUYWJsZTpNcixUYWJsZUVsZW1lbnQ6eHIsVGFibGVDYXB0aW9uOlJyLFRhYmxlU2VsZWN0b3I6RHJ9LGVlLmludGVybmFscy5yZWdpc3RlcihlZS50YWJsZS5UYWJsZVNlbGVjdG9yLlRBQkxFLGVlLnRhYmxlLlRhYmxlKSxlZS5pbnRlcm5hbHMucmVnaXN0ZXIoZWUudGFibGUuVGFibGVTZWxlY3Rvci5FTEVNRU5ULGVlLnRhYmxlLlRhYmxlRWxlbWVudCksZWUuaW50ZXJuYWxzLnJlZ2lzdGVyKGVlLnRhYmxlLlRhYmxlU2VsZWN0b3IuQ0FQVElPTixlZS50YWJsZS5UYWJsZUNhcHRpb24pO3ZhciBrcj17RElTTUlTUzplZS5pbnRlcm5hbHMubnMuZXZlbnQoImRpc21pc3MiKX0sSHI9ZnVuY3Rpb24odCl7ZnVuY3Rpb24gZSgpe3QuYXBwbHkodGhpcyxhcmd1bWVudHMpfXQmJihlLl9fcHJvdG9fXz10KSxlLnByb3RvdHlwZT1PYmplY3QuY3JlYXRlKHQmJnQucHJvdG90eXBlKSxlLnByb3RvdHlwZS5jb25zdHJ1Y3Rvcj1lO3ZhciByPXtpbnN0YW5jZUNsYXNzTmFtZTp7Y29uZmlndXJhYmxlOiEwfX07cmV0dXJuIHIuaW5zdGFuY2VDbGFzc05hbWUuZ2V0PWZ1bmN0aW9uKCl7cmV0dXJuIlRhZ0Rpc21pc3NpYmxlIn0sZS5wcm90b3R5cGUuaW5pdD1mdW5jdGlvbigpe3RoaXMubGlzdGVuQ2xpY2soKX0sZS5wcm90b3R5cGUuaGFuZGxlQ2xpY2s9ZnVuY3Rpb24oKXtzd2l0Y2godGhpcy5mb2N1c0Nsb3Nlc3QoKSxlZS5tb2RlKXtjYXNlIGVlLk1vZGVzLkFOR1VMQVI6Y2FzZSBlZS5Nb2Rlcy5SRUFDVDpjYXNlIGVlLk1vZGVzLlZVRTp0aGlzLnJlcXVlc3QodGhpcy52ZXJpZnkuYmluZCh0aGlzKSk7YnJlYWs7ZGVmYXVsdDp0aGlzLnJlbW92ZSgpfXRoaXMuZGlzcGF0Y2goa3IuRElTTUlTUyl9LGUucHJvdG90eXBlLnZlcmlmeT1mdW5jdGlvbigpe2RvY3VtZW50LmJvZHkuY29udGFpbnModGhpcy5ub2RlKSYmdGhpcy53YXJuKCJhIFRhZ0Rpc21pc3NpYmxlIGhhcyBqdXN0IGJlZW4gZGlzbWlzc2VkIGFuZCBzaG91bGQgYmUgcmVtb3ZlZCBmcm9tIHRoZSBkb20uIEluICIrZWUubW9kZSsiIG1vZGUsIHRoZSBhcGkgZG9lc24ndCBoYW5kbGUgZG9tIG1vZGlmaWNhdGlvbi4gQW4gZXZlbnQgIitrci5ESVNNSVNTKyIgaXMgZGlzcGF0Y2hlZCBieSB0aGUgZWxlbWVudCB0byB0cmlnZ2VyIHRoZSByZW1vdmFsIil9LE9iamVjdC5kZWZpbmVQcm9wZXJ0aWVzKGUsciksZX0oZWUuY29yZS5JbnN0YW5jZSksR3I9e1BSRVNTQUJMRTplZS5pbnRlcm5hbHMubnMuc2VsZWN0b3IoInRhZyIpKyJbYXJpYS1wcmVzc2VkXSIsRElTTUlTU0lCTEU6IiIrZWUuaW50ZXJuYWxzLm5zLnNlbGVjdG9yKCJ0YWctLWRpc21pc3MiKX07ZWUudGFnPXtUYWdEaXNtaXNzaWJsZTpIcixUYWdTZWxlY3RvcjpHcixUYWdFdmVudDprcn0sZWUuaW50ZXJuYWxzLnJlZ2lzdGVyKGVlLnRhZy5UYWdTZWxlY3Rvci5QUkVTU0FCTEUsZWUuY29yZS5Ub2dnbGUpLGVlLmludGVybmFscy5yZWdpc3RlcihlZS50YWcuVGFnU2VsZWN0b3IuRElTTUlTU0lCTEUsZWUudGFnLlRhZ0Rpc21pc3NpYmxlKTt2YXIgJHI9ZWUuaW50ZXJuYWxzLm5zLnNlbGVjdG9yKCJ0cmFuc2NyaXB0aW9uIiksRnI9e1RSQU5TQ1JJUFRJT046JHIsQlVUVE9OOiRyKyJfX2J0biJ9LFVyPWZ1bmN0aW9uKHQpe2Z1bmN0aW9uIGUoKXt0LmFwcGx5KHRoaXMsYXJndW1lbnRzKX10JiYoZS5fX3Byb3RvX189dCksZS5wcm90b3R5cGU9T2JqZWN0LmNyZWF0ZSh0JiZ0LnByb3RvdHlwZSksZS5wcm90b3R5cGUuY29uc3RydWN0b3I9ZTt2YXIgcj17Y29sbGFwc2VQcmltYXJ5Ontjb25maWd1cmFibGU6ITB9fSxuPXtpbnN0YW5jZUNsYXNzTmFtZTp7Y29uZmlndXJhYmxlOiEwfX07cmV0dXJuIG4uaW5zdGFuY2VDbGFzc05hbWUuZ2V0PWZ1bmN0aW9uKCl7cmV0dXJuIlRyYW5zY3JpcHRpb24ifSxyLmNvbGxhcHNlUHJpbWFyeS5nZXQ9ZnVuY3Rpb24oKXtyZXR1cm4gdGhpcy5lbGVtZW50LmNoaWxkcmVuLm1hcCgoZnVuY3Rpb24odCl7cmV0dXJuIHQuZ2V0SW5zdGFuY2UoIkNvbGxhcHNlQnV0dG9uIil9KSkuZmlsdGVyKChmdW5jdGlvbih0KXtyZXR1cm4gbnVsbCE9PXQmJnQuaGFzQ2xhc3MoRnIuQlVUVE9OKX0pKVswXX0sT2JqZWN0LmRlZmluZVByb3BlcnRpZXMoZS5wcm90b3R5cGUsciksT2JqZWN0LmRlZmluZVByb3BlcnRpZXMoZSxuKSxlfShlZS5jb3JlLkluc3RhbmNlKTtlZS50cmFuc2NyaXB0aW9uPXtUcmFuc2NyaXB0aW9uOlVyLFRyYW5zY3JpcHRpb25TZWxlY3RvcjpGcn0sZWUuaW50ZXJuYWxzLnJlZ2lzdGVyKGVlLnRyYW5zY3JpcHRpb24uVHJhbnNjcmlwdGlvblNlbGVjdG9yLlRSQU5TQ1JJUFRJT04sZWUudHJhbnNjcmlwdGlvbi5UcmFuc2NyaXB0aW9uKTt2YXIgenI9ZnVuY3Rpb24odCl7ZnVuY3Rpb24gZSgpe3QuYXBwbHkodGhpcyxhcmd1bWVudHMpfXQmJihlLl9fcHJvdG9fXz10KSxlLnByb3RvdHlwZT1PYmplY3QuY3JlYXRlKHQmJnQucHJvdG90eXBlKSxlLnByb3RvdHlwZS5jb25zdHJ1Y3Rvcj1lO3ZhciByPXtpbnN0YW5jZUNsYXNzTmFtZTp7Y29uZmlndXJhYmxlOiEwfX07cmV0dXJuIHIuaW5zdGFuY2VDbGFzc05hbWUuZ2V0PWZ1bmN0aW9uKCl7cmV0dXJuIlRpbGVEb3dubG9hZCJ9LGUucHJvdG90eXBlLmluaXQ9ZnVuY3Rpb24oKXt2YXIgdD10aGlzO3RoaXMuYWRkQXNjZW50KGVlLmNvcmUuQXNzZXNzRW1pc3Npb24uVVBEQVRFLChmdW5jdGlvbihlKXt0LmRlc2NlbmQoZWUuY29yZS5Bc3Nlc3NFbWlzc2lvbi5VUERBVEUsZSl9KSksdGhpcy5hZGRBc2NlbnQoZWUuY29yZS5Bc3Nlc3NFbWlzc2lvbi5BRERFRCwoZnVuY3Rpb24oKXt0LmRlc2NlbmQoZWUuY29yZS5Bc3Nlc3NFbWlzc2lvbi5BRERFRCl9KSl9LE9iamVjdC5kZWZpbmVQcm9wZXJ0aWVzKGUsciksZX0oZWUuY29yZS5JbnN0YW5jZSksQnI9e0RPV05MT0FEOmVlLmludGVybmFscy5ucy5zZWxlY3RvcigidGlsZS0tZG93bmxvYWQiKSxET1dOTE9BRF9ERVRBSUw6ZWUuaW50ZXJuYWxzLm5zLnNlbGVjdG9yKCJ0aWxlLS1kb3dubG9hZCIpKyIgIitlZS5pbnRlcm5hbHMubnMuc2VsZWN0b3IoInRpbGVfX2RldGFpbCIpfTtlZS50aWxlPXtUaWxlU2VsZWN0b3I6QnIsVGlsZURvd25sb2FkOnpyfSxlZS5pbnRlcm5hbHMucmVnaXN0ZXIoZWUudGlsZS5UaWxlU2VsZWN0b3IuRE9XTkxPQUQsZWUudGlsZS5UaWxlRG93bmxvYWQpLGVlLmludGVybmFscy5yZWdpc3RlcihlZS50aWxlLlRpbGVTZWxlY3Rvci5ET1dOTE9BRF9ERVRBSUwsZWUuY29yZS5Bc3Nlc3NEZXRhaWwpO3ZhciBXcj17UkFOR0U6ZWUuaW50ZXJuYWxzLm5zLnNlbGVjdG9yKCJyYW5nZSIpLFJBTkdFX1NNOmVlLmludGVybmFscy5ucy5zZWxlY3RvcigicmFuZ2UtLXNtIiksUkFOR0VfU1RFUDplZS5pbnRlcm5hbHMubnMuc2VsZWN0b3IoInJhbmdlLS1zdGVwIiksUkFOR0VfRE9VQkxFOmVlLmludGVybmFscy5ucy5zZWxlY3RvcigicmFuZ2UtLWRvdWJsZSIpLFJBTkdFX0RPVUJMRV9TVEVQOmVlLmludGVybmFscy5ucy5zZWxlY3RvcigicmFuZ2UtLWRvdWJsZSIpK2VlLmludGVybmFscy5ucy5zZWxlY3RvcigicmFuZ2UtLXN0ZXAiKSxSQU5HRV9JTlBVVDplZS5pbnRlcm5hbHMubnMuc2VsZWN0b3IoInJhbmdlIGlucHV0W3R5cGU9cmFuZ2VdOm50aC1vZi10eXBlKDEpIiksUkFOR0VfSU5QVVQyOmVlLmludGVybmFscy5ucy5zZWxlY3RvcigicmFuZ2UtLWRvdWJsZSIpKyIgaW5wdXRbdHlwZT1yYW5nZV06bnRoLW9mLXR5cGUoMikiLFJBTkdFX09VVFBVVDplZS5pbnRlcm5hbHMubnMuc2VsZWN0b3IoInJhbmdlX19vdXRwdXQiKSxSQU5HRV9NSU46ZWUuaW50ZXJuYWxzLm5zLnNlbGVjdG9yKCJyYW5nZV9fbWluIiksUkFOR0VfTUFYOmVlLmludGVybmFscy5ucy5zZWxlY3RvcigicmFuZ2VfX21heCIpLFJBTkdFX1BSRUZJWDplZS5pbnRlcm5hbHMubnMuYXR0cigicHJlZml4IiksUkFOR0VfU1VGRklYOmVlLmludGVybmFscy5ucy5hdHRyKCJzdWZmaXgiKX0scXI9e1ZBTFVFOmVlLmludGVybmFscy5ucy5lbWlzc2lvbigicmFuZ2UiLCJ2YWx1ZSIpLFZBTFVFMjplZS5pbnRlcm5hbHMubnMuZW1pc3Npb24oInJhbmdlIiwidmFsdWUyIiksT1VUUFVUOmVlLmludGVybmFscy5ucy5lbWlzc2lvbigicmFuZ2UiLCJvdXRwdXQiKSxDT05TVFJBSU5UUzplZS5pbnRlcm5hbHMubnMuZW1pc3Npb24oInJhbmdlIiwiY29uc3RyYWludHMiKSxNSU46ZWUuaW50ZXJuYWxzLm5zLmVtaXNzaW9uKCJyYW5nZSIsIm1pbiIpLE1BWDplZS5pbnRlcm5hbHMubnMuZW1pc3Npb24oInJhbmdlIiwibWF4IiksU1RFUDplZS5pbnRlcm5hbHMubnMuZW1pc3Npb24oInJhbmdlIiwic3RlcCIpLFBSRUZJWDplZS5pbnRlcm5hbHMubnMuZW1pc3Npb24oInJhbmdlIiwicHJlZml4IiksU1VGRklYOmVlLmludGVybmFscy5ucy5lbWlzc2lvbigicmFuZ2UiLCJzdWZmaXgiKSxESVNBQkxFRDplZS5pbnRlcm5hbHMubnMuZW1pc3Npb24oInJhbmdlIiwiZGlzYWJsZWQiKSxFTkFCTEVfUE9JTlRFUjplZS5pbnRlcm5hbHMubnMuZW1pc3Npb24oInJhbmdlIiwiZW5hYmxlX3BvaW50ZXIiKX0sS3I9ZnVuY3Rpb24oKXt0aGlzLl93aWR0aD0wLHRoaXMuX21pbj0wLHRoaXMuX21heD0wLHRoaXMuX3ZhbHVlPTAsdGhpcy5fdGh1bWJTaXplPTI0LHRoaXMuX2lubmVyV2lkdGg9MCx0aGlzLl9wcmVmaXg9IiIsdGhpcy5fc3VmZml4PSIiLHRoaXMuX2JhY2tncm91bmQ9e319LFZyPXt3aWR0aDp7Y29uZmlndXJhYmxlOiEwfSxpc1NtOntjb25maWd1cmFibGU6ITB9LHRleHRWYWx1ZTp7Y29uZmlndXJhYmxlOiEwfSx2YWx1ZTp7Y29uZmlndXJhYmxlOiEwfSxvdXRwdXRYOntjb25maWd1cmFibGU6ITB9LG1pbjp7Y29uZmlndXJhYmxlOiEwfSx0ZXh0TWluOntjb25maWd1cmFibGU6ITB9LG1heDp7Y29uZmlndXJhYmxlOiEwfSx0ZXh0TWF4Ontjb25maWd1cmFibGU6ITB9LHN0ZXA6e2NvbmZpZ3VyYWJsZTohMH0sb3V0cHV0Ontjb25maWd1cmFibGU6ITB9LHByb2dyZXNzOntjb25maWd1cmFibGU6ITB9fTtLci5wcm90b3R5cGUuY29uZmlndXJlPWZ1bmN0aW9uKHQpe3QmJih0aGlzLl9wcmVmaXg9dC5fcHJlZml4LHRoaXMuX3N1ZmZpeD10Ll9zdWZmaXgsdGhpcy5fd2lkdGg9dC53aWR0aCx0aGlzLnNldENvbnN0cmFpbnRzKHQuX2NvbnN0cmFpbnRzKSx0aGlzLnZhbHVlPXQudmFsdWUsdGhpcy51cGRhdGUoKSl9LEtyLnByb3RvdHlwZS5zZXRQcmVmaXg9ZnVuY3Rpb24odCl7dGhpcy5fcHJlZml4PW51bGwhPT10P3Q6IiJ9LEtyLnByb3RvdHlwZS5zZXRTdWZmaXg9ZnVuY3Rpb24odCl7dGhpcy5fc3VmZml4PW51bGwhPT10P3Q6IiJ9LEtyLnByb3RvdHlwZS5fZGVjb3JhdGU9ZnVuY3Rpb24odCl7cmV0dXJuIiIrdGhpcy5fcHJlZml4K3QrdGhpcy5fc3VmZml4fSxWci53aWR0aC5nZXQ9ZnVuY3Rpb24oKXtyZXR1cm4gdGhpcy5fd2lkdGh9LFZyLndpZHRoLnNldD1mdW5jdGlvbih0KXt0aGlzLl93aWR0aD10fSxWci5pc1NtLmdldD1mdW5jdGlvbigpe3JldHVybiB0aGlzLl9pc1NtfSxWci5pc1NtLnNldD1mdW5jdGlvbih0KXt0aGlzLl9pc1NtIT09dCYmKHRoaXMuX2lzU209dCx0aGlzLnNldFRodW1iU2l6ZSh0PzE2OjI0KSx0aGlzLnVwZGF0ZSgpKX0sS3IucHJvdG90eXBlLnNldFRodW1iU2l6ZT1mdW5jdGlvbih0LGUpe3ZvaWQgMD09PWUmJihlPTEpLHRoaXMuX3RodW1iU2l6ZT10LHRoaXMuX2lubmVyUGFkZGluZz10KmV9LFZyLnRleHRWYWx1ZS5nZXQ9ZnVuY3Rpb24oKXtyZXR1cm4gdGhpcy5fZGVjb3JhdGUodGhpcy5fdmFsdWUpfSxWci52YWx1ZS5nZXQ9ZnVuY3Rpb24oKXtyZXR1cm4gdGhpcy5fdmFsdWV9LFZyLnZhbHVlLnNldD1mdW5jdGlvbih0KXt0aGlzLl92YWx1ZT10fSxWci5vdXRwdXRYLmdldD1mdW5jdGlvbigpe3JldHVybiB0aGlzLl9vdXRwdXRYfSxLci5wcm90b3R5cGUuc2V0Q29uc3RyYWludHM9ZnVuY3Rpb24odCl7dGhpcy5fY29uc3RyYWludHM9dCx0aGlzLl9taW49dC5taW4sdGhpcy5fbWF4PXQubWF4LHRoaXMuX3N0ZXA9dC5zdGVwLHRoaXMuX3JhbmdlV2lkdGg9dC5yYW5nZVdpZHRofSxWci5taW4uZ2V0PWZ1bmN0aW9uKCl7cmV0dXJuIHRoaXMuX21pbn0sVnIudGV4dE1pbi5nZXQ9ZnVuY3Rpb24oKXtyZXR1cm4gdGhpcy5fZGVjb3JhdGUodGhpcy5fbWluKX0sVnIubWF4LmdldD1mdW5jdGlvbigpe3JldHVybiB0aGlzLl9tYXh9LFZyLnRleHRNYXguZ2V0PWZ1bmN0aW9uKCl7cmV0dXJuIHRoaXMuX2RlY29yYXRlKHRoaXMuX21heCl9LFZyLnN0ZXAuZ2V0PWZ1bmN0aW9uKCl7cmV0dXJuIHRoaXMuX3N0ZXB9LFZyLm91dHB1dC5nZXQ9ZnVuY3Rpb24oKXtyZXR1cm57dGV4dDp0aGlzLnRleHRWYWx1ZSx0cmFuc2Zvcm06InRyYW5zbGF0ZVgoIit0aGlzLl90cmFuc2xhdGVYKyJweCkgdHJhbnNsYXRlWCgtIit0aGlzLl9jZW50ZXJQZXJjZW50KyIlKSJ9fSxLci5wcm90b3R5cGUuX2dldFJhdGlvPWZ1bmN0aW9uKHQpe3JldHVybih0LXRoaXMuX21pbikvdGhpcy5fcmFuZ2VXaWR0aH0sVnIucHJvZ3Jlc3MuZ2V0PWZ1bmN0aW9uKCl7cmV0dXJuIHRoaXMuX3Byb2dyZXNzfSxLci5wcm90b3R5cGUudXBkYXRlPWZ1bmN0aW9uKCl7dGhpcy5fdXBkYXRlKCl9LEtyLnByb3RvdHlwZS5fdXBkYXRlPWZ1bmN0aW9uKCl7dGhpcy5faW5uZXJXaWR0aD10aGlzLl93aWR0aC10aGlzLl9pbm5lclBhZGRpbmc7dmFyIHQ9dGhpcy5fZ2V0UmF0aW8odGhpcy5fdmFsdWUpO3RoaXMuX3RyYW5zbGF0ZVg9dCp0aGlzLl93aWR0aCx0aGlzLl9jZW50ZXJQZXJjZW50PTEwMCp0LHRoaXMuX3Byb2dyZXNzPXtyaWdodDoodGhpcy5faW5uZXJXaWR0aCp0Ky41KnRoaXMuX2lubmVyUGFkZGluZykudG9GaXhlZCgyKSsicHgifX0sT2JqZWN0LmRlZmluZVByb3BlcnRpZXMoS3IucHJvdG90eXBlLFZyKTt2YXIgWXI9ZnVuY3Rpb24odCl7ZnVuY3Rpb24gZSgpe3QuYXBwbHkodGhpcyxhcmd1bWVudHMpfXQmJihlLl9fcHJvdG9fXz10KSxlLnByb3RvdHlwZT1PYmplY3QuY3JlYXRlKHQmJnQucHJvdG90eXBlKSxlLnByb3RvdHlwZS5jb25zdHJ1Y3Rvcj1lO3ZhciByPXtzdGVwV2lkdGg6e2NvbmZpZ3VyYWJsZTohMH19O3JldHVybiByLnN0ZXBXaWR0aC5nZXQ9ZnVuY3Rpb24oKXtyZXR1cm4gdGhpcy5fc3RlcFdpZHRoLnRvRml4ZWQoMykrInB4In0sZS5wcm90b3R5cGUuX3VwZGF0ZT1mdW5jdGlvbigpe3QucHJvdG90eXBlLl91cGRhdGUuY2FsbCh0aGlzKTt2YXIgZT10aGlzLl9yYW5nZVdpZHRoL3RoaXMuX3N0ZXA7Zm9yKHRoaXMuX3N0ZXBXaWR0aD10aGlzLl9pbm5lcldpZHRoL2U7dGhpcy5fc3RlcFdpZHRoPDQ7KXRoaXMuX3N0ZXBXaWR0aCo9Mn0sT2JqZWN0LmRlZmluZVByb3BlcnRpZXMoZS5wcm90b3R5cGUsciksZX0oS3IpLFhyPWZ1bmN0aW9uKHQpe2Z1bmN0aW9uIGUoKXt0LmFwcGx5KHRoaXMsYXJndW1lbnRzKX10JiYoZS5fX3Byb3RvX189dCksZS5wcm90b3R5cGU9T2JqZWN0LmNyZWF0ZSh0JiZ0LnByb3RvdHlwZSksZS5wcm90b3R5cGUuY29uc3RydWN0b3I9ZTt2YXIgcj17dmFsdWUyOntjb25maWd1cmFibGU6ITB9LHRleHRWYWx1ZTp7Y29uZmlndXJhYmxlOiEwfX07cmV0dXJuIHIudmFsdWUyLmdldD1mdW5jdGlvbigpe3JldHVybiB0aGlzLl92YWx1ZX0sci52YWx1ZTIuc2V0PWZ1bmN0aW9uKHQpe3RoaXMuX3ZhbHVlMiE9PXQmJih0aGlzLl92YWx1ZTI9dCx0aGlzLnVwZGF0ZSgpKX0sci50ZXh0VmFsdWUuZ2V0PWZ1bmN0aW9uKCl7cmV0dXJuIHRoaXMuX2RlY29yYXRlKHRoaXMuX3ZhbHVlKSsiIC0gIit0aGlzLl9kZWNvcmF0ZSh0aGlzLl92YWx1ZTIpfSxlLnByb3RvdHlwZS5zZXRUaHVtYlNpemU9ZnVuY3Rpb24oZSl7dC5wcm90b3R5cGUuc2V0VGh1bWJTaXplLmNhbGwodGhpcyxlLDIpfSxlLnByb3RvdHlwZS5fdXBkYXRlPWZ1bmN0aW9uKCl7dC5wcm90b3R5cGUuX3VwZGF0ZS5jYWxsKHRoaXMpO3ZhciBlPXRoaXMuX2dldFJhdGlvKC41Kih0aGlzLl92YWx1ZSt0aGlzLl92YWx1ZTIpKTt0aGlzLl90cmFuc2xhdGVYPWUqdGhpcy5fd2lkdGgsdGhpcy5fY2VudGVyUGVyY2VudD0xMDAqZTt2YXIgcj10aGlzLl9nZXRSYXRpbyh0aGlzLl92YWx1ZSksbj10aGlzLl9nZXRSYXRpbyh0aGlzLl92YWx1ZTIpO3RoaXMuX3Byb2dyZXNzPXtsZWZ0Oih0aGlzLl9pbm5lcldpZHRoKnIrLjI1KnRoaXMuX2lubmVyUGFkZGluZykudG9GaXhlZCgyKSsicHgiLHJpZ2h0Oih0aGlzLl9pbm5lcldpZHRoKm4rLjc1KnRoaXMuX2lubmVyUGFkZGluZykudG9GaXhlZCgyKSsicHgifX0sT2JqZWN0LmRlZmluZVByb3BlcnRpZXMoZS5wcm90b3R5cGUsciksZX0oS3IpLFFyPWZ1bmN0aW9uKHQpe2Z1bmN0aW9uIGUoKXt0LmFwcGx5KHRoaXMsYXJndW1lbnRzKX10JiYoZS5fX3Byb3RvX189dCksZS5wcm90b3R5cGU9T2JqZWN0LmNyZWF0ZSh0JiZ0LnByb3RvdHlwZSksZS5wcm90b3R5cGUuY29uc3RydWN0b3I9ZTt2YXIgcj17c3RlcFdpZHRoOntjb25maWd1cmFibGU6ITB9fTtyZXR1cm4gci5zdGVwV2lkdGguZ2V0PWZ1bmN0aW9uKCl7cmV0dXJuIHRoaXMuX3N0ZXBXaWR0aC50b0ZpeGVkKDMpKyJweCJ9LGUucHJvdG90eXBlLl91cGRhdGU9ZnVuY3Rpb24oKXt0LnByb3RvdHlwZS5fdXBkYXRlLmNhbGwodGhpcyk7dmFyIGU9dGhpcy5fcmFuZ2VXaWR0aC90aGlzLl9zdGVwO3RoaXMuX3N0ZXBXaWR0aD10aGlzLl9pbm5lcldpZHRoL2UsdGhpcy5fc3RlcFdpZHRoPDQmJih0aGlzLl9zdGVwV2lkdGgqPU1hdGguY2VpbCg0L3RoaXMuX3N0ZXBXaWR0aCkpfSxPYmplY3QuZGVmaW5lUHJvcGVydGllcyhlLnByb3RvdHlwZSxyKSxlfShYciksSnI9InN0ZXAiLFpyPSJkb3VibGUiLHRuPSJkb3VibGUtc3RlcCIsZW49ImRlZmF1bHQiLHJuPWZ1bmN0aW9uKHQpe2Z1bmN0aW9uIGUoKXt0LmFwcGx5KHRoaXMsYXJndW1lbnRzKX10JiYoZS5fX3Byb3RvX189dCksZS5wcm90b3R5cGU9T2JqZWN0LmNyZWF0ZSh0JiZ0LnByb3RvdHlwZSksZS5wcm90b3R5cGUuY29uc3RydWN0b3I9ZTt2YXIgcj17dHlwZTp7Y29uZmlndXJhYmxlOiEwfX0sbj17aW5zdGFuY2VDbGFzc05hbWU6e2NvbmZpZ3VyYWJsZTohMH19O3JldHVybiBuLmluc3RhbmNlQ2xhc3NOYW1lLmdldD1mdW5jdGlvbigpe3JldHVybiJSYW5nZSJ9LGUucHJvdG90eXBlLmluaXQ9ZnVuY3Rpb24oKXt0aGlzLl9yZXRyaWV2ZVR5cGUoKSx0aGlzLl9yZXRyaWV2ZVNpemUoKSx0aGlzLmlzTGVnYWN5Pyh0aGlzLmlzUmVzaXppbmc9ITAsdGhpcy5pc01vdXNlTW92aW5nPSEwKToodGhpcy5fb2JzZXJ2ZXI9bmV3IFJlc2l6ZU9ic2VydmVyKHRoaXMucmVzaXplLmJpbmQodGhpcykpLHRoaXMuX29ic2VydmVyLm9ic2VydmUodGhpcy5ub2RlKSksdGhpcy5hZGRBc2NlbnQocXIuQ09OU1RSQUlOVFMsdGhpcy5zZXRDb25zdHJhaW50cy5iaW5kKHRoaXMpKSx0aGlzLmFkZEFzY2VudChxci5WQUxVRSx0aGlzLnNldFZhbHVlLmJpbmQodGhpcykpLHRoaXMuYWRkQXNjZW50KHFyLlZBTFVFMix0aGlzLnNldFZhbHVlMi5iaW5kKHRoaXMpKSx0aGlzLmdldEF0dHJpYnV0ZShXci5SQU5HRV9QUkVGSVgpJiZ0aGlzLnNldFByZWZpeCh0aGlzLmdldEF0dHJpYnV0ZShXci5SQU5HRV9QUkVGSVgpKSx0aGlzLmdldEF0dHJpYnV0ZShXci5SQU5HRV9TVUZGSVgpJiZ0aGlzLnNldFN1ZmZpeCh0aGlzLmdldEF0dHJpYnV0ZShXci5SQU5HRV9TVUZGSVgpKSx0aGlzLnVwZGF0ZSgpfSxlLnByb3RvdHlwZS5fcmV0cmlldmVUeXBlPWZ1bmN0aW9uKCl7c3dpdGNoKCEwKXtjYXNlIHRoaXMubWF0Y2hlcyhXci5SQU5HRV9ET1VCTEVfU1RFUCk6Y2FzZSB0aGlzLm1hdGNoZXMoV3IuUkFOR0VfRE9VQkxFKTp0aGlzLnR5cGU9WnI7YnJlYWs7Y2FzZSB0aGlzLm1hdGNoZXMoV3IuUkFOR0VfU1RFUCk6dGhpcy50eXBlPUpyO2JyZWFrO2RlZmF1bHQ6dGhpcy50eXBlPWVufX0sci50eXBlLnNldD1mdW5jdGlvbih0KXtpZih0aGlzLl90eXBlIT09dCl7dGhpcy5fdHlwZT10O3ZhciBlPXRoaXMuX21vZGVsO3N3aXRjaCh0aGlzLl90eXBlKXtjYXNlIHRuOnRoaXMuX21vZGVsPW5ldyBRcjticmVhaztjYXNlIFpyOnRoaXMuX21vZGVsPW5ldyBYcjticmVhaztjYXNlIEpyOnRoaXMuX21vZGVsPW5ldyBZcjticmVhaztkZWZhdWx0OnRoaXMuX21vZGVsPW5ldyBLcn10aGlzLl9tb2RlbC5jb25maWd1cmUoZSl9fSxyLnR5cGUuZ2V0PWZ1bmN0aW9uKCl7cmV0dXJuIHRoaXMuX3R5cGV9LGUucHJvdG90eXBlLl9yZXRyaWV2ZVNpemU9ZnVuY3Rpb24oKXt0aGlzLl9tb2RlbC5pc1NtPXRoaXMubWF0Y2hlcyhXci5SQU5HRV9TTSl9LGUucHJvdG90eXBlLnJlc2l6ZT1mdW5jdGlvbigpe3RoaXMuX3JldHJpZXZlV2lkdGgoKSx0aGlzLnVwZGF0ZSgpfSxlLnByb3RvdHlwZS5fcmV0cmlldmVXaWR0aD1mdW5jdGlvbigpe3RoaXMuX21vZGVsLndpZHRoPXRoaXMuZ2V0UmVjdCgpLndpZHRofSxlLnByb3RvdHlwZS5zZXRWYWx1ZT1mdW5jdGlvbih0KXtzd2l0Y2godGhpcy5fbW9kZWwudmFsdWU9dCx0aGlzLl90eXBlKXtjYXNlIHRuOmNhc2UgWnI6dGhpcy5kZXNjZW5kKHFyLlZBTFVFLHQpfXRoaXMudXBkYXRlKCl9LGUucHJvdG90eXBlLnNldFZhbHVlMj1mdW5jdGlvbih0KXt0aGlzLl9tb2RlbC52YWx1ZTI9dCx0aGlzLmRlc2NlbmQocXIuVkFMVUUyLHQpLHRoaXMudXBkYXRlKCl9LGUucHJvdG90eXBlLnNldENvbnN0cmFpbnRzPWZ1bmN0aW9uKHQpe3RoaXMuX21vZGVsLnNldENvbnN0cmFpbnRzKHQpLHRoaXMudXBkYXRlKCksdGhpcy5kZXNjZW5kKHFyLkNPTlNUUkFJTlRTLHQpfSxlLnByb3RvdHlwZS5zZXRQcmVmaXg9ZnVuY3Rpb24odCl7dGhpcy5fbW9kZWwuc2V0UHJlZml4KHQpLHRoaXMudXBkYXRlKCl9LGUucHJvdG90eXBlLnNldFN1ZmZpeD1mdW5jdGlvbih0KXt0aGlzLl9tb2RlbC5zZXRTdWZmaXgodCksdGhpcy51cGRhdGUoKX0sZS5wcm90b3R5cGUubXV0YXRlPWZ1bmN0aW9uKHQpe3N3aXRjaCghMCl7Y2FzZSB0LmluY2x1ZGVzKCJjbGFzcyIpOnRoaXMuX3JldHJpZXZlVHlwZSgpLHRoaXMuX3JldHJpZXZlU2l6ZSgpO2JyZWFrO2Nhc2UgdC5pbmNsdWRlcyhXci5SQU5HRV9QUkVGSVgpOmNhc2UgdC5pbmNsdWRlcyhXci5SQU5HRV9TVUZGSVgpOnRoaXMuX21vZGVsLnNldFByZWZpeCh0aGlzLmdldEF0dHJpYnV0ZShXci5SQU5HRV9QUkVGSVgpKSx0aGlzLl9tb2RlbC5zZXRTdWZmaXgodGhpcy5nZXRBdHRyaWJ1dGUoV3IuUkFOR0VfU1VGRklYKSksdGhpcy51cGRhdGUoKX19LGUucHJvdG90eXBlLnVwZGF0ZT1mdW5jdGlvbigpe3RoaXMuX21vZGVsLnVwZGF0ZSgpLHRoaXMuZGVzY2VuZChxci5PVVRQVVQsdGhpcy5fbW9kZWwub3V0cHV0KSx0aGlzLmRlc2NlbmQocXIuTUlOLHRoaXMuX21vZGVsLnRleHRNaW4pLHRoaXMuZGVzY2VuZChxci5NQVgsdGhpcy5fbW9kZWwudGV4dE1heCk7dmFyIHQ9dGhpcy5fbW9kZWwucHJvZ3Jlc3M7dC5sZWZ0P3RoaXMuc3R5bGUuc2V0UHJvcGVydHkoIi0tcHJvZ3Jlc3MtbGVmdCIsdC5sZWZ0KTp0aGlzLnN0eWxlLnJlbW92ZVByb3BlcnR5KCItLXByb2dyZXNzLWxlZnQiKSx0LnJpZ2h0Pyh0aGlzLnN0eWxlLnNldFByb3BlcnR5KCItLXByb2dyZXNzLXJpZ2h0Iix0LnJpZ2h0KSx0aGlzLmlzTGVnYWN5JiZ0LmxlZnQmJih0aGlzLnN0eWxlLnNldFByb3BlcnR5KCJiYWNrZ3JvdW5kLXBvc2l0aW9uLXgiLHQubGVmdCksdGhpcy5zdHlsZS5zZXRQcm9wZXJ0eSgiYmFja2dyb3VuZC1zaXplIixwYXJzZUZsb2F0KHQucmlnaHQpLXBhcnNlRmxvYXQodC5sZWZ0KSsicHggIisodGhpcy5fbW9kZWwuaXNTbT8iOHB4IjoiMTJweCIpKSkpOih0aGlzLnN0eWxlLnJlbW92ZVByb3BlcnR5KCItLXByb2dyZXNzLXJpZ2h0IiksdGhpcy5pc0xlZ2FjeSYmKHRoaXMuc3R5bGUucmVtb3ZlUHJvcGVydHkoImJhY2tncm91bmQtc2l6ZSIpLHRoaXMuc3R5bGUucmVtb3ZlUHJvcGVydHkoImJhY2tncm91bmQtcG9zaXRpb24teCIpKSksdGhpcy5fbW9kZWwuc3RlcFdpZHRoP3RoaXMuc3R5bGUuc2V0UHJvcGVydHkoIi0tc3RlcC13aWR0aCIsdGhpcy5fbW9kZWwuc3RlcFdpZHRoKTp0aGlzLnN0eWxlLnJlbW92ZVByb3BlcnR5KCItLXN0ZXAtd2lkdGgiKX0sZS5wcm90b3R5cGUubW91c2VNb3ZlPWZ1bmN0aW9uKHQpe2lmKHRoaXMuX3R5cGU9PT1acnx8dGhpcy5fdHlwZT09PXRuKXt2YXIgZT10LngtdGhpcy5nZXRSZWN0KCkubGVmdDt0aGlzLmRlc2NlbmQocXIuRU5BQkxFX1BPSU5URVIsKHBhcnNlRmxvYXQodGhpcy5fbW9kZWwucHJvZ3Jlc3MucmlnaHQpLXBhcnNlRmxvYXQodGhpcy5fbW9kZWwucHJvZ3Jlc3MubGVmdCkpLzIrcGFyc2VGbG9hdCh0aGlzLl9tb2RlbC5wcm9ncmVzcy5sZWZ0KTxlPzI6MSl9fSxlLnByb3RvdHlwZS5kaXNwb3NlPWZ1bmN0aW9uKCl7dGhpcy5fb2JzZXJ2ZXIuZGlzY29ubmVjdCgpfSxPYmplY3QuZGVmaW5lUHJvcGVydGllcyhlLnByb3RvdHlwZSxyKSxPYmplY3QuZGVmaW5lUHJvcGVydGllcyhlLG4pLGV9KGVlLmNvcmUuSW5zdGFuY2UpLG5uPWZ1bmN0aW9uKHQpe3RoaXMuX21pbj1pc05hTih0Lm1pbik/MDp0Lm1pbix0aGlzLl9tYXg9aXNOYU4odC5tYXgpPzEwMDp0Lm1heCx0aGlzLl9zdGVwPWlzTmFOKHQuc3RlcCk/MTp0LnN0ZXAsdGhpcy5fcmFuZ2VXaWR0aD10aGlzLl9tYXgtdGhpcy5fbWlufSxvbj17bWluOntjb25maWd1cmFibGU6ITB9LG1heDp7Y29uZmlndXJhYmxlOiEwfSxzdGVwOntjb25maWd1cmFibGU6ITB9LHJhbmdlV2lkdGg6e2NvbmZpZ3VyYWJsZTohMH19O29uLm1pbi5nZXQ9ZnVuY3Rpb24oKXtyZXR1cm4gdGhpcy5fbWlufSxvbi5tYXguZ2V0PWZ1bmN0aW9uKCl7cmV0dXJuIHRoaXMuX21heH0sb24uc3RlcC5nZXQ9ZnVuY3Rpb24oKXtyZXR1cm4gdGhpcy5fc3RlcH0sb24ucmFuZ2VXaWR0aC5nZXQ9ZnVuY3Rpb24oKXtyZXR1cm4gdGhpcy5fcmFuZ2VXaWR0aH0sbm4ucHJvdG90eXBlLnRlc3Q9ZnVuY3Rpb24odCxlLHIpe3JldHVybiB0aGlzLl9taW49PT10JiZ0aGlzLl9tYXg9PT1lJiZ0aGlzLl9zdGVwPT09cn0sT2JqZWN0LmRlZmluZVByb3BlcnRpZXMobm4ucHJvdG90eXBlLG9uKTt2YXIgc249ZnVuY3Rpb24odCl7ZnVuY3Rpb24gZSgpe3QuYXBwbHkodGhpcyxhcmd1bWVudHMpfXQmJihlLl9fcHJvdG9fXz10KSxlLnByb3RvdHlwZT1PYmplY3QuY3JlYXRlKHQmJnQucHJvdG90eXBlKSxlLnByb3RvdHlwZS5jb25zdHJ1Y3Rvcj1lO3ZhciByPXtpbnN0YW5jZUNsYXNzTmFtZTp7Y29uZmlndXJhYmxlOiEwfX07cmV0dXJuIHIuaW5zdGFuY2VDbGFzc05hbWUuZ2V0PWZ1bmN0aW9uKCl7cmV0dXJuIlJhbmdlSW5wdXQifSxlLnByb3RvdHlwZS5pbml0PWZ1bmN0aW9uKCl7dGhpcy5faW5pdCgpLHRoaXMubm9kZS52YWx1ZT10aGlzLmdldEF0dHJpYnV0ZSgidmFsdWUiKSx0aGlzLl9jaGFuZ2luZz10aGlzLmNoYW5nZS5iaW5kKHRoaXMpLHRoaXMuX2xpc3RlbmVyVHlwZT10aGlzLmlzTGVnYWN5PyJjaGFuZ2UiOiJpbnB1dCIsdGhpcy5saXN0ZW4odGhpcy5fbGlzdGVuZXJUeXBlLHRoaXMuX2NoYW5naW5nKSx0aGlzLmlzTGVnYWN5JiZ0aGlzLmFkZERlc2NlbnQocXIuRU5BQkxFX1BPSU5URVIsdGhpcy5fZW5hYmxlUG9pbnRlci5iaW5kKHRoaXMpKSx0aGlzLmNoYW5nZSgpfSxlLnByb3RvdHlwZS5faW5pdD1mdW5jdGlvbigpe3ZhciB0PXRoaXM7dGhpcy5fcG9pbnRlcklkPTEsdGhpcy5yZXF1ZXN0KChmdW5jdGlvbigpe3QuaGFzQXR0cmlidXRlKCJtaW4iKXx8dC5zZXRBdHRyaWJ1dGUoIm1pbiIsMCksdC5hc2NlbmQocXIuQ09OU1RSQUlOVFMsbmV3IG5uKHQubm9kZSkpLHQuYXNjZW5kKHFyLkRJU0FCTEVELHQubm9kZS5kaXNhYmxlZCl9KSksdGhpcy5hZGREZXNjZW50KHFyLlZBTFVFMix0aGlzLnNldFZhbHVlLmJpbmQodGhpcykpfSxlLnByb3RvdHlwZS5fZW5hYmxlUG9pbnRlcj1mdW5jdGlvbih0KXt2YXIgZT10PT09dGhpcy5fcG9pbnRlcklkO3RoaXMuX2lzUG9pbnRlckVuYWJsZWQhPT1lJiYodGhpcy5faXNQb2ludGVyRW5hYmxlZD1lLGU/dGhpcy5zdHlsZS5yZW1vdmVQcm9wZXJ0eSgicG9pbnRlci1ldmVudHMiKTp0aGlzLnN0eWxlLnNldFByb3BlcnR5KCJwb2ludGVyLWV2ZW50cyIsIm5vbmUiKSl9LGUucHJvdG90eXBlLnNldFZhbHVlPWZ1bmN0aW9uKHQpe3BhcnNlRmxvYXQodGhpcy5ub2RlLnZhbHVlKT50JiYodGhpcy5ub2RlLnZhbHVlPXQsdGhpcy5jaGFuZ2UoKSl9LGUucHJvdG90eXBlLmNoYW5nZT1mdW5jdGlvbigpe3RoaXMuYXNjZW5kKHFyLlZBTFVFLHBhcnNlRmxvYXQodGhpcy5ub2RlLnZhbHVlKSl9LGUucHJvdG90eXBlLm11dGF0ZT1mdW5jdGlvbih0KXt0LmluY2x1ZGVzKCJkaXNhYmxlZCIpJiZ0aGlzLmFzY2VuZChxci5ESVNBQkxFRCx0aGlzLm5vZGUuZGlzYWJsZWQpLCh0LmluY2x1ZGVzKCJtaW4iKXx8dC5pbmNsdWRlcygibWF4Iil8fHQuaW5jbHVkZXMoInN0ZXAiKSkmJih0aGlzLmFzY2VuZChxci5DT05TVFJBSU5UUyxuZXcgbm4odGhpcy5ub2RlKSksdGhpcy5jaGFuZ2UoKSl9LGUucHJvdG90eXBlLmRpc3Bvc2U9ZnVuY3Rpb24oKXt0aGlzLl9saXN0ZW5lclR5cGUmJnRoaXMudW5saXN0ZW4odGhpcy5fbGlzdGVuZXJUeXBlLHRoaXMuX2NoYW5naW5nKX0sT2JqZWN0LmRlZmluZVByb3BlcnRpZXMoZSxyKSxlfShlZS5jb3JlLkluc3RhbmNlKSxhbj1mdW5jdGlvbih0KXtmdW5jdGlvbiBlKCl7dC5hcHBseSh0aGlzLGFyZ3VtZW50cyl9dCYmKGUuX19wcm90b19fPXQpLGUucHJvdG90eXBlPU9iamVjdC5jcmVhdGUodCYmdC5wcm90b3R5cGUpLGUucHJvdG90eXBlLmNvbnN0cnVjdG9yPWU7dmFyIHI9e2luc3RhbmNlQ2xhc3NOYW1lOntjb25maWd1cmFibGU6ITB9fTtyZXR1cm4gci5pbnN0YW5jZUNsYXNzTmFtZS5nZXQ9ZnVuY3Rpb24oKXtyZXR1cm4iUmFuZ2VJbnB1dDIifSxlLnByb3RvdHlwZS5faW5pdD1mdW5jdGlvbigpe3RoaXMuX3BvaW50ZXJJZD0yLHRoaXMuYWRkRGVzY2VudChxci5DT05TVFJBSU5UUyx0aGlzLnNldENvbnN0cmFpbnRzLmJpbmQodGhpcykpLHRoaXMuYWRkRGVzY2VudChxci5WQUxVRSx0aGlzLnNldFZhbHVlLmJpbmQodGhpcykpfSxlLnByb3RvdHlwZS5zZXRWYWx1ZT1mdW5jdGlvbih0KXtwYXJzZUZsb2F0KHRoaXMubm9kZS52YWx1ZSk8dCYmKHRoaXMubm9kZS52YWx1ZT10LHRoaXMuY2hhbmdlKCkpfSxlLnByb3RvdHlwZS5jaGFuZ2U9ZnVuY3Rpb24oKXt0aGlzLmFzY2VuZChxci5WQUxVRTIscGFyc2VGbG9hdCh0aGlzLm5vZGUudmFsdWUpKX0sZS5wcm90b3R5cGUuc2V0Q29uc3RyYWludHM9ZnVuY3Rpb24odCl7dGhpcy5ub2RlLm1pbj10Lm1pbix0aGlzLm5vZGUubWF4PXQubWF4LHRoaXMubm9kZS5zdGVwPXQuc3RlcCx0aGlzLmNoYW5nZSgpfSxlLnByb3RvdHlwZS5tdXRhdGU9ZnVuY3Rpb24odCl7fSxPYmplY3QuZGVmaW5lUHJvcGVydGllcyhlLHIpLGV9KHNuKSxjbj1mdW5jdGlvbih0KXtmdW5jdGlvbiBlKCl7dC5hcHBseSh0aGlzLGFyZ3VtZW50cyl9dCYmKGUuX19wcm90b19fPXQpLGUucHJvdG90eXBlPU9iamVjdC5jcmVhdGUodCYmdC5wcm90b3R5cGUpLGUucHJvdG90eXBlLmNvbnN0cnVjdG9yPWU7dmFyIHI9e2luc3RhbmNlQ2xhc3NOYW1lOntjb25maWd1cmFibGU6ITB9fTtyZXR1cm4gci5pbnN0YW5jZUNsYXNzTmFtZS5nZXQ9ZnVuY3Rpb24oKXtyZXR1cm4iUmFuZ2VPdXRwdXQifSxlLnByb3RvdHlwZS5pbml0PWZ1bmN0aW9uKCl7dGhpcy5hZGREZXNjZW50KHFyLk9VVFBVVCx0aGlzLmNoYW5nZS5iaW5kKHRoaXMpKX0sZS5wcm90b3R5cGUuY2hhbmdlPWZ1bmN0aW9uKHQpe3RoaXMubm9kZS5pbm5lclRleHQ9dC50ZXh0LHRoaXMubm9kZS5zdHlsZS50cmFuc2Zvcm09dC50cmFuc2Zvcm19LE9iamVjdC5kZWZpbmVQcm9wZXJ0aWVzKGUsciksZX0oZWUuY29yZS5JbnN0YW5jZSksbG49ZnVuY3Rpb24odCl7ZnVuY3Rpb24gZSgpe3QuYXBwbHkodGhpcyxhcmd1bWVudHMpfXQmJihlLl9fcHJvdG9fXz10KSxlLnByb3RvdHlwZT1PYmplY3QuY3JlYXRlKHQmJnQucHJvdG90eXBlKSxlLnByb3RvdHlwZS5jb25zdHJ1Y3Rvcj1lO3ZhciByPXtpbnN0YW5jZUNsYXNzTmFtZTp7Y29uZmlndXJhYmxlOiEwfX07cmV0dXJuIHIuaW5zdGFuY2VDbGFzc05hbWUuZ2V0PWZ1bmN0aW9uKCl7cmV0dXJuIlJhbmdlTGltaXQifSxlLnByb3RvdHlwZS5pbml0PWZ1bmN0aW9uKCl7c3dpdGNoKCEwKXtjYXNlIHRoaXMubWF0Y2hlcyhXci5SQU5HRV9NSU4pOnRoaXMuYWRkRGVzY2VudChxci5NSU4sdGhpcy5jaGFuZ2UuYmluZCh0aGlzKSk7YnJlYWs7Y2FzZSB0aGlzLm1hdGNoZXMoV3IuUkFOR0VfTUFYKTp0aGlzLmFkZERlc2NlbnQocXIuTUFYLHRoaXMuY2hhbmdlLmJpbmQodGhpcykpfX0sZS5wcm90b3R5cGUuY2hhbmdlPWZ1bmN0aW9uKHQpe3RoaXMubm9kZS5pbm5lclRleHQ9dH0sT2JqZWN0LmRlZmluZVByb3BlcnRpZXMoZSxyKSxlfShlZS5jb3JlLkluc3RhbmNlKTtlZS5yYW5nZT17UmFuZ2U6cm4sUmFuZ2VJbnB1dDpzbixSYW5nZUlucHV0MjphbixSYW5nZU91dHB1dDpjbixSYW5nZUxpbWl0OmxuLFJhbmdlRW1pc3Npb246cXIsUmFuZ2VTZWxlY3RvcjpXcn0sZWUuaW50ZXJuYWxzLnJlZ2lzdGVyKGVlLnJhbmdlLlJhbmdlU2VsZWN0b3IuUkFOR0UsZWUucmFuZ2UuUmFuZ2UpLGVlLmludGVybmFscy5yZWdpc3RlcihlZS5yYW5nZS5SYW5nZVNlbGVjdG9yLlJBTkdFX0lOUFVULGVlLnJhbmdlLlJhbmdlSW5wdXQpLGVlLmludGVybmFscy5yZWdpc3RlcihlZS5yYW5nZS5SYW5nZVNlbGVjdG9yLlJBTkdFX0lOUFVUMixlZS5yYW5nZS5SYW5nZUlucHV0MiksZWUuaW50ZXJuYWxzLnJlZ2lzdGVyKGVlLnJhbmdlLlJhbmdlU2VsZWN0b3IuUkFOR0VfT1VUUFVULGVlLnJhbmdlLlJhbmdlT3V0cHV0KSxlZS5pbnRlcm5hbHMucmVnaXN0ZXIoZWUucmFuZ2UuUmFuZ2VTZWxlY3Rvci5SQU5HRV9NSU4sZWUucmFuZ2UuUmFuZ2VMaW1pdCksZWUuaW50ZXJuYWxzLnJlZ2lzdGVyKGVlLnJhbmdlLlJhbmdlU2VsZWN0b3IuUkFOR0VfTUFYLGVlLnJhbmdlLlJhbmdlTGltaXQpO3ZhciB1bj17SEVBREVSOmVlLmludGVybmFscy5ucy5zZWxlY3RvcigiaGVhZGVyIiksVE9PTFNfTElOS1M6ZWUuaW50ZXJuYWxzLm5zLnNlbGVjdG9yKCJoZWFkZXJfX3Rvb2xzLWxpbmtzIiksTUVOVV9MSU5LUzplZS5pbnRlcm5hbHMubnMuc2VsZWN0b3IoImhlYWRlcl9fbWVudS1saW5rcyIpLEJVVFRPTlM6ZWUuaW50ZXJuYWxzLm5zLnNlbGVjdG9yKCJoZWFkZXJfX3Rvb2xzLWxpbmtzIikrIiAiK2VlLmludGVybmFscy5ucy5zZWxlY3RvcigiYnRucy1ncm91cCIpKyIsICIrZWUuaW50ZXJuYWxzLm5zLnNlbGVjdG9yKCJoZWFkZXJfX3Rvb2xzLWxpbmtzIikrIiAiK2VlLmludGVybmFscy5ucy5zZWxlY3RvcigibGlua3MtZ3JvdXAiKSxNT0RBTFM6IiIrZWUuaW50ZXJuYWxzLm5zLnNlbGVjdG9yKCJoZWFkZXJfX3NlYXJjaCIpK2VlLmludGVybmFscy5ucy5zZWxlY3RvcigibW9kYWwiKSsiLCAiK2VlLmludGVybmFscy5ucy5zZWxlY3RvcigiaGVhZGVyX19tZW51IikrZWUuaW50ZXJuYWxzLm5zLnNlbGVjdG9yKCJtb2RhbCIpfSxwbj1mdW5jdGlvbih0KXtmdW5jdGlvbiBlKCl7dC5hcHBseSh0aGlzLGFyZ3VtZW50cyl9dCYmKGUuX19wcm90b19fPXQpLGUucHJvdG90eXBlPU9iamVjdC5jcmVhdGUodCYmdC5wcm90b3R5cGUpLGUucHJvdG90eXBlLmNvbnN0cnVjdG9yPWU7dmFyIHI9e2luc3RhbmNlQ2xhc3NOYW1lOntjb25maWd1cmFibGU6ITB9fTtyZXR1cm4gci5pbnN0YW5jZUNsYXNzTmFtZS5nZXQ9ZnVuY3Rpb24oKXtyZXR1cm4iSGVhZGVyTGlua3MifSxlLnByb3RvdHlwZS5pbml0PWZ1bmN0aW9uKCl7dmFyIHQ9dGhpcy5xdWVyeVBhcmVudFNlbGVjdG9yKHVuLkhFQURFUik7dGhpcy50b29sc0xpbmtzPXQucXVlcnlTZWxlY3Rvcih1bi5UT09MU19MSU5LUyksdGhpcy5tZW51TGlua3M9dC5xdWVyeVNlbGVjdG9yKHVuLk1FTlVfTElOS1MpO3ZhciBlPSItbW9iaWxlIixyPXRoaXMudG9vbHNMaW5rcy5pbm5lckhUTUwucmVwbGFjZSgvICArL2csIiAiKSxuPXRoaXMubWVudUxpbmtzLmlubmVySFRNTC5yZXBsYWNlKC8gICsvZywiICIpLGk9ci5tYXRjaCgvaWQ9IiguKj8pIi9nbSl8fFtdO2k9aS5tYXAoKGZ1bmN0aW9uKHQpe3JldHVybiB0LnJlcGxhY2UoJ2lkPSInLCIiKS5yZXBsYWNlKCciJywiIil9KSk7dmFyIG89ci5tYXRjaCgvYXJpYS1jb250cm9scz0iKC4qPykiL2dtKSxzPXIucmVwbGFjZSgvaWQ9IiguKj8pIi9nbSwnaWQ9IiQxJytlKyciJyk7aWYobylmb3IodmFyIGE9MCxjPW87YTxjLmxlbmd0aDthKz0xKXt2YXIgbD1jW2FdLnJlcGxhY2UoJ2FyaWEtY29udHJvbHM9IicsIiIpLnJlcGxhY2UoJyInLCIiKTtpLmluY2x1ZGVzKGwpJiYocz1zLnJlcGxhY2UoJ2FyaWEtY29udHJvbHM9IicrbCsnIicsJ2FyaWEtY29udHJvbHM9IicrKGwrZSkrJyInKSl9aWYocyE9PW4pc3dpdGNoKGVlLm1vZGUpe2Nhc2UgZWUuTW9kZXMuQU5HVUxBUjpjYXNlIGVlLk1vZGVzLlJFQUNUOmNhc2UgZWUuTW9kZXMuVlVFOnRoaXMud2FybigiaGVhZGVyX190b29scy1saW5rcyBjb250ZW50IGlzIGRpZmZlcmVudCBmcm9tIGhlYWRlcl9fbWVudS1saW5rcyBjb250ZW50LlxuQXMgeW91J3JlIHVzaW5nIGEgZHluYW1pYyBmcmFtZXdvcmssIHlvdSBzaG91bGQgaGFuZGxlIGR1cGxpY2F0aW9uIG9mIHRoaXMgY29udGVudCB5b3Vyc2VsZiwgcGxlYXNlIHJlZmVyIHRvIGRvY3VtZW50YXRpb246XG4iK2VlLmhlYWRlci5kb2MpO2JyZWFrO2RlZmF1bHQ6dGhpcy5tZW51TGlua3MuaW5uZXJIVE1MPXN9fSxPYmplY3QuZGVmaW5lUHJvcGVydGllcyhlLHIpLGV9KGVlLmNvcmUuSW5zdGFuY2UpLGhuPWZ1bmN0aW9uKHQpe2Z1bmN0aW9uIGUoKXt0LmFwcGx5KHRoaXMsYXJndW1lbnRzKX10JiYoZS5fX3Byb3RvX189dCksZS5wcm90b3R5cGU9T2JqZWN0LmNyZWF0ZSh0JiZ0LnByb3RvdHlwZSksZS5wcm90b3R5cGUuY29uc3RydWN0b3I9ZTt2YXIgcj17aW5zdGFuY2VDbGFzc05hbWU6e2NvbmZpZ3VyYWJsZTohMH19O3JldHVybiByLmluc3RhbmNlQ2xhc3NOYW1lLmdldD1mdW5jdGlvbigpe3JldHVybiJIZWFkZXJNb2RhbCJ9LGUucHJvdG90eXBlLmluaXQ9ZnVuY3Rpb24oKXt0aGlzLmlzUmVzaXppbmc9ITB9LGUucHJvdG90eXBlLnJlc2l6ZT1mdW5jdGlvbigpe3RoaXMuaXNCcmVha3BvaW50KGVlLmNvcmUuQnJlYWtwb2ludHMuTEcpP3RoaXMuZGVhY3RpdmF0ZU1vZGFsKCk6dGhpcy5hY3RpdmF0ZU1vZGFsKCl9LGUucHJvdG90eXBlLmFjdGl2YXRlTW9kYWw9ZnVuY3Rpb24oKXt2YXIgdD10aGlzLmVsZW1lbnQuZ2V0SW5zdGFuY2UoIk1vZGFsIik7dCYmKHQuaXNFbmFibGVkPSEwLHRoaXMubGlzdGVuQ2xpY2soe2NhcHR1cmU6ITB9KSl9LGUucHJvdG90eXBlLmRlYWN0aXZhdGVNb2RhbD1mdW5jdGlvbigpe3ZhciB0PXRoaXMuZWxlbWVudC5nZXRJbnN0YW5jZSgiTW9kYWwiKTt0JiYodC5jb25jZWFsKCksdC5pc0VuYWJsZWQ9ITEsdGhpcy51bmxpc3RlbkNsaWNrKHtjYXB0dXJlOiEwfSkpfSxlLnByb3RvdHlwZS5oYW5kbGVDbGljaz1mdW5jdGlvbih0KXshdC50YXJnZXQubWF0Y2hlcygiYSwgYnV0dG9uIil8fHQudGFyZ2V0Lm1hdGNoZXMoIlthcmlhLWNvbnRyb2xzXSIpfHx0LnRhcmdldC5tYXRjaGVzKGVlLmNvcmUuRGlzY2xvc3VyZVNlbGVjdG9yLlBSRVZFTlRfQ09OQ0VBTCl8fHRoaXMuZWxlbWVudC5nZXRJbnN0YW5jZSgiTW9kYWwiKS5jb25jZWFsKCl9LE9iamVjdC5kZWZpbmVQcm9wZXJ0aWVzKGUsciksZX0oZWUuY29yZS5JbnN0YW5jZSk7ZWUuaGVhZGVyPXtIZWFkZXJMaW5rczpwbixIZWFkZXJNb2RhbDpobixIZWFkZXJTZWxlY3Rvcjp1bixkb2M6Imh0dHBzOi8vd3d3LnN5c3RlbWUtZGUtZGVzaWduLmdvdXYuZnIvZWxlbWVudHMtZC1pbnRlcmZhY2UvY29tcG9zYW50cy9lbi10ZXRlIn0sZWUuaW50ZXJuYWxzLnJlZ2lzdGVyKGVlLmhlYWRlci5IZWFkZXJTZWxlY3Rvci5UT09MU19MSU5LUyxlZS5oZWFkZXIuSGVhZGVyTGlua3MpLGVlLmludGVybmFscy5yZWdpc3RlcihlZS5oZWFkZXIuSGVhZGVyU2VsZWN0b3IuTU9EQUxTLGVlLmhlYWRlci5IZWFkZXJNb2RhbCk7dmFyIGZuPXtESVNQTEFZOmVlLmludGVybmFscy5ucy5zZWxlY3RvcigiZGlzcGxheSIpLFJBRElPX0JVVFRPTlM6J2lucHV0W25hbWU9IicrZWUuaW50ZXJuYWxzLm5zKCJyYWRpb3MtdGhlbWUiKSsnIl0nLEZJRUxEU0VUOmVlLmludGVybmFscy5ucy5zZWxlY3RvcigiZmllbGRzZXQiKX0sZG49ZnVuY3Rpb24odCl7ZnVuY3Rpb24gZSgpe3QuYXBwbHkodGhpcyxhcmd1bWVudHMpfXQmJihlLl9fcHJvdG9fXz10KSxlLnByb3RvdHlwZT1PYmplY3QuY3JlYXRlKHQmJnQucHJvdG90eXBlKSxlLnByb3RvdHlwZS5jb25zdHJ1Y3Rvcj1lO3ZhciByPXtzY2hlbWU6e2NvbmZpZ3VyYWJsZTohMH19LG49e2luc3RhbmNlQ2xhc3NOYW1lOntjb25maWd1cmFibGU6ITB9fTtyZXR1cm4gbi5pbnN0YW5jZUNsYXNzTmFtZS5nZXQ9ZnVuY3Rpb24oKXtyZXR1cm4iRGlzcGxheSJ9LGUucHJvdG90eXBlLmluaXQ9ZnVuY3Rpb24oKXtpZih0aGlzLnJhZGlvcz10aGlzLnF1ZXJ5U2VsZWN0b3JBbGwoZm4uUkFESU9fQlVUVE9OUyksZWUuc2NoZW1lKXt0aGlzLmNoYW5naW5nPXRoaXMuY2hhbmdlLmJpbmQodGhpcyk7Zm9yKHZhciB0PTAsZT10aGlzLnJhZGlvczt0PGUubGVuZ3RoO3QrPTEpe2VbdF0uYWRkRXZlbnRMaXN0ZW5lcigiY2hhbmdlIix0aGlzLmNoYW5naW5nKX10aGlzLmFkZERlc2NlbnQoZWUuc2NoZW1lLlNjaGVtZUVtaXNzaW9uLlNDSEVNRSx0aGlzLmFwcGx5LmJpbmQodGhpcykpLHRoaXMuYXNjZW5kKGVlLnNjaGVtZS5TY2hlbWVFbWlzc2lvbi5BU0spfWVsc2UgdGhpcy5xdWVyeVNlbGVjdG9yKGZuLkZJRUxEU0VUKS5zZXRBdHRyaWJ1dGUoImRpc2FibGVkIiwiIil9LHIuc2NoZW1lLmdldD1mdW5jdGlvbigpe3JldHVybiB0aGlzLl9zY2hlbWV9LHIuc2NoZW1lLnNldD1mdW5jdGlvbih0KXtpZih0aGlzLl9zY2hlbWUhPT10JiZlZS5zY2hlbWUpc3dpdGNoKHQpe2Nhc2UgZWUuc2NoZW1lLlNjaGVtZVZhbHVlLlNZU1RFTTpjYXNlIGVlLnNjaGVtZS5TY2hlbWVWYWx1ZS5MSUdIVDpjYXNlIGVlLnNjaGVtZS5TY2hlbWVWYWx1ZS5EQVJLOnRoaXMuX3NjaGVtZT10O2Zvcih2YXIgZT0wLHI9dGhpcy5yYWRpb3M7ZTxyLmxlbmd0aDtlKz0xKXt2YXIgbj1yW2VdO24uY2hlY2tlZD1uLnZhbHVlPT09dH10aGlzLmFzY2VuZChlZS5zY2hlbWUuU2NoZW1lRW1pc3Npb24uU0NIRU1FLHQpfX0sZS5wcm90b3R5cGUuY2hhbmdlPWZ1bmN0aW9uKCl7Zm9yKHZhciB0PTAsZT10aGlzLnJhZGlvczt0PGUubGVuZ3RoO3QrPTEpe3ZhciByPWVbdF07aWYoci5jaGVja2VkKXJldHVybiB2b2lkKHRoaXMuc2NoZW1lPXIudmFsdWUpfX0sZS5wcm90b3R5cGUuYXBwbHk9ZnVuY3Rpb24odCl7dGhpcy5zY2hlbWU9dH0sZS5wcm90b3R5cGUuZGlzcG9zZT1mdW5jdGlvbigpe2Zvcih2YXIgdD0wLGU9dGhpcy5yYWRpb3M7dDxlLmxlbmd0aDt0Kz0xKXtlW3RdLnJlbW92ZUV2ZW50TGlzdGVuZXIoImNoYW5nZSIsdGhpcy5jaGFuZ2luZyl9fSxPYmplY3QuZGVmaW5lUHJvcGVydGllcyhlLnByb3RvdHlwZSxyKSxPYmplY3QuZGVmaW5lUHJvcGVydGllcyhlLG4pLGV9KGVlLmNvcmUuSW5zdGFuY2UpO2VlLmRpc3BsYXk9e0Rpc3BsYXk6ZG4sRGlzcGxheVNlbGVjdG9yOmZufSxlZS5pbnRlcm5hbHMucmVnaXN0ZXIoZWUuZGlzcGxheS5EaXNwbGF5U2VsZWN0b3IuRElTUExBWSxlZS5kaXNwbGF5LkRpc3BsYXkpLGZ1bmN0aW9uKHQsZSl7ZnVuY3Rpb24gcih0LGUpe3ZhciByPWFyZ3VtZW50cy5sZW5ndGg+Mj9hcmd1bWVudHNbMl06W107aWYoITE9PT1pKHQpKXRocm93IG5ldyBUeXBlRXJyb3IoT2JqZWN0LnByb3RvdHlwZS50b1N0cmluZy5jYWxsKHQpKyJpcyBub3QgYSBmdW5jdGlvbi4iKTtyZXR1cm4gdC5hcHBseShlLHIpfWZ1bmN0aW9uIG4odCxlKXtyZXR1cm4gdFtlXX1mdW5jdGlvbiBpKHQpe3JldHVybiJmdW5jdGlvbiI9PXR5cGVvZiB0fWZ1bmN0aW9uIG8odCl7aWYobnVsbD09PXR8fHQ9PT1lKXRocm93IFR5cGVFcnJvcigpO3JldHVybiBPYmplY3QodCl9ZnVuY3Rpb24gcyh0LHIpe3ZhciBuPWZ1bmN0aW9uKHQsZSl7cmV0dXJuIG8odClbZV19KHQscik7aWYobnVsbD09PW58fG49PT1lKXJldHVybiBlO2lmKCExPT09aShuKSl0aHJvdyBuZXcgVHlwZUVycm9yKCJNZXRob2Qgbm90IGNhbGxhYmxlOiAiK3IpO3JldHVybiBufWZ1bmN0aW9uIGEoZSl7c3dpdGNoKHR5cGVvZiBlKXtjYXNlInVuZGVmaW5lZCI6cmV0dXJuInVuZGVmaW5lZCI7Y2FzZSJib29sZWFuIjpyZXR1cm4iYm9vbGVhbiI7Y2FzZSJudW1iZXIiOnJldHVybiJudW1iZXIiO2Nhc2Uic3RyaW5nIjpyZXR1cm4ic3RyaW5nIjtjYXNlInN5bWJvbCI6cmV0dXJuInN5bWJvbCI7ZGVmYXVsdDpyZXR1cm4gbnVsbD09PWU/Im51bGwiOiJTeW1ib2wiaW4gdCYmKGUgaW5zdGFuY2VvZiB0LlN5bWJvbHx8ZS5jb25zdHJ1Y3Rvcj09PXQuU3ltYm9sKT8ic3ltYm9sIjoib2JqZWN0In19ZnVuY3Rpb24gYyh0LGUpe3JldHVybiBhKHQpPT09YShlKSYmKCJudW1iZXIiPT09YSh0KT8hKCFpc05hTih0KXx8IWlzTmFOKGUpKXx8MS90PT0xLzAmJjEvZT09LTEvMHx8MS90PT0tMS8wJiYxL2U9PTEvMHx8dD09PWU6ZnVuY3Rpb24odCxlKXtyZXR1cm4gdD09PWV9KHQsZSkpfWZ1bmN0aW9uIGwodCl7aWYoInN5bWJvbCI9PT1hKHQpKXRocm93IG5ldyBUeXBlRXJyb3IoIkNhbm5vdCBjb252ZXJ0IGEgU3ltYm9sIHZhbHVlIHRvIGEgbnVtYmVyIik7dmFyIGU9TnVtYmVyKHQpO3JldHVybiBpc05hTihlKT8wOjEvZT09MS8wfHwxL2U9PS0xLzB8fGU9PT0xLzB8fGU9PT0tMS8wP2U6KGU8MD8tMToxKSpNYXRoLmZsb29yKE1hdGguYWJzKGUpKX1mdW5jdGlvbiB1KG8pe3ZhciBjPWFyZ3VtZW50cy5sZW5ndGg+MT9hcmd1bWVudHNbMV06ZTtpZigib2JqZWN0Ij09PWEobykpe2lmKGFyZ3VtZW50cy5sZW5ndGg8Mil2YXIgbD0iZGVmYXVsdCI7ZWxzZSBjPT09U3RyaW5nP2w9InN0cmluZyI6Yz09PU51bWJlciYmKGw9Im51bWJlciIpO3ZhciB1PSJmdW5jdGlvbiI9PXR5cGVvZiB0LlN5bWJvbCYmInN5bWJvbCI9PXR5cGVvZiB0LlN5bWJvbC50b1ByaW1pdGl2ZT9zKG8sdC5TeW1ib2wudG9QcmltaXRpdmUpOmU7aWYodSE9PWUpe3ZhciBwPXIodSxvLFtsXSk7aWYoIm9iamVjdCIhPT1hKHApKXJldHVybiBwO3Rocm93IG5ldyBUeXBlRXJyb3IoIkNhbm5vdCBjb252ZXJ0IGV4b3RpYyBvYmplY3QgdG8gcHJpbWl0aXZlLiIpfXJldHVybiJkZWZhdWx0Ij09PWwmJihsPSJudW1iZXIiKSxmdW5jdGlvbih0LGUpe2lmKCJzdHJpbmciPT09ZSl2YXIgbz1bInRvU3RyaW5nIiwidmFsdWVPZiJdO2Vsc2Ugbz1bInZhbHVlT2YiLCJ0b1N0cmluZyJdO2Zvcih2YXIgcz0wO3M8by5sZW5ndGg7KytzKXt2YXIgYz1uKHQsb1tzXSk7aWYoaShjKSl7dmFyIGw9cihjLHQpO2lmKCJvYmplY3QiIT09YShsKSlyZXR1cm4gbH19dGhyb3cgbmV3IFR5cGVFcnJvcigiQ2Fubm90IGNvbnZlcnQgdG8gcHJpbWl0aXZlLiIpfShvLGwpfXJldHVybiBvfWZ1bmN0aW9uIHAodCl7c3dpdGNoKGEodCkpe2Nhc2Uic3ltYm9sIjp0aHJvdyBuZXcgVHlwZUVycm9yKCJDYW5ub3QgY29udmVydCBhIFN5bWJvbCB2YWx1ZSB0byBhIHN0cmluZyIpO2Nhc2Uib2JqZWN0IjpyZXR1cm4gcCh1KHQsU3RyaW5nKSk7ZGVmYXVsdDpyZXR1cm4gU3RyaW5nKHQpfX12YXIgaCxmLGQseTtoPUFycmF5LnByb3RvdHlwZSxmPSJpbmNsdWRlcyIsZD1mdW5jdGlvbih0KXt2YXIgZT1vKHRoaXMpLHI9ZnVuY3Rpb24odCl7dmFyIGU9bCh0KTtyZXR1cm4gZTw9MD8wOk1hdGgubWluKGUsTWF0aC5wb3coMiw1MyktMSl9KG4oZSwibGVuZ3RoIikpO2lmKDA9PT1yKXJldHVybiExO3ZhciBpPWwoYXJndW1lbnRzWzFdKTtpZihpPj0wKXZhciBzPWk7ZWxzZShzPXIraSk8MCYmKHM9MCk7Zm9yKDtzPHI7KXtpZihjKHQsbihlLHAocykpKSlyZXR1cm4hMDtzKz0xfXJldHVybiExfSx5PXt2YWx1ZTpkLHdyaXRhYmxlOiEwLGVudW1lcmFibGU6ITEsY29uZmlndXJhYmxlOiEwfSxPYmplY3QuZGVmaW5lUHJvcGVydHkoaCxmLHkpLGZ1bmN0aW9uKCl7ZnVuY3Rpb24gdCh0LHIpe2lmKCF0KXRocm93IG5ldyBFcnJvcigiTm90IGVub3VnaCBhcmd1bWVudHMiKTt2YXIgbjtpZigiY3JlYXRlRXZlbnQiaW4gZG9jdW1lbnQpe249ZG9jdW1lbnQuY3JlYXRlRXZlbnQoIkV2ZW50Iik7dmFyIGk9ISghcnx8ci5idWJibGVzPT09ZSkmJnIuYnViYmxlcyxvPSEoIXJ8fHIuY2FuY2VsYWJsZT09PWUpJiZyLmNhbmNlbGFibGU7cmV0dXJuIG4uaW5pdEV2ZW50KHQsaSxvKSxufXJldHVybihuPWRvY3VtZW50LmNyZWF0ZUV2ZW50T2JqZWN0KCkpLnR5cGU9dCxuLmJ1YmJsZXM9ISghcnx8ci5idWJibGVzPT09ZSkmJnIuYnViYmxlcyxuLmNhbmNlbGFibGU9ISghcnx8ci5jYW5jZWxhYmxlPT09ZSkmJnIuY2FuY2VsYWJsZSxufXZhciByPXtjbGljazoxLGRibGNsaWNrOjEsa2V5dXA6MSxrZXlwcmVzczoxLGtleWRvd246MSxtb3VzZWRvd246MSxtb3VzZXVwOjEsbW91c2Vtb3ZlOjEsbW91c2VvdmVyOjEsbW91c2VlbnRlcjoxLG1vdXNlbGVhdmU6MSxtb3VzZW91dDoxLHN0b3JhZ2U6MSxzdG9yYWdlY29tbWl0OjEsdGV4dGlucHV0OjF9O2lmKCJ1bmRlZmluZWQiIT10eXBlb2YgZG9jdW1lbnQmJiJ1bmRlZmluZWQiIT10eXBlb2Ygd2luZG93KXt2YXIgbj13aW5kb3cuRXZlbnQmJndpbmRvdy5FdmVudC5wcm90b3R5cGV8fG51bGw7dC5OT05FPTAsdC5DQVBUVVJJTkdfUEhBU0U9MSx0LkFUX1RBUkdFVD0yLHQuQlVCQkxJTkdfUEhBU0U9Myx3aW5kb3cuRXZlbnQ9V2luZG93LnByb3RvdHlwZS5FdmVudD10LG4mJk9iamVjdC5kZWZpbmVQcm9wZXJ0eSh3aW5kb3cuRXZlbnQsInByb3RvdHlwZSIse2NvbmZpZ3VyYWJsZTohMSxlbnVtZXJhYmxlOiExLHdyaXRhYmxlOiEwLHZhbHVlOm59KSwiY3JlYXRlRXZlbnQiaW4gZG9jdW1lbnR8fCh3aW5kb3cuYWRkRXZlbnRMaXN0ZW5lcj1XaW5kb3cucHJvdG90eXBlLmFkZEV2ZW50TGlzdGVuZXI9RG9jdW1lbnQucHJvdG90eXBlLmFkZEV2ZW50TGlzdGVuZXI9RWxlbWVudC5wcm90b3R5cGUuYWRkRXZlbnRMaXN0ZW5lcj1mdW5jdGlvbigpe3ZhciB0PXRoaXMsZT1hcmd1bWVudHNbMF0sbj1hcmd1bWVudHNbMV07aWYodD09PXdpbmRvdyYmZSBpbiByKXRocm93IG5ldyBFcnJvcigiSW4gSUU4IHRoZSBldmVudDogIitlKyIgaXMgbm90IGF2YWlsYWJsZSBvbiB0aGUgd2luZG93IG9iamVjdC4gUGxlYXNlIHNlZSBodHRwczovL2dpdGh1Yi5jb20vRmluYW5jaWFsLVRpbWVzL3BvbHlmaWxsLXNlcnZpY2UvaXNzdWVzLzMxNyBmb3IgbW9yZSBpbmZvcm1hdGlvbi4iKTt0Ll9ldmVudHN8fCh0Ll9ldmVudHM9e30pLHQuX2V2ZW50c1tlXXx8KHQuX2V2ZW50c1tlXT1mdW5jdGlvbihlKXt2YXIgcixuPXQuX2V2ZW50c1tlLnR5cGVdLmxpc3QsaT1uLnNsaWNlKCksbz0tMSxzPWkubGVuZ3RoO2ZvcihlLnByZXZlbnREZWZhdWx0PWZ1bmN0aW9uKCl7ITEhPT1lLmNhbmNlbGFibGUmJihlLnJldHVyblZhbHVlPSExKX0sZS5zdG9wUHJvcGFnYXRpb249ZnVuY3Rpb24oKXtlLmNhbmNlbEJ1YmJsZT0hMH0sZS5zdG9wSW1tZWRpYXRlUHJvcGFnYXRpb249ZnVuY3Rpb24oKXtlLmNhbmNlbEJ1YmJsZT0hMCxlLmNhbmNlbEltbWVkaWF0ZT0hMH0sZS5jdXJyZW50VGFyZ2V0PXQsZS5yZWxhdGVkVGFyZ2V0PWUuZnJvbUVsZW1lbnR8fG51bGwsZS50YXJnZXQ9ZS50YXJnZXR8fGUuc3JjRWxlbWVudHx8dCxlLnRpbWVTdGFtcD0obmV3IERhdGUpLmdldFRpbWUoKSxlLmNsaWVudFgmJihlLnBhZ2VYPWUuY2xpZW50WCtkb2N1bWVudC5kb2N1bWVudEVsZW1lbnQuc2Nyb2xsTGVmdCxlLnBhZ2VZPWUuY2xpZW50WStkb2N1bWVudC5kb2N1bWVudEVsZW1lbnQuc2Nyb2xsVG9wKTsrK288cyYmIWUuY2FuY2VsSW1tZWRpYXRlOylvIGluIGkmJihyPWlbb10sbi5pbmNsdWRlcyhyKSYmImZ1bmN0aW9uIj09dHlwZW9mIHImJnIuY2FsbCh0LGUpKX0sdC5fZXZlbnRzW2VdLmxpc3Q9W10sdC5hdHRhY2hFdmVudCYmdC5hdHRhY2hFdmVudCgib24iK2UsdC5fZXZlbnRzW2VdKSksdC5fZXZlbnRzW2VdLmxpc3QucHVzaChuKX0sd2luZG93LnJlbW92ZUV2ZW50TGlzdGVuZXI9V2luZG93LnByb3RvdHlwZS5yZW1vdmVFdmVudExpc3RlbmVyPURvY3VtZW50LnByb3RvdHlwZS5yZW1vdmVFdmVudExpc3RlbmVyPUVsZW1lbnQucHJvdG90eXBlLnJlbW92ZUV2ZW50TGlzdGVuZXI9ZnVuY3Rpb24oKXt2YXIgdCxlPXRoaXMscj1hcmd1bWVudHNbMF0sbj1hcmd1bWVudHNbMV07ZS5fZXZlbnRzJiZlLl9ldmVudHNbcl0mJmUuX2V2ZW50c1tyXS5saXN0JiYtMSE9PSh0PWUuX2V2ZW50c1tyXS5saXN0LmluZGV4T2YobikpJiYoZS5fZXZlbnRzW3JdLmxpc3Quc3BsaWNlKHQsMSksZS5fZXZlbnRzW3JdLmxpc3QubGVuZ3RofHwoZS5kZXRhY2hFdmVudCYmZS5kZXRhY2hFdmVudCgib24iK3IsZS5fZXZlbnRzW3JdKSxkZWxldGUgZS5fZXZlbnRzW3JdKSl9LHdpbmRvdy5kaXNwYXRjaEV2ZW50PVdpbmRvdy5wcm90b3R5cGUuZGlzcGF0Y2hFdmVudD1Eb2N1bWVudC5wcm90b3R5cGUuZGlzcGF0Y2hFdmVudD1FbGVtZW50LnByb3RvdHlwZS5kaXNwYXRjaEV2ZW50PWZ1bmN0aW9uKHQpe2lmKCFhcmd1bWVudHMubGVuZ3RoKXRocm93IG5ldyBFcnJvcigiTm90IGVub3VnaCBhcmd1bWVudHMiKTtpZighdHx8InN0cmluZyIhPXR5cGVvZiB0LnR5cGUpdGhyb3cgbmV3IEVycm9yKCJET00gRXZlbnRzIEV4Y2VwdGlvbiAwIik7dmFyIGU9dGhpcyxyPXQudHlwZTt0cnl7aWYoIXQuYnViYmxlcyl7dC5jYW5jZWxCdWJibGU9ITA7dmFyIG49ZnVuY3Rpb24odCl7dC5jYW5jZWxCdWJibGU9ITAsKGV8fHdpbmRvdykuZGV0YWNoRXZlbnQoIm9uIityLG4pfTt0aGlzLmF0dGFjaEV2ZW50KCJvbiIrcixuKX10aGlzLmZpcmVFdmVudCgib24iK3IsdCl9Y2F0Y2gobil7dC50YXJnZXQ9ZTtkb3t0LmN1cnJlbnRUYXJnZXQ9ZSwiX2V2ZW50cyJpbiBlJiYiZnVuY3Rpb24iPT10eXBlb2YgZS5fZXZlbnRzW3JdJiZlLl9ldmVudHNbcl0uY2FsbChlLHQpLCJmdW5jdGlvbiI9PXR5cGVvZiBlWyJvbiIrcl0mJmVbIm9uIityXS5jYWxsKGUsdCksZT05PT09ZS5ub2RlVHlwZT9lLnBhcmVudFdpbmRvdzplLnBhcmVudE5vZGV9d2hpbGUoZSYmIXQuY2FuY2VsQnViYmxlKX1yZXR1cm4hMH0sZG9jdW1lbnQuYXR0YWNoRXZlbnQoIm9ucmVhZHlzdGF0ZWNoYW5nZSIsKGZ1bmN0aW9uKCl7ImNvbXBsZXRlIj09PWRvY3VtZW50LnJlYWR5U3RhdGUmJmRvY3VtZW50LmRpc3BhdGNoRXZlbnQobmV3IHQoIkRPTUNvbnRlbnRMb2FkZWQiLHtidWJibGVzOiEwfSkpfSkpKX19KCksdC5DdXN0b21FdmVudD1mdW5jdGlvbih0LGUpe2lmKCF0KXRocm93IEVycm9yKCdUeXBlRXJyb3I6IEZhaWxlZCB0byBjb25zdHJ1Y3QgIkN1c3RvbUV2ZW50IjogQW4gZXZlbnQgbmFtZSBtdXN0IGJlIHByb3ZpZGVkLicpO3ZhciByO2lmKGU9ZXx8e2J1YmJsZXM6ITEsY2FuY2VsYWJsZTohMSxkZXRhaWw6bnVsbH0sImNyZWF0ZUV2ZW50ImluIGRvY3VtZW50KXRyeXsocj1kb2N1bWVudC5jcmVhdGVFdmVudCgiQ3VzdG9tRXZlbnQiKSkuaW5pdEN1c3RvbUV2ZW50KHQsZS5idWJibGVzLGUuY2FuY2VsYWJsZSxlLmRldGFpbCl9Y2F0Y2gobil7KHI9ZG9jdW1lbnQuY3JlYXRlRXZlbnQoIkV2ZW50IikpLmluaXRFdmVudCh0LGUuYnViYmxlcyxlLmNhbmNlbGFibGUpLHIuZGV0YWlsPWUuZGV0YWlsfWVsc2Uocj1uZXcgRXZlbnQodCxlKSkuZGV0YWlsPWUmJmUuZGV0YWlsfHxudWxsO3JldHVybiByfSxDdXN0b21FdmVudC5wcm90b3R5cGU9RXZlbnQucHJvdG90eXBlfSgib2JqZWN0Ij09dHlwZW9mIHdpbmRvdyYmd2luZG93fHwib2JqZWN0Ij09dHlwZW9mIHNlbGYmJnNlbGZ8fCJvYmplY3QiPT10eXBlb2YgZ2xvYmFsJiZnbG9iYWx8fHt9KSxmdW5jdGlvbih0LGUpeyFmdW5jdGlvbihlKXtmdW5jdGlvbiByKHQsZSl7aWYoImNoYW5nZSI9PT10JiZ0aGlzLmFkZExpc3RlbmVyKGUpLGFyZ3VtZW50c1syXSYmYXJndW1lbnRzWzJdLm9uY2Upe3ZhciByPXRoaXMsbj1mdW5jdGlvbigpe3IucmVtb3ZlTGlzdGVuZXIobiksci5yZW1vdmVMaXN0ZW5lcihlKX07dGhpcy5hZGRMaXN0ZW5lcihuKX19ZnVuY3Rpb24gbih0LGUpeyJjaGFuZ2UiPT09dCYmdGhpcy5yZW1vdmVMaXN0ZW5lcihlKX12YXIgaT1mdW5jdGlvbigpe3RyeXt2YXIgdD17fTtyZXR1cm4gZS5PYmplY3QuZGVmaW5lUHJvcGVydHkodCwidCIse2NvbmZpZ3VyYWJsZTohMCxlbnVtZXJhYmxlOiExLGdldDpmdW5jdGlvbigpe3JldHVybiB0aGlzLl92fSxzZXQ6ZnVuY3Rpb24odCl7dGhpcy5fdj10K3R9fSksdC50PTEsMj09PXQudH1jYXRjaCh0KXtyZXR1cm4hMX19KCksbz17ZW51bWVyYWJsZTohMCxjb25maWd1cmFibGU6ITAsZ2V0OmZ1bmN0aW9uKCl7cmV0dXJuIHRoaXMuX29uY2hhbmdlSGFuZGxlcnx8bnVsbH0sc2V0OmZ1bmN0aW9uKHQpe3ZhciBlPXRoaXM7ZS5fb25jaGFuZ2VMaXN0ZW5lcnx8KGUuX29uY2hhbmdlTGlzdGVuZXI9ZnVuY3Rpb24oKXsiZnVuY3Rpb24iPT10eXBlb2YgZS5fb25jaGFuZ2VIYW5kbGVyJiZlLl9vbmNoYW5nZUhhbmRsZXIuY2FsbChlLGFyZ3VtZW50c1swXSl9LGUuYWRkRXZlbnRMaXN0ZW5lcigiY2hhbmdlIixlLl9vbmNoYW5nZUxpc3RlbmVyKSksZS5fb25jaGFuZ2VIYW5kbGVyPXR9fTtpZigiTWVkaWFRdWVyeUxpc3QiaW4gZSl7dmFyIHM9ZS5NZWRpYVF1ZXJ5TGlzdC5wcm90b3R5cGUuYWRkTGlzdGVuZXIsYT1lLk1lZGlhUXVlcnlMaXN0LnByb3RvdHlwZS5yZW1vdmVMaXN0ZW5lcjtlLk1lZGlhUXVlcnlMaXN0LnByb3RvdHlwZS5hZGRMaXN0ZW5lcj1mdW5jdGlvbih0KXt2YXIgZT10O2UuaGFuZGxlRXZlbnQmJihlPWUuaGFuZGxlRXZlbnQpLHMuY2FsbCh0aGlzLGUpfSxlLk1lZGlhUXVlcnlMaXN0LnByb3RvdHlwZS5yZW1vdmVMaXN0ZW5lcj1mdW5jdGlvbih0KXt2YXIgZT10O2UuaGFuZGxlRXZlbnQmJihlPWUuaGFuZGxlRXZlbnQpLGEuY2FsbCh0aGlzLGUpfSxlLk1lZGlhUXVlcnlMaXN0LnByb3RvdHlwZS5hZGRFdmVudExpc3RlbmVyPXIsZS5NZWRpYVF1ZXJ5TGlzdC5wcm90b3R5cGUucmVtb3ZlRXZlbnRMaXN0ZW5lcj1uLGkmJmUuT2JqZWN0LmRlZmluZVByb3BlcnR5KGUuTWVkaWFRdWVyeUxpc3QucHJvdG90eXBlLCJvbmNoYW5nZSIsbyl9ZWxzZXt2YXIgYz10Lm1hdGNoTWVkaWE7dC5tYXRjaE1lZGlhPWZ1bmN0aW9uKHQpe3ZhciBzPWModCksYT1zLmFkZExpc3RlbmVyLGw9cy5yZW1vdmVMaXN0ZW5lcjtyZXR1cm4gcy5hZGRMaXN0ZW5lcj1mdW5jdGlvbih0KXt2YXIgZT10O2UuaGFuZGxlRXZlbnQmJihlPWUuaGFuZGxlRXZlbnQpLGEuY2FsbCh0aGlzLGUpfSxzLnJlbW92ZUxpc3RlbmVyPWZ1bmN0aW9uKHQpe3ZhciBlPXQ7ZS5oYW5kbGVFdmVudCYmKGU9ZS5oYW5kbGVFdmVudCksbC5jYWxsKHRoaXMsZSl9LHMuYWRkRXZlbnRMaXN0ZW5lcj1yLHMucmVtb3ZlRXZlbnRMaXN0ZW5lcj1uLGkmJmUuT2JqZWN0LmRlZmluZVByb3BlcnR5KHMsIm9uY2hhbmdlIixvKSxzfX19KHQpfSgib2JqZWN0Ij09dHlwZW9mIHdpbmRvdyYmd2luZG93fHwib2JqZWN0Ij09dHlwZW9mIHNlbGYmJnNlbGZ8fCJvYmplY3QiPT10eXBlb2YgZ2xvYmFsJiZnbG9iYWx8fHt9KSxmdW5jdGlvbih0LGUpe3ZhciByLG49ZnVuY3Rpb24oKXt2YXIgdD0hMCxyPWZ1bmN0aW9uKGUscixuLGkpe09iamVjdC5kZWZpbmVQcm9wZXJ0eT9PYmplY3QuZGVmaW5lUHJvcGVydHkoZSxyLHtjb25maWd1cmFibGU6ITE9PT10fHwhIWksZ2V0Om59KTplLl9fZGVmaW5lR2V0dGVyX18ocixuKX07dHJ5e3Ioe30sInN1cHBvcnQiKX1jYXRjaChlKXt0PSExfXJldHVybiBmdW5jdGlvbih0LG4pe3ZhciBpPXRoaXMsbz1bXSxzPXt9LGE9MCxjPTAsbD1mdW5jdGlvbih0KXtyKGksdCwoZnVuY3Rpb24oKXtyZXR1cm4gcCgpLG9bdF19KSwhMSl9LHU9ZnVuY3Rpb24oKXtpZihhPj1jKWZvcig7YzxhOysrYylsKGMpfSxwPWZ1bmN0aW9uKCl7dmFyIGUscixpPWFyZ3VtZW50cyxjPS9ccysvO2lmKGkubGVuZ3RoKWZvcihyPTA7cjxpLmxlbmd0aDsrK3IpaWYoYy50ZXN0KGlbcl0pKXRocm93KGU9bmV3IFN5bnRheEVycm9yKCdTdHJpbmcgIicraVtyXSsnIiBjb250YWlucyBhbiBpbnZhbGlkIGNoYXJhY3RlcicpKS5jb2RlPTUsZS5uYW1lPSJJbnZhbGlkQ2hhcmFjdGVyRXJyb3IiLGU7Zm9yKCIiPT09KG89Im9iamVjdCI9PXR5cGVvZiB0W25dPygiIit0W25dLmJhc2VWYWwpLnJlcGxhY2UoL15ccyt8XHMrJC9nLCIiKS5zcGxpdChjKTooIiIrdFtuXSkucmVwbGFjZSgvXlxzK3xccyskL2csIiIpLnNwbGl0KGMpKVswXSYmKG89W10pLHM9e30scj0wO3I8by5sZW5ndGg7KytyKXNbb1tyXV09ITA7YT1vLmxlbmd0aCx1KCl9O3JldHVybiBwKCkscihpLCJsZW5ndGgiLChmdW5jdGlvbigpe3JldHVybiBwKCksYX0pKSxpLnRvTG9jYWxlU3RyaW5nPWkudG9TdHJpbmc9ZnVuY3Rpb24oKXtyZXR1cm4gcCgpLG8uam9pbigiICIpfSxpLml0ZW09ZnVuY3Rpb24odCl7cmV0dXJuIHAoKSxvW3RdfSxpLmNvbnRhaW5zPWZ1bmN0aW9uKHQpe3JldHVybiBwKCksISFzW3RdfSxpLmFkZD1mdW5jdGlvbigpe3AuYXBwbHkoaSxlPWFyZ3VtZW50cyk7Zm9yKHZhciBlLHIsYz0wLGw9ZS5sZW5ndGg7YzxsOysrYylzW3I9ZVtjXV18fChvLnB1c2gociksc1tyXT0hMCk7YSE9PW8ubGVuZ3RoJiYoYT1vLmxlbmd0aD4+PjAsIm9iamVjdCI9PXR5cGVvZiB0W25dP3Rbbl0uYmFzZVZhbD1vLmpvaW4oIiAiKTp0W25dPW8uam9pbigiICIpLHUoKSl9LGkucmVtb3ZlPWZ1bmN0aW9uKCl7cC5hcHBseShpLGU9YXJndW1lbnRzKTtmb3IodmFyIGUscj17fSxjPTAsbD1bXTtjPGUubGVuZ3RoOysrYylyW2VbY11dPSEwLGRlbGV0ZSBzW2VbY11dO2ZvcihjPTA7YzxvLmxlbmd0aDsrK2MpcltvW2NdXXx8bC5wdXNoKG9bY10pO289bCxhPWwubGVuZ3RoPj4+MCwib2JqZWN0Ij09dHlwZW9mIHRbbl0/dFtuXS5iYXNlVmFsPW8uam9pbigiICIpOnRbbl09by5qb2luKCIgIiksdSgpfSxpLnRvZ2dsZT1mdW5jdGlvbih0LHIpe3JldHVybiBwLmFwcGx5KGksW3RdKSxlIT09cj9yPyhpLmFkZCh0KSwhMCk6KGkucmVtb3ZlKHQpLCExKTpzW3RdPyhpLnJlbW92ZSh0KSwhMSk6KGkuYWRkKHQpLCEwKX0saS5mb3JFYWNoPUFycmF5LnByb3RvdHlwZS5mb3JFYWNoLGl9fSgpOyJET01Ub2tlbkxpc3QiaW4ocj10KSYmci5ET01Ub2tlbkxpc3QmJighZG9jdW1lbnQuY3JlYXRlRWxlbWVudE5TfHwhZG9jdW1lbnQuY3JlYXRlRWxlbWVudE5TKCJodHRwOi8vd3d3LnczLm9yZy8yMDAwL3N2ZyIsInN2ZyIpfHxkb2N1bWVudC5jcmVhdGVFbGVtZW50TlMoImh0dHA6Ly93d3cudzMub3JnLzIwMDAvc3ZnIiwic3ZnIikuY2xhc3NMaXN0IGluc3RhbmNlb2YgRE9NVG9rZW5MaXN0KXx8KHIuRE9NVG9rZW5MaXN0PW4pLGZ1bmN0aW9uKCl7dmFyIHQ9ZG9jdW1lbnQuY3JlYXRlRWxlbWVudCgic3BhbiIpOyJjbGFzc0xpc3QiaW4gdCYmKHQuY2xhc3NMaXN0LnRvZ2dsZSgieCIsITEpLHQuY2xhc3NMaXN0LmNvbnRhaW5zKCJ4IikmJih0LmNsYXNzTGlzdC5jb25zdHJ1Y3Rvci5wcm90b3R5cGUudG9nZ2xlPWZ1bmN0aW9uKHQpe3ZhciByPWFyZ3VtZW50c1sxXTtpZihyPT09ZSl7dmFyIG49IXRoaXMuY29udGFpbnModCk7cmV0dXJuIHRoaXNbbj8iYWRkIjoicmVtb3ZlIl0odCksbn1yZXR1cm4gcj0hIXIsdGhpc1tyPyJhZGQiOiJyZW1vdmUiXSh0KSxyfSkpfSgpLGZ1bmN0aW9uKCl7dmFyIHQ9ZG9jdW1lbnQuY3JlYXRlRWxlbWVudCgic3BhbiIpO2lmKCJjbGFzc0xpc3QiaW4gdCYmKHQuY2xhc3NMaXN0LmFkZCgiYSIsImIiKSwhdC5jbGFzc0xpc3QuY29udGFpbnMoImIiKSkpe3ZhciBlPXQuY2xhc3NMaXN0LmNvbnN0cnVjdG9yLnByb3RvdHlwZS5hZGQ7dC5jbGFzc0xpc3QuY29uc3RydWN0b3IucHJvdG90eXBlLmFkZD1mdW5jdGlvbigpe2Zvcih2YXIgdD1hcmd1bWVudHMscj1hcmd1bWVudHMubGVuZ3RoLG49MDtuPHI7bisrKWUuY2FsbCh0aGlzLHRbbl0pfX19KCksZnVuY3Rpb24oKXt2YXIgdD1kb2N1bWVudC5jcmVhdGVFbGVtZW50KCJzcGFuIik7aWYoImNsYXNzTGlzdCJpbiB0JiYodC5jbGFzc0xpc3QuYWRkKCJhIiksdC5jbGFzc0xpc3QuYWRkKCJiIiksdC5jbGFzc0xpc3QucmVtb3ZlKCJhIiwiYiIpLHQuY2xhc3NMaXN0LmNvbnRhaW5zKCJiIikpKXt2YXIgZT10LmNsYXNzTGlzdC5jb25zdHJ1Y3Rvci5wcm90b3R5cGUucmVtb3ZlO3QuY2xhc3NMaXN0LmNvbnN0cnVjdG9yLnByb3RvdHlwZS5yZW1vdmU9ZnVuY3Rpb24oKXtmb3IodmFyIHQ9YXJndW1lbnRzLHI9YXJndW1lbnRzLmxlbmd0aCxuPTA7bjxyO24rKyllLmNhbGwodGhpcyx0W25dKX19fSgpLGZ1bmN0aW9uKHQpe3ZhciBlPSEwLHI9ZnVuY3Rpb24odCxyLG4saSl7T2JqZWN0LmRlZmluZVByb3BlcnR5P09iamVjdC5kZWZpbmVQcm9wZXJ0eSh0LHIse2NvbmZpZ3VyYWJsZTohMT09PWV8fCEhaSxnZXQ6bn0pOnQuX19kZWZpbmVHZXR0ZXJfXyhyLG4pfTt0cnl7cih7fSwic3VwcG9ydCIpfWNhdGNoKHQpe2U9ITF9dmFyIGk9ZnVuY3Rpb24odCxvLHMpe3IodC5wcm90b3R5cGUsbywoZnVuY3Rpb24oKXt2YXIgdCxhPXRoaXMsYz0iX19kZWZpbmVHZXR0ZXJfX0RFRklORV9QUk9QRVJUWSIrbztpZihhW2NdKXJldHVybiB0O2lmKGFbY109ITAsITE9PT1lKXtmb3IodmFyIGwsdT1pLm1pcnJvcnx8ZG9jdW1lbnQuY3JlYXRlRWxlbWVudCgiZGl2IikscD11LmNoaWxkTm9kZXMsaD1wLmxlbmd0aCxmPTA7ZjxoOysrZilpZihwW2ZdLl9SPT09YSl7bD1wW2ZdO2JyZWFrfWx8fChsPXUuYXBwZW5kQ2hpbGQoZG9jdW1lbnQuY3JlYXRlRWxlbWVudCgiZGl2IikpKSx0PURPTVRva2VuTGlzdC5jYWxsKGwsYSxzKX1lbHNlIHQ9bmV3IG4oYSxzKTtyZXR1cm4gcihhLG8sKGZ1bmN0aW9uKCl7cmV0dXJuIHR9KSksZGVsZXRlIGFbY10sdH0pLCEwKX07aSh0LkVsZW1lbnQsImNsYXNzTGlzdCIsImNsYXNzTmFtZSIpLGkodC5IVE1MRWxlbWVudCwiY2xhc3NMaXN0IiwiY2xhc3NOYW1lIiksaSh0LkhUTUxMaW5rRWxlbWVudCwicmVsTGlzdCIsInJlbCIpLGkodC5IVE1MQW5jaG9yRWxlbWVudCwicmVsTGlzdCIsInJlbCIpLGkodC5IVE1MQXJlYUVsZW1lbnQsInJlbExpc3QiLCJyZWwiKX0odCksZnVuY3Rpb24odCl7dC5ET01Ub2tlbkxpc3QucHJvdG90eXBlLmZvckVhY2g9dC5BcnJheS5wcm90b3R5cGUuZm9yRWFjaDt2YXIgZT1kb2N1bWVudC5jcmVhdGVFbGVtZW50KCJzcGFuIik7ZS5jbGFzc0xpc3QmJmUuY2xhc3NMaXN0LmNvbnN0cnVjdG9yJiZlLmNsYXNzTGlzdC5jb25zdHJ1Y3Rvci5wcm90b3R5cGUmJiFlLmNsYXNzTGlzdC5jb25zdHJ1Y3Rvci5wcm90b3R5cGUuZm9yRWFjaCYmKGUuY2xhc3NMaXN0LmNvbnN0cnVjdG9yLnByb3RvdHlwZS5mb3JFYWNoPXQuQXJyYXkucHJvdG90eXBlLmZvckVhY2gpfSh0KSxOb2RlTGlzdC5wcm90b3R5cGUuZm9yRWFjaD1BcnJheS5wcm90b3R5cGUuZm9yRWFjaH0oIm9iamVjdCI9PXR5cGVvZiB3aW5kb3cmJndpbmRvd3x8Im9iamVjdCI9PXR5cGVvZiBzZWxmJiZzZWxmfHwib2JqZWN0Ij09dHlwZW9mIGdsb2JhbCYmZ2xvYmFsfHx7fSksZnVuY3Rpb24odCxlKXshZnVuY3Rpb24oKXtmdW5jdGlvbiBlKHQpe2lmKCEoMCBpbiBhcmd1bWVudHMpKXRocm93IG5ldyBUeXBlRXJyb3IoIjEgYXJndW1lbnQgaXMgcmVxdWlyZWQiKTtkb3tpZih0aGlzPT09dClyZXR1cm4hMH13aGlsZSh0PXQmJnQucGFyZW50Tm9kZSk7cmV0dXJuITF9aWYoIkhUTUxFbGVtZW50ImluIHQmJiJjb250YWlucyJpbiBIVE1MRWxlbWVudC5wcm90b3R5cGUpdHJ5e2RlbGV0ZSBIVE1MRWxlbWVudC5wcm90b3R5cGUuY29udGFpbnN9Y2F0Y2godCl7fSJOb2RlImluIHQ/Tm9kZS5wcm90b3R5cGUuY29udGFpbnM9ZTpkb2N1bWVudC5jb250YWlucz1FbGVtZW50LnByb3RvdHlwZS5jb250YWlucz1lfSgpfSgib2JqZWN0Ij09dHlwZW9mIHdpbmRvdyYmd2luZG93fHwib2JqZWN0Ij09dHlwZW9mIHNlbGYmJnNlbGZ8fCJvYmplY3QiPT10eXBlb2YgZ2xvYmFsJiZnbG9iYWx8fHt9KSxFbGVtZW50LnByb3RvdHlwZS5tYXRjaGVzPUVsZW1lbnQucHJvdG90eXBlLndlYmtpdE1hdGNoZXNTZWxlY3Rvcnx8RWxlbWVudC5wcm90b3R5cGUub01hdGNoZXNTZWxlY3Rvcnx8RWxlbWVudC5wcm90b3R5cGUubXNNYXRjaGVzU2VsZWN0b3J8fEVsZW1lbnQucHJvdG90eXBlLm1vek1hdGNoZXNTZWxlY3Rvcnx8ZnVuY3Rpb24odCl7Zm9yKHZhciBlPXRoaXMscj0oZS5kb2N1bWVudHx8ZS5vd25lckRvY3VtZW50KS5xdWVyeVNlbGVjdG9yQWxsKHQpLG49MDtyW25dJiZyW25dIT09ZTspKytuO3JldHVybiEhcltuXX0sZnVuY3Rpb24odCxlKXtmdW5jdGlvbiByKHQsZSl7dmFyIHI9YXJndW1lbnRzLmxlbmd0aD4yP2FyZ3VtZW50c1syXTpbXTtpZighMT09PW8odCkpdGhyb3cgbmV3IFR5cGVFcnJvcihPYmplY3QucHJvdG90eXBlLnRvU3RyaW5nLmNhbGwodCkrImlzIG5vdCBhIGZ1bmN0aW9uLiIpO3JldHVybiB0LmFwcGx5KGUscil9ZnVuY3Rpb24gbih0LGUscil7dmFyIG49e3ZhbHVlOnIsd3JpdGFibGU6ITAsZW51bWVyYWJsZTohMSxjb25maWd1cmFibGU6ITB9O09iamVjdC5kZWZpbmVQcm9wZXJ0eSh0LGUsbil9ZnVuY3Rpb24gaSh0LGUpe3JldHVybiB0W2VdfWZ1bmN0aW9uIG8odCl7cmV0dXJuImZ1bmN0aW9uIj09dHlwZW9mIHR9ZnVuY3Rpb24gcyh0KXtpZihudWxsPT09dHx8dD09PWUpdGhyb3cgVHlwZUVycm9yKCk7cmV0dXJuIE9iamVjdCh0KX1mdW5jdGlvbiBhKHQscil7dmFyIG49ZnVuY3Rpb24odCxlKXtyZXR1cm4gcyh0KVtlXX0odCxyKTtpZihudWxsPT09bnx8bj09PWUpcmV0dXJuIGU7aWYoITE9PT1vKG4pKXRocm93IG5ldyBUeXBlRXJyb3IoIk1ldGhvZCBub3QgY2FsbGFibGU6ICIrcik7cmV0dXJuIG59ZnVuY3Rpb24gYyhlKXtzd2l0Y2godHlwZW9mIGUpe2Nhc2UidW5kZWZpbmVkIjpyZXR1cm4idW5kZWZpbmVkIjtjYXNlImJvb2xlYW4iOnJldHVybiJib29sZWFuIjtjYXNlIm51bWJlciI6cmV0dXJuIm51bWJlciI7Y2FzZSJzdHJpbmciOnJldHVybiJzdHJpbmciO2Nhc2Uic3ltYm9sIjpyZXR1cm4ic3ltYm9sIjtkZWZhdWx0OnJldHVybiBudWxsPT09ZT8ibnVsbCI6IlN5bWJvbCJpbiB0JiYoZSBpbnN0YW5jZW9mIHQuU3ltYm9sfHxlLmNvbnN0cnVjdG9yPT09dC5TeW1ib2wpPyJzeW1ib2wiOiJvYmplY3QifX1mdW5jdGlvbiBsKHQsZSl7cmV0dXJuIGModCk9PT1jKGUpJiYoIm51bWJlciI9PT1jKHQpPyEoIWlzTmFOKHQpfHwhaXNOYU4oZSkpfHwxL3Q9PTEvMCYmMS9lPT0tMS8wfHwxL3Q9PS0xLzAmJjEvZT09MS8wfHx0PT09ZTpmdW5jdGlvbih0LGUpe3JldHVybiB0PT09ZX0odCxlKSl9ZnVuY3Rpb24gdSh0KXtpZigic3ltYm9sIj09PWModCkpdGhyb3cgbmV3IFR5cGVFcnJvcigiQ2Fubm90IGNvbnZlcnQgYSBTeW1ib2wgdmFsdWUgdG8gYSBudW1iZXIiKTt2YXIgZT1OdW1iZXIodCk7cmV0dXJuIGlzTmFOKGUpPzA6MS9lPT0xLzB8fDEvZT09LTEvMHx8ZT09PTEvMHx8ZT09PS0xLzA/ZTooZTwwPy0xOjEpKk1hdGguZmxvb3IoTWF0aC5hYnMoZSkpfWZ1bmN0aW9uIHAobil7dmFyIHM9YXJndW1lbnRzLmxlbmd0aD4xP2FyZ3VtZW50c1sxXTplO2lmKCJvYmplY3QiPT09YyhuKSl7aWYoYXJndW1lbnRzLmxlbmd0aDwyKXZhciBsPSJkZWZhdWx0IjtlbHNlIHM9PT1TdHJpbmc/bD0ic3RyaW5nIjpzPT09TnVtYmVyJiYobD0ibnVtYmVyIik7dmFyIHU9ImZ1bmN0aW9uIj09dHlwZW9mIHQuU3ltYm9sJiYic3ltYm9sIj09dHlwZW9mIHQuU3ltYm9sLnRvUHJpbWl0aXZlP2Eobix0LlN5bWJvbC50b1ByaW1pdGl2ZSk6ZTtpZih1IT09ZSl7dmFyIHA9cih1LG4sW2xdKTtpZigib2JqZWN0IiE9PWMocCkpcmV0dXJuIHA7dGhyb3cgbmV3IFR5cGVFcnJvcigiQ2Fubm90IGNvbnZlcnQgZXhvdGljIG9iamVjdCB0byBwcmltaXRpdmUuIil9cmV0dXJuImRlZmF1bHQiPT09bCYmKGw9Im51bWJlciIpLGZ1bmN0aW9uKHQsZSl7aWYoInN0cmluZyI9PT1lKXZhciBuPVsidG9TdHJpbmciLCJ2YWx1ZU9mIl07ZWxzZSBuPVsidmFsdWVPZiIsInRvU3RyaW5nIl07Zm9yKHZhciBzPTA7czxuLmxlbmd0aDsrK3Mpe3ZhciBhPWkodCxuW3NdKTtpZihvKGEpKXt2YXIgbD1yKGEsdCk7aWYoIm9iamVjdCIhPT1jKGwpKXJldHVybiBsfX10aHJvdyBuZXcgVHlwZUVycm9yKCJDYW5ub3QgY29udmVydCB0byBwcmltaXRpdmUuIil9KG4sbCl9cmV0dXJuIG59ZnVuY3Rpb24gaCh0KXtzd2l0Y2goYyh0KSl7Y2FzZSJzeW1ib2wiOnRocm93IG5ldyBUeXBlRXJyb3IoIkNhbm5vdCBjb252ZXJ0IGEgU3ltYm9sIHZhbHVlIHRvIGEgc3RyaW5nIik7Y2FzZSJvYmplY3QiOnJldHVybiBoKHAodCxTdHJpbmcpKTtkZWZhdWx0OnJldHVybiBTdHJpbmcodCl9fXZhciBmLGQseSxiLGcsdjtuKE9iamVjdCwia2V5cyIsZnVuY3Rpb24oKXtmdW5jdGlvbiB0KCl7dmFyIHQ7dHJ5e3Q9T2JqZWN0LmNyZWF0ZSh7fSl9Y2F0Y2godCl7cmV0dXJuITB9cmV0dXJuIGkuY2FsbCh0LCJfX3Byb3RvX18iKX12YXIgcj1PYmplY3QucHJvdG90eXBlLmhhc093blByb3BlcnR5LG49T2JqZWN0LnByb3RvdHlwZS50b1N0cmluZyxpPU9iamVjdC5wcm90b3R5cGUucHJvcGVydHlJc0VudW1lcmFibGUsbz0haS5jYWxsKHt0b1N0cmluZzpudWxsfSwidG9TdHJpbmciKSxzPWkuY2FsbCgoZnVuY3Rpb24oKXt9KSwicHJvdG90eXBlIiksYT1bInRvU3RyaW5nIiwidG9Mb2NhbGVTdHJpbmciLCJ2YWx1ZU9mIiwiaGFzT3duUHJvcGVydHkiLCJpc1Byb3RvdHlwZU9mIiwicHJvcGVydHlJc0VudW1lcmFibGUiLCJjb25zdHJ1Y3RvciJdLGM9ZnVuY3Rpb24odCl7dmFyIGU9dC5jb25zdHJ1Y3RvcjtyZXR1cm4gZSYmZS5wcm90b3R5cGU9PT10fSxsPXskY29uc29sZTohMCwkZXh0ZXJuYWw6ITAsJGZyYW1lOiEwLCRmcmFtZUVsZW1lbnQ6ITAsJGZyYW1lczohMCwkaW5uZXJIZWlnaHQ6ITAsJGlubmVyV2lkdGg6ITAsJG91dGVySGVpZ2h0OiEwLCRvdXRlcldpZHRoOiEwLCRwYWdlWE9mZnNldDohMCwkcGFnZVlPZmZzZXQ6ITAsJHBhcmVudDohMCwkc2Nyb2xsTGVmdDohMCwkc2Nyb2xsVG9wOiEwLCRzY3JvbGxYOiEwLCRzY3JvbGxZOiEwLCRzZWxmOiEwLCR3ZWJraXRJbmRleGVkREI6ITAsJHdlYmtpdFN0b3JhZ2VJbmZvOiEwLCR3aW5kb3c6ITB9LHU9ZnVuY3Rpb24oKXtpZigidW5kZWZpbmVkIj09dHlwZW9mIHdpbmRvdylyZXR1cm4hMTtmb3IodmFyIHQgaW4gd2luZG93KXRyeXtpZighbFsiJCIrdF0mJnIuY2FsbCh3aW5kb3csdCkmJm51bGwhPT13aW5kb3dbdF0mJiJvYmplY3QiPT10eXBlb2Ygd2luZG93W3RdKXRyeXtjKHdpbmRvd1t0XSl9Y2F0Y2godCl7cmV0dXJuITB9fWNhdGNoKHQpe3JldHVybiEwfXJldHVybiExfSgpLHA9ZnVuY3Rpb24odCl7aWYoInVuZGVmaW5lZCI9PXR5cGVvZiB3aW5kb3d8fCF1KXJldHVybiBjKHQpO3RyeXtyZXR1cm4gYyh0KX1jYXRjaCh0KXtyZXR1cm4hMX19O3JldHVybiBmdW5jdGlvbihpKXt2YXIgYz0iW29iamVjdCBGdW5jdGlvbl0iPT09bi5jYWxsKGkpLGw9ZnVuY3Rpb24odCl7dmFyIGU9bi5jYWxsKHQpLHI9IltvYmplY3QgQXJndW1lbnRzXSI9PT1lO3JldHVybiByfHwocj0iW29iamVjdCBBcnJheV0iIT09ZSYmbnVsbCE9PXQmJiJvYmplY3QiPT10eXBlb2YgdCYmIm51bWJlciI9PXR5cGVvZiB0Lmxlbmd0aCYmdC5sZW5ndGg+PTAmJiJbb2JqZWN0IEZ1bmN0aW9uXSI9PT1uLmNhbGwodC5jYWxsZWUpKSxyfShpKSx1PSJbb2JqZWN0IFN0cmluZ10iPT09bi5jYWxsKGkpLGg9W107aWYoaT09PWV8fG51bGw9PT1pKXRocm93IG5ldyBUeXBlRXJyb3IoIkNhbm5vdCBjb252ZXJ0IHVuZGVmaW5lZCBvciBudWxsIHRvIG9iamVjdCIpO3ZhciBmPXMmJmM7aWYodSYmaS5sZW5ndGg+MCYmIXIuY2FsbChpLDApKWZvcih2YXIgZD0wO2Q8aS5sZW5ndGg7KytkKWgucHVzaChTdHJpbmcoZCkpO2lmKGwmJmkubGVuZ3RoPjApZm9yKHZhciB5PTA7eTxpLmxlbmd0aDsrK3kpaC5wdXNoKFN0cmluZyh5KSk7ZWxzZSBmb3IodmFyIGIgaW4gaSl0KCkmJiJfX3Byb3RvX18iPT09Ynx8ZiYmInByb3RvdHlwZSI9PT1ifHwhci5jYWxsKGksYil8fGgucHVzaChTdHJpbmcoYikpO2lmKG8pZm9yKHZhciBnPXAoaSksdj0wO3Y8YS5sZW5ndGg7Kyt2KWcmJiJjb25zdHJ1Y3RvciI9PT1hW3ZdfHwhci5jYWxsKGksYVt2XSl8fGgucHVzaChhW3ZdKTtyZXR1cm4gaH19KCkpLG4oQXJyYXkucHJvdG90eXBlLCJpbmNsdWRlcyIsKGZ1bmN0aW9uKHQpe3ZhciBlPXModGhpcykscj1mdW5jdGlvbih0KXt2YXIgZT11KHQpO3JldHVybiBlPD0wPzA6TWF0aC5taW4oZSxNYXRoLnBvdygyLDUzKS0xKX0oaShlLCJsZW5ndGgiKSk7aWYoMD09PXIpcmV0dXJuITE7dmFyIG49dShhcmd1bWVudHNbMV0pO2lmKG4+PTApdmFyIG89bjtlbHNlKG89cituKTwwJiYobz0wKTtmb3IoO288cjspe2lmKGwodCxpKGUsaChvKSkpKXJldHVybiEwO28rPTF9cmV0dXJuITF9KSksZj17fS50b1N0cmluZyxkPSIiLnNwbGl0LHk9W10uY29uY2F0LGI9T2JqZWN0LnByb3RvdHlwZS5oYXNPd25Qcm9wZXJ0eSxnPU9iamVjdC5nZXRPd25Qcm9wZXJ0eU5hbWVzfHxPYmplY3Qua2V5cyx2PSJvYmplY3QiPT10eXBlb2YgdD9nKHQpOltdLG4oT2JqZWN0LCJnZXRPd25Qcm9wZXJ0eU5hbWVzIiwoZnVuY3Rpb24odCl7dmFyIGU9cyh0KTtpZigiW29iamVjdCBXaW5kb3ddIj09PWYuY2FsbChlKSl0cnl7cmV0dXJuIGcoZSl9Y2F0Y2godCl7cmV0dXJuIHkuY2FsbChbXSx2KX1lPSJbb2JqZWN0IFN0cmluZ10iPT1mLmNhbGwoZSk/ZC5jYWxsKGUsIiIpOk9iamVjdChlKTtmb3IodmFyIHI9ZyhlKSxuPVsibGVuZ3RoIiwicHJvdG90eXBlIl0saT0wO2k8bi5sZW5ndGg7aSsrKXt2YXIgbz1uW2ldO2IuY2FsbChlLG8pJiYhci5pbmNsdWRlcyhvKSYmci5wdXNoKG8pfWlmKHIuaW5jbHVkZXMoIl9fcHJvdG9fXyIpKXt2YXIgYT1yLmluZGV4T2YoIl9fcHJvdG9fXyIpO3Iuc3BsaWNlKGEsMSl9cmV0dXJuIHJ9KSksZnVuY3Rpb24oKXt2YXIgdD1PYmplY3QuZ2V0T3duUHJvcGVydHlEZXNjcmlwdG9yLGU9ZnVuY3Rpb24oKXt0cnl7cmV0dXJuIDE9PT1PYmplY3QuZGVmaW5lUHJvcGVydHkoZG9jdW1lbnQuY3JlYXRlRWxlbWVudCgiZGl2IiksIm9uZSIse2dldDpmdW5jdGlvbigpe3JldHVybiAxfX0pLm9uZX1jYXRjaCh0KXtyZXR1cm4hMX19LHI9e30udG9TdHJpbmcsaT0iIi5zcGxpdDtuKE9iamVjdCwiZ2V0T3duUHJvcGVydHlEZXNjcmlwdG9yIiwoZnVuY3Rpb24obixvKXt2YXIgYT1zKG4pO2E9KCJzdHJpbmciPT09YyhhKXx8YSBpbnN0YW5jZW9mIFN0cmluZykmJiJbb2JqZWN0IFN0cmluZ10iPT1yLmNhbGwobik/aS5jYWxsKG4sIiIpOk9iamVjdChuKTt2YXIgbD1mdW5jdGlvbih0KXt2YXIgZT1wKHQsU3RyaW5nKTtyZXR1cm4ic3ltYm9sIj09PWMoZSk/ZTpoKGUpfShvKTtpZihlKXRyeXtyZXR1cm4gdChhLGwpfWNhdGNoKHQpe31pZihmdW5jdGlvbih0LGUpe3JldHVybiBPYmplY3QucHJvdG90eXBlLmhhc093blByb3BlcnR5LmNhbGwodCxlKX0oYSxsKSlyZXR1cm57ZW51bWVyYWJsZTohMCxjb25maWd1cmFibGU6ITAsd3JpdGFibGU6ITAsdmFsdWU6YVtsXX19KSl9KCksZnVuY3Rpb24ocixuLGkpe3ZhciBvLHM9ZnVuY3Rpb24oKXt0cnl7dmFyIHQ9e307cmV0dXJuIHIuZGVmaW5lUHJvcGVydHkodCwidCIse2NvbmZpZ3VyYWJsZTohMCxlbnVtZXJhYmxlOiExLGdldDpmdW5jdGlvbigpe3JldHVybiEwfSxzZXQ6ZX0pLCEhdC50fWNhdGNoKHQpe3JldHVybiExfX0oKSxhPTAsbD0iIitNYXRoLnJhbmRvbSgpLHU9Il9fAXN5bWJvbDoiLHA9Il9fAXN5bWJvbEBAIitsLGg9e30sZj0iZGVmaW5lUHJvcGVydHkiLGQ9ImRlZmluZVByb3BlcnRpZXMiLHk9ImdldE93blByb3BlcnR5TmFtZXMiLGI9ImdldE93blByb3BlcnR5RGVzY3JpcHRvciIsZz0icHJvcGVydHlJc0VudW1lcmFibGUiLHY9ci5wcm90b3R5cGUsbT12Lmhhc093blByb3BlcnR5LF89dltnXSx3PXYudG9TdHJpbmcsUz1BcnJheS5wcm90b3R5cGUuY29uY2F0LEU9ci5nZXRPd25Qcm9wZXJ0eU5hbWVzP3IuZ2V0T3duUHJvcGVydHlOYW1lcyh0KTpbXSxPPXJbeV0saj1mdW5jdGlvbih0KXtpZigiW29iamVjdCBXaW5kb3ddIj09PXcuY2FsbCh0KSl0cnl7cmV0dXJuIE8odCl9Y2F0Y2godCl7cmV0dXJuIFMuY2FsbChbXSxFKX1yZXR1cm4gTyh0KX0sVD1yW2JdLFA9ci5jcmVhdGUsQT1yLmtleXMsTj1yLmZyZWV6ZXx8cixDPXJbZl0sST1yW2RdLEw9VChyLHkpLE09ZnVuY3Rpb24odCxlLHIpe2lmKCFtLmNhbGwodCxwKSl0cnl7Qyh0LHAse2VudW1lcmFibGU6ITEsY29uZmlndXJhYmxlOiExLHdyaXRhYmxlOiExLHZhbHVlOnt9fSl9Y2F0Y2goZSl7dFtwXT17fX10W3BdWyJAQCIrZV09cn0sRD1mdW5jdGlvbigpe30seD1mdW5jdGlvbih0KXtyZXR1cm4gdCE9cCYmIW0uY2FsbChGLHQpfSxSPWZ1bmN0aW9uKHQpe3JldHVybiB0IT1wJiZtLmNhbGwoRix0KX0saz1mdW5jdGlvbih0KXt2YXIgZT0iIit0O3JldHVybiBSKGUpP20uY2FsbCh0aGlzLGUpJiZ0aGlzW3BdJiZ0aGlzW3BdWyJAQCIrZV06Xy5jYWxsKHRoaXMsdCl9LEg9ZnVuY3Rpb24odCl7dmFyIGU9e2VudW1lcmFibGU6ITEsY29uZmlndXJhYmxlOiEwLGdldDpELHNldDpmdW5jdGlvbihlKXtvKHRoaXMsdCx7ZW51bWVyYWJsZTohMSxjb25maWd1cmFibGU6ITAsd3JpdGFibGU6ITAsdmFsdWU6ZX0pLE0odGhpcyx0LCEwKX19O3RyeXtDKHYsdCxlKX1jYXRjaChyKXt2W3RdPWUudmFsdWV9Rlt0XT1DKHIodCksImNvbnN0cnVjdG9yIixVKTt2YXIgbj1UKCQucHJvdG90eXBlLCJkZXNjcmlwdGlvbiIpO3JldHVybiBuJiZDKEZbdF0sImRlc2NyaXB0aW9uIixuKSxOKEZbdF0pfSxHPWZ1bmN0aW9uKHQpe3ZhciByPWZ1bmN0aW9uKHQpe2lmKCJzeW1ib2wiPT09Yyh0KSlyZXR1cm4gdDt0aHJvdyBUeXBlRXJyb3IodCsiIGlzIG5vdCBhIHN5bWJvbCIpfSh0KTtpZihWKXt2YXIgbj1LKHIpO2lmKCIiIT09bilyZXR1cm4gbi5zbGljZSgxLC0xKX1pZihoW3JdIT09ZSlyZXR1cm4gaFtyXTt2YXIgaT1yLnRvU3RyaW5nKCksbz1pLmxhc3RJbmRleE9mKCIwLiIpO3JldHVybiIiPT09KGk9aS5zbGljZSgxMCxvKSk/ZTppfSwkPWZ1bmN0aW9uIHQoKXt2YXIgbj1hcmd1bWVudHNbMF07aWYodGhpcyBpbnN0YW5jZW9mIHQpdGhyb3cgbmV3IFR5cGVFcnJvcigiU3ltYm9sIGlzIG5vdCBhIGNvbnN0cnVjdG9yIik7dmFyIGk9dS5jb25jYXQobnx8IiIsbCwrK2EpO249PT1lfHxudWxsIT09biYmIWlzTmFOKG4pJiYiIiE9PVN0cmluZyhuKXx8KGhbaV09U3RyaW5nKG4pKTt2YXIgbz1IKGkpO3JldHVybiBzfHxyLmRlZmluZVByb3BlcnR5KG8sImRlc2NyaXB0aW9uIix7Y29uZmlndXJhYmxlOiEwLGVudW1lcmFibGU6ITEsdmFsdWU6RyhvKX0pLG99LEY9UChudWxsKSxVPXt2YWx1ZTokfSx6PWZ1bmN0aW9uKHQpe3JldHVybiBGW3RdfSxCPWZ1bmN0aW9uKHQsZSxyKXt2YXIgbj0iIitlO3JldHVybiBSKG4pPyhvKHQsbixyLmVudW1lcmFibGU/ZnVuY3Rpb24odCl7dmFyIGU9UCh0KTtyZXR1cm4gZS5lbnVtZXJhYmxlPSExLGV9KHIpOnIpLE0odCxuLCEhci5lbnVtZXJhYmxlKSk6Qyh0LGUsciksdH0sVz1mdW5jdGlvbih0KXtyZXR1cm4gaih0KS5maWx0ZXIodD09PXY/ZnVuY3Rpb24odCl7cmV0dXJuIGZ1bmN0aW9uKGUpe3JldHVybiBtLmNhbGwodCxwKSYmbS5jYWxsKHRbcF0sIkBAIitlKX19KHQpOlIpLm1hcCh6KX07TC52YWx1ZT1CLEMocixmLEwpLEwudmFsdWU9VyxDKHIsImdldE93blByb3BlcnR5U3ltYm9scyIsTCksTC52YWx1ZT1mdW5jdGlvbih0KXtyZXR1cm4gaih0KS5maWx0ZXIoeCl9LEMocix5LEwpLEwudmFsdWU9ZnVuY3Rpb24odCxlKXt2YXIgcj1XKGUpO3JldHVybiByLmxlbmd0aD9BKGUpLmNvbmNhdChyKS5mb3JFYWNoKChmdW5jdGlvbihyKXtrLmNhbGwoZSxyKSYmQih0LHIsZVtyXSl9KSk6SSh0LGUpLHR9LEMocixkLEwpLEwudmFsdWU9ayxDKHYsZyxMKSxMLnZhbHVlPSQsQyhpLCJTeW1ib2wiLEwpLEwudmFsdWU9ZnVuY3Rpb24odCl7dmFyIGU9dS5jb25jYXQodSx0LGwpO3JldHVybiBlIGluIHY/RltlXTpIKGUpfSxDKCQsImZvciIsTCksTC52YWx1ZT1mdW5jdGlvbih0KXtpZih4KHQpKXRocm93IG5ldyBUeXBlRXJyb3IodCsiIGlzIG5vdCBhIHN5bWJvbCIpO3JldHVybiBtLmNhbGwoRix0KT90LnNsaWNlKDIwLC1sLmxlbmd0aCk6dm9pZCAwfSxDKCQsImtleUZvciIsTCksTC52YWx1ZT1mdW5jdGlvbih0LGUpe3ZhciByPVQodCxlKTtyZXR1cm4gciYmUihlKSYmKHIuZW51bWVyYWJsZT1rLmNhbGwodCxlKSkscn0sQyhyLGIsTCksTC52YWx1ZT1mdW5jdGlvbih0LGUpe3JldHVybiAxPT09YXJndW1lbnRzLmxlbmd0aHx8dm9pZCAwPT09ZT9QKHQpOmZ1bmN0aW9uKHQsZSl7dmFyIHI9UCh0KTtyZXR1cm4gaihlKS5mb3JFYWNoKChmdW5jdGlvbih0KXtrLmNhbGwoZSx0KSYmQihyLHQsZVt0XSl9KSkscn0odCxlKX0sQyhyLCJjcmVhdGUiLEwpO3ZhciBxPW51bGw9PT1mdW5jdGlvbigpe3JldHVybiB0aGlzfS5jYWxsKG51bGwpO2lmKEwudmFsdWU9cT9mdW5jdGlvbigpe3ZhciB0PXcuY2FsbCh0aGlzKTtyZXR1cm4iW29iamVjdCBTdHJpbmddIj09PXQmJlIodGhpcyk/IltvYmplY3QgU3ltYm9sXSI6dH06ZnVuY3Rpb24oKXtpZih0aGlzPT09d2luZG93KXJldHVybiJbb2JqZWN0IE51bGxdIjt2YXIgdD13LmNhbGwodGhpcyk7cmV0dXJuIltvYmplY3QgU3RyaW5nXSI9PT10JiZSKHRoaXMpPyJbb2JqZWN0IFN5bWJvbF0iOnR9LEModiwidG9TdHJpbmciLEwpLG89ZnVuY3Rpb24odCxlLHIpe3ZhciBuPVQodixlKTtkZWxldGUgdltlXSxDKHQsZSxyKSx0IT09diYmQyh2LGUsbil9LGZ1bmN0aW9uKCl7dHJ5e3ZhciB0PXt9O3JldHVybiByLmRlZmluZVByb3BlcnR5KHQsInQiLHtjb25maWd1cmFibGU6ITAsZW51bWVyYWJsZTohMSxnZXQ6ZnVuY3Rpb24oKXtyZXR1cm4hMH0sc2V0OmV9KSwhIXQudH1jYXRjaCh0KXtyZXR1cm4hMX19KCkpe3ZhciBLO3RyeXtLPUZ1bmN0aW9uKCJzIiwidmFyIHYgPSBzLnZhbHVlT2YoKTsgcmV0dXJuIHsgW3ZdKCkge30gfVt2XS5uYW1lOyIpfWNhdGNoKHQpe312YXIgVj1LJiYiaW5mZXJyZWQiPT09ZnVuY3Rpb24oKXt9Lm5hbWU/SzpudWxsO3IuZGVmaW5lUHJvcGVydHkoaS5TeW1ib2wucHJvdG90eXBlLCJkZXNjcmlwdGlvbiIse2NvbmZpZ3VyYWJsZTohMCxlbnVtZXJhYmxlOiExLGdldDpmdW5jdGlvbigpe3JldHVybiBHKHRoaXMpfX0pfX0oT2JqZWN0LDAsdCksT2JqZWN0LmRlZmluZVByb3BlcnR5KFN5bWJvbCwidG9TdHJpbmdUYWciLHt2YWx1ZTpTeW1ib2woInRvU3RyaW5nVGFnIil9KSxmdW5jdGlvbigpe2Z1bmN0aW9uIHIoKXtyZXR1cm4gcnRbJF1bVV18fHp9ZnVuY3Rpb24gbih0KXtyZXR1cm4gdCYmIm9iamVjdCI9PXR5cGVvZiB0fWZ1bmN0aW9uIGkodCl7cmV0dXJuImZ1bmN0aW9uIj09dHlwZW9mIHR9ZnVuY3Rpb24gbyh0LGUpe3JldHVybiB0IGluc3RhbmNlb2YgZX1mdW5jdGlvbiBzKHQpe3JldHVybiBvKHQsUil9ZnVuY3Rpb24gYSh0LGUscil7aWYoIWUodCkpdGhyb3cgaChyKX1mdW5jdGlvbiBjKCl7dHJ5e3JldHVybiBULmFwcGx5KFAsYXJndW1lbnRzKX1jYXRjaCh0KXtyZXR1cm4gWi5lPXQsWn19ZnVuY3Rpb24gbCh0LGUpe3JldHVybiBUPXQsUD1lLGN9ZnVuY3Rpb24gdSh0LGUpe2Z1bmN0aW9uIHIoKXtmb3IodmFyIHI9MDtyPGk7KWUobltyXSxuW3IrMV0pLG5bcisrXT1qLG5bcisrXT1qO2k9MCxuLmxlbmd0aD50JiYobi5sZW5ndGg9dCl9dmFyIG49eCh0KSxpPTA7cmV0dXJuIGZ1bmN0aW9uKHQsZSl7bltpKytdPXQsbltpKytdPWUsMj09PWkmJnJ0Lm5leHRUaWNrKHIpfX1mdW5jdGlvbiBwKHQsZSl7dmFyIHIsbixzLGEsYz0wO2lmKCF0KXRocm93IGgoVik7dmFyIHU9dFtydFskXVtGXV07aWYoaSh1KSluPXUuY2FsbCh0KTtlbHNle2lmKCFpKHQubmV4dCkpe2lmKG8odCx4KSl7Zm9yKHI9dC5sZW5ndGg7YzxyOyllKHRbY10sYysrKTtyZXR1cm4gY310aHJvdyBoKFYpfW49dH1mb3IoOyEocz1uLm5leHQoKSkuZG9uZTspaWYoKGE9bChlKShzLnZhbHVlLGMrKykpPT09Wil0aHJvdyBpKG5bQl0pJiZuW0JdKCksYS5lO3JldHVybiBjfWZ1bmN0aW9uIGgodCl7cmV0dXJuIG5ldyBUeXBlRXJyb3IodCl9ZnVuY3Rpb24gZih0KXtyZXR1cm4odD8iIjpZKSsobmV3IFIpLnN0YWNrfWZ1bmN0aW9uIGQodCxlKXt2YXIgcj0ib24iK3QudG9Mb3dlckNhc2UoKSxuPUNbcl07TCYmTC5saXN0ZW5lcnModCkubGVuZ3RoP3Q9PT1KP0wuZW1pdCh0LGUuX3YsZSk6TC5lbWl0KHQsZSk6bj9uKHtyZWFzb246ZS5fdixwcm9taXNlOmV9KTpydFt0XShlLl92LGUpfWZ1bmN0aW9uIHkodCl7cmV0dXJuIHQmJnQuX3N9ZnVuY3Rpb24gYih0KXtyZXR1cm4geSh0KT9uZXcgdCh0dCk6KGU9bmV3IHQoKGZ1bmN0aW9uKHQsaSl7aWYoZSl0aHJvdyBoKCk7cj10LG49aX0pKSxhKHIsaSksYShuLGkpLGUpO3ZhciBlLHIsbn1mdW5jdGlvbiBnKHQsZSl7dmFyIHI9ITE7cmV0dXJuIGZ1bmN0aW9uKG4pe3J8fChyPSEwLEQmJih0W0tdPWYoITApKSxlPT09SD9TKHQsbik6dyh0LGUsbikpfX1mdW5jdGlvbiB2KHQpe2lmKHQuX3VtYXJrKXJldHVybiEwO3QuX3VtYXJrPSEwO2Zvcih2YXIgZSxyPTAsbj10Ll9jO3I8bjspaWYoKGU9dFtyKytdKS5fb25SZWplY3RlZHx8dihlKSlyZXR1cm4hMH1mdW5jdGlvbiBtKHQsZSl7ZnVuY3Rpb24gcih0KXtyZXR1cm4gbi5wdXNoKHQucmVwbGFjZSgvXlxzK3xccyskL2csIiIpKX12YXIgbj1bXTtyZXR1cm4gRCYmKGVbS10mJnIoZVtLXSksZnVuY3Rpb24gdChlKXtlJiZxIGluIGUmJih0KGUuX25leHQpLHIoZVtxXSsiIiksdChlLl9wKSl9KGUpKSwodCYmdC5zdGFjaz90LnN0YWNrOnQpKygiXG4iK24uam9pbigiXG4iKSkucmVwbGFjZShldCwiIil9ZnVuY3Rpb24gXyh0LGUpe3JldHVybiB0KGUpfWZ1bmN0aW9uIHcodCxlLHIpe3ZhciBuPTAsaT10Ll9jO2lmKHQuX3M9PT1HKWZvcih0Ll9zPWUsdC5fdj1yLGU9PT1rJiYoRCYmcyhyKSYmKHIubG9uZ1N0YWNrPW0ocix0KSksaXQodCkpO248aTspbnQodCx0W24rK10pO3JldHVybiB0fWZ1bmN0aW9uIFModCxlKXtpZihlPT09dCYmZSlyZXR1cm4gdyh0LGssaChYKSksdDtpZihlIT09QSYmKGkoZSl8fG4oZSkpKXt2YXIgcj1sKEUpKGUpO2lmKHI9PT1aKXJldHVybiB3KHQsayxyLmUpLHQ7aShyKT8oRCYmeShlKSYmKHQuX25leHQ9ZSkseShlKT9PKHQsZSxyKTpydC5uZXh0VGljaygoZnVuY3Rpb24oKXtPKHQsZSxyKX0pKSk6dyh0LEgsZSl9ZWxzZSB3KHQsSCxlKTtyZXR1cm4gdH1mdW5jdGlvbiBFKHQpe3JldHVybiB0LnRoZW59ZnVuY3Rpb24gTyh0LGUscil7dmFyIG49bChyLGUpKChmdW5jdGlvbihyKXtlJiYoZT1BLFModCxyKSl9KSwoZnVuY3Rpb24ocil7ZSYmKGU9QSx3KHQsayxyKSl9KSk7bj09PVomJmUmJih3KHQsayxuLmUpLGU9QSl9dmFyIGosVCxQLEE9bnVsbCxOPSJvYmplY3QiPT10eXBlb2YgdCxDPXQsST1DLlByb21pc2UsTD1DLnByb2Nlc3MsTT1DLmNvbnNvbGUsRD0hMCx4PUFycmF5LFI9RXJyb3Isaz0xLEg9MixHPTMsJD0iU3ltYm9sIixGPSJpdGVyYXRvciIsVT0ic3BlY2llcyIsej0kKyIoIitVKyIpIixCPSJyZXR1cm4iLFc9Il91aCIscT0iX3B0IixLPSJfc3QiLFY9IkludmFsaWQgYXJndW1lbnQiLFk9IlxuRnJvbSBwcmV2aW91cyAiLFg9IkNoYWluaW5nIGN5Y2xlIGRldGVjdGVkIGZvciBwcm9taXNlIixRPSJyZWplY3Rpb25IYW5kbGVkIixKPSJ1bmhhbmRsZWRSZWplY3Rpb24iLFo9e2U6QX0sdHQ9ZnVuY3Rpb24oKXt9LGV0PS9eLitcL25vZGVfbW9kdWxlc1wveWFrdVwvLitcbj8vZ20scnQ9ZnVuY3Rpb24odCl7dmFyIGUscj10aGlzO2lmKCFuKHIpfHxyLl9zIT09ail0aHJvdyBoKCJJbnZhbGlkIHRoaXMiKTtpZihyLl9zPUcsRCYmKHJbcV09ZigpKSx0IT09dHQpe2lmKCFpKHQpKXRocm93IGgoVik7KGU9bCh0KShnKHIsSCksZyhyLGspKSk9PT1aJiZ3KHIsayxlLmUpfX07cnQuZGVmYXVsdD1ydCxmdW5jdGlvbih0LGUpe2Zvcih2YXIgciBpbiBlKXRbcl09ZVtyXX0ocnQucHJvdG90eXBlLHt0aGVuOmZ1bmN0aW9uKHQscil7aWYodGhpcy5fcz09PWUpdGhyb3cgaCgpO3JldHVybiBmdW5jdGlvbih0LGUscixuKXtyZXR1cm4gaShyKSYmKGUuX29uRnVsZmlsbGVkPXIpLGkobikmJih0W1ddJiZkKFEsdCksZS5fb25SZWplY3RlZD1uKSxEJiYoZS5fcD10KSx0W3QuX2MrK109ZSx0Ll9zIT09RyYmbnQodCxlKSxlfSh0aGlzLGIocnQuc3BlY2llc0NvbnN0cnVjdG9yKHRoaXMscnQpKSx0LHIpfSxjYXRjaDpmdW5jdGlvbih0KXtyZXR1cm4gdGhpcy50aGVuKGosdCl9LGZpbmFsbHk6ZnVuY3Rpb24odCl7cmV0dXJuIHRoaXMudGhlbigoZnVuY3Rpb24oZSl7cmV0dXJuIHJ0LnJlc29sdmUodCgpKS50aGVuKChmdW5jdGlvbigpe3JldHVybiBlfSkpfSksKGZ1bmN0aW9uKGUpe3JldHVybiBydC5yZXNvbHZlKHQoKSkudGhlbigoZnVuY3Rpb24oKXt0aHJvdyBlfSkpfSkpfSxfYzowLF9wOkF9KSxydC5yZXNvbHZlPWZ1bmN0aW9uKHQpe3JldHVybiB5KHQpP3Q6UyhiKHRoaXMpLHQpfSxydC5yZWplY3Q9ZnVuY3Rpb24odCl7cmV0dXJuIHcoYih0aGlzKSxrLHQpfSxydC5yYWNlPWZ1bmN0aW9uKHQpe3ZhciBlPXRoaXMscj1iKGUpLG49ZnVuY3Rpb24odCl7dyhyLEgsdCl9LGk9ZnVuY3Rpb24odCl7dyhyLGssdCl9LG89bChwKSh0LChmdW5jdGlvbih0KXtlLnJlc29sdmUodCkudGhlbihuLGkpfSkpO3JldHVybiBvPT09Wj9lLnJlamVjdChvLmUpOnJ9LHJ0LmFsbD1mdW5jdGlvbih0KXtmdW5jdGlvbiBlKHQpe3coaSxrLHQpfXZhciByLG49dGhpcyxpPWIobiksbz1bXTtyZXR1cm4ocj1sKHApKHQsKGZ1bmN0aW9uKHQscyl7bi5yZXNvbHZlKHQpLnRoZW4oKGZ1bmN0aW9uKHQpe29bc109dCwtLXJ8fHcoaSxILG8pfSksZSl9KSkpPT09Wj9uLnJlamVjdChyLmUpOihyfHx3KGksSCxbXSksaSl9LHJ0LlN5bWJvbD1DWyRdfHx7fSxsKChmdW5jdGlvbigpe09iamVjdC5kZWZpbmVQcm9wZXJ0eShydCxyKCkse2dldDpmdW5jdGlvbigpe3JldHVybiB0aGlzfX0pfSkpKCkscnQuc3BlY2llc0NvbnN0cnVjdG9yPWZ1bmN0aW9uKHQsZSl7dmFyIG49dC5jb25zdHJ1Y3RvcjtyZXR1cm4gbiYmbltyKCldfHxlfSxydC51bmhhbmRsZWRSZWplY3Rpb249ZnVuY3Rpb24odCxlKXtNJiZNLmVycm9yKCJVbmNhdWdodCAoaW4gcHJvbWlzZSkiLEQ/ZS5sb25nU3RhY2s6bSh0LGUpKX0scnQucmVqZWN0aW9uSGFuZGxlZD10dCxydC5lbmFibGVMb25nU3RhY2tUcmFjZT1mdW5jdGlvbigpe0Q9ITB9LHJ0Lm5leHRUaWNrPU4/ZnVuY3Rpb24odCl7ST9uZXcgSSgoZnVuY3Rpb24odCl7dCgpfSkpLnRoZW4odCk6c2V0VGltZW91dCh0KX06TC5uZXh0VGljayxydC5fcz0xO3ZhciBudD11KDk5OSwoZnVuY3Rpb24odCxlKXt2YXIgcixuO3JldHVybihuPXQuX3MhPT1rP2UuX29uRnVsZmlsbGVkOmUuX29uUmVqZWN0ZWQpPT09aj92b2lkIHcoZSx0Ll9zLHQuX3YpOihyPWwoXykobix0Ll92KSk9PT1aP3ZvaWQgdyhlLGssci5lKTp2b2lkIFMoZSxyKX0pKSxpdD11KDksKGZ1bmN0aW9uKHQpe3YodCl8fCh0W1ddPTEsZChKLHQpKX0pKTtDLlByb21pc2U9cnR9KCl9KCJvYmplY3QiPT10eXBlb2Ygd2luZG93JiZ3aW5kb3d8fCJvYmplY3QiPT10eXBlb2Ygc2VsZiYmc2VsZnx8Im9iamVjdCI9PXR5cGVvZiBnbG9iYWwmJmdsb2JhbHx8e30pLGZ1bmN0aW9uKHQsZSl7ZnVuY3Rpb24gcih0KXtpZigxL3Q9PS0xLzAmJih0PTApLHQ+TWF0aC5wb3coMiwzMiktMSl0aHJvdyBuZXcgUmFuZ2VFcnJvcigiSW52YWxpZCBhcnJheSBsZW5ndGgiKTt2YXIgZT1bXTtyZXR1cm4gZS5sZW5ndGg9dCxlfWZ1bmN0aW9uIG4odCxlKXt2YXIgcj1hcmd1bWVudHMubGVuZ3RoPjI/YXJndW1lbnRzWzJdOltdO2lmKCExPT09Yyh0KSl0aHJvdyBuZXcgVHlwZUVycm9yKE9iamVjdC5wcm90b3R5cGUudG9TdHJpbmcuY2FsbCh0KSsiaXMgbm90IGEgZnVuY3Rpb24uIik7cmV0dXJuIHQuYXBwbHkoZSxyKX1mdW5jdGlvbiBpKHQsZSxyKXt2YXIgbj17dmFsdWU6cix3cml0YWJsZTohMCxlbnVtZXJhYmxlOiEwLGNvbmZpZ3VyYWJsZTohMH07dHJ5e3JldHVybiBPYmplY3QuZGVmaW5lUHJvcGVydHkodCxlLG4pLCEwfWNhdGNoKHQpe3JldHVybiExfX1mdW5jdGlvbiBvKHQsZSxyKXt2YXIgbj1pKHQsZSxyKTtpZighbil0aHJvdyBuZXcgVHlwZUVycm9yKCJDYW5ub3QgYXNzaWduIHZhbHVlIGAiK09iamVjdC5wcm90b3R5cGUudG9TdHJpbmcuY2FsbChyKSsiYCB0byBwcm9wZXJ0eSBgIitPYmplY3QucHJvdG90eXBlLnRvU3RyaW5nLmNhbGwoZSkrImAgb24gb2JqZWN0IGAiK09iamVjdC5wcm90b3R5cGUudG9TdHJpbmcuY2FsbCh0KSsiYCIpO3JldHVybiBufWZ1bmN0aW9uIHModCxlLHIpe3ZhciBuPXt2YWx1ZTpyLHdyaXRhYmxlOiEwLGVudW1lcmFibGU6ITEsY29uZmlndXJhYmxlOiEwfTtPYmplY3QuZGVmaW5lUHJvcGVydHkodCxlLG4pfWZ1bmN0aW9uIGEodCxlKXtyZXR1cm4gdFtlXX1mdW5jdGlvbiBjKHQpe3JldHVybiJmdW5jdGlvbiI9PXR5cGVvZiB0fWZ1bmN0aW9uIGwodCl7aWYobnVsbD09PXR8fHQ9PT1lKXRocm93IFR5cGVFcnJvcigpO3JldHVybiBPYmplY3QodCl9ZnVuY3Rpb24gdSh0LGUpe3JldHVybiBsKHQpW2VdfWZ1bmN0aW9uIHAodCxyKXt2YXIgbj11KHQscik7aWYobnVsbD09PW58fG49PT1lKXJldHVybiBlO2lmKCExPT09YyhuKSl0aHJvdyBuZXcgVHlwZUVycm9yKCJNZXRob2Qgbm90IGNhbGxhYmxlOiAiK3IpO3JldHVybiBufWZ1bmN0aW9uIGgoZSl7c3dpdGNoKHR5cGVvZiBlKXtjYXNlInVuZGVmaW5lZCI6cmV0dXJuInVuZGVmaW5lZCI7Y2FzZSJib29sZWFuIjpyZXR1cm4iYm9vbGVhbiI7Y2FzZSJudW1iZXIiOnJldHVybiJudW1iZXIiO2Nhc2Uic3RyaW5nIjpyZXR1cm4ic3RyaW5nIjtjYXNlInN5bWJvbCI6cmV0dXJuInN5bWJvbCI7ZGVmYXVsdDpyZXR1cm4gbnVsbD09PWU/Im51bGwiOiJTeW1ib2wiaW4gdCYmKGUgaW5zdGFuY2VvZiB0LlN5bWJvbHx8ZS5jb25zdHJ1Y3Rvcj09PXQuU3ltYm9sKT8ic3ltYm9sIjoib2JqZWN0In19dmFyIGY7ZnVuY3Rpb24gZCh0LGUpe2lmKCJib29sZWFuIiE9PWgoZSkpdGhyb3cgbmV3IEVycm9yO3ZhciByPXt9O3JldHVybiBpKHIsInZhbHVlIix0KSxpKHIsImRvbmUiLGUpLHJ9ZnVuY3Rpb24geSh0LGUpe3ZhciByPWFyZ3VtZW50c1syXXx8e30sbj1mdW5jdGlvbih0LGUpe3ZhciByPWEodCwicHJvdG90eXBlIik7cmV0dXJuIm9iamVjdCIhPT1oKHIpJiYocj1lKSxyfSh0LGUpLGk9T2JqZWN0LmNyZWF0ZShuKTtmb3IodmFyIG8gaW4gcilPYmplY3QucHJvdG90eXBlLmhhc093blByb3BlcnR5LmNhbGwocixvKSYmT2JqZWN0LmRlZmluZVByb3BlcnR5KGksbyx7Y29uZmlndXJhYmxlOiEwLGVudW1lcmFibGU6ITEsd3JpdGFibGU6ITAsdmFsdWU6cltvXX0pO3JldHVybiBpfWZ1bmN0aW9uIGIodCl7cmV0dXJuIm9iamVjdCI9PT1oKHQpJiYiZnVuY3Rpb24iPT10eXBlb2YgdCYmISF0LnByb3RvdHlwZX1mdW5jdGlvbiBnKHQpe3ZhciBlPWFyZ3VtZW50cy5sZW5ndGg+Mj9hcmd1bWVudHNbMl06dCxyPWFyZ3VtZW50cy5sZW5ndGg+MT9hcmd1bWVudHNbMV06W107aWYoIWIodCkpdGhyb3cgbmV3IFR5cGVFcnJvcigiRiBtdXN0IGJlIGEgY29uc3RydWN0b3IuIik7aWYoIWIoZSkpdGhyb3cgbmV3IFR5cGVFcnJvcigibmV3VGFyZ2V0IG11c3QgYmUgYSBjb25zdHJ1Y3Rvci4iKTtyZXR1cm4gZT09PXQ/bmV3KEZ1bmN0aW9uLnByb3RvdHlwZS5iaW5kLmFwcGx5KHQsW251bGxdLmNvbmNhdChyKSkpOm4odCx5KGUsT2JqZWN0LnByb3RvdHlwZSkscil9ZnVuY3Rpb24gdih0LHIpe2lmKCJvYmplY3QiIT09aCh0WyJbW0l0ZXJhdG9yXV0iXSkpdGhyb3cgbmV3IEVycm9yKE9iamVjdC5wcm90b3R5cGUudG9TdHJpbmcuY2FsbCh0WyJbW0l0ZXJhdG9yXV0iXSkrImlzIG5vdCBhbiBPYmplY3QuIik7dmFyIGk9dFsiW1tJdGVyYXRvcl1dIl0sbz1wKGksInJldHVybiIpO2lmKG89PT1lKXJldHVybiByO3RyeXt2YXIgcz1uKG8saSl9Y2F0Y2godCl7dmFyIGE9dH1pZihyKXJldHVybiByO2lmKGEpdGhyb3cgYTtpZigib2JqZWN0IiE9PWgocykpdGhyb3cgbmV3IFR5cGVFcnJvcigiSXRlcmF0b3IncyByZXR1cm4gbWV0aG9kIHJldHVybmVkIGEgbm9uLW9iamVjdC4iKTtyZXR1cm4gcn1mdW5jdGlvbiBtKHQpe2lmKCJvYmplY3QiIT09aCh0KSl0aHJvdyBuZXcgRXJyb3IoT2JqZWN0LnByb3RvdHlwZS50b1N0cmluZy5jYWxsKHQpKyJpcyBub3QgYW4gT2JqZWN0LiIpO3JldHVybiBlPWEodCwiZG9uZSIpLEJvb2xlYW4oZSk7dmFyIGV9ZnVuY3Rpb24gXyh0KXt2YXIgZT1mdW5jdGlvbih0KXtpZihhcmd1bWVudHMubGVuZ3RoPDIpdmFyIGU9bih0WyJbW05leHRNZXRob2RdXSJdLHRbIltbSXRlcmF0b3JdXSJdKTtlbHNlIGU9bih0WyJbW05leHRNZXRob2RdXSJdLHRbIltbSXRlcmF0b3JdXSJdLFthcmd1bWVudHNbMV1dKTtpZigib2JqZWN0IiE9PWgoZSkpdGhyb3cgbmV3IFR5cGVFcnJvcigiYmFkIGl0ZXJhdG9yIik7cmV0dXJuIGV9KHQpO3JldHVybiEwIT09bShlKSYmZX1mdW5jdGlvbiB3KHQpe2lmKCJvYmplY3QiIT09aCh0KSl0aHJvdyBuZXcgRXJyb3IoT2JqZWN0LnByb3RvdHlwZS50b1N0cmluZy5jYWxsKHQpKyJpcyBub3QgYW4gT2JqZWN0LiIpO3JldHVybiBhKHQsInZhbHVlIil9ZnVuY3Rpb24gUyh0LGUpe3JldHVybiBoKHQpPT09aChlKSYmKCJudW1iZXIiPT09aCh0KT8hKCFpc05hTih0KXx8IWlzTmFOKGUpKXx8MS90PT0xLzAmJjEvZT09LTEvMHx8MS90PT0tMS8wJiYxL2U9PTEvMHx8dD09PWU6ZnVuY3Rpb24odCxlKXtyZXR1cm4gdD09PWV9KHQsZSkpfWZ1bmN0aW9uIEUodCl7aWYoInN5bWJvbCI9PT1oKHQpKXRocm93IG5ldyBUeXBlRXJyb3IoIkNhbm5vdCBjb252ZXJ0IGEgU3ltYm9sIHZhbHVlIHRvIGEgbnVtYmVyIik7dmFyIGU9TnVtYmVyKHQpO3JldHVybiBpc05hTihlKT8wOjEvZT09MS8wfHwxL2U9PS0xLzB8fGU9PT0xLzB8fGU9PT0tMS8wP2U6KGU8MD8tMToxKSpNYXRoLmZsb29yKE1hdGguYWJzKGUpKX1mdW5jdGlvbiBPKHQpe3ZhciBlPUUodCk7cmV0dXJuIGU8PTA/MDpNYXRoLm1pbihlLE1hdGgucG93KDIsNTMpLTEpfWZ1bmN0aW9uIGoocil7dmFyIGk9YXJndW1lbnRzLmxlbmd0aD4xP2FyZ3VtZW50c1sxXTplO2lmKCJvYmplY3QiPT09aChyKSl7aWYoYXJndW1lbnRzLmxlbmd0aDwyKXZhciBvPSJkZWZhdWx0IjtlbHNlIGk9PT1TdHJpbmc/bz0ic3RyaW5nIjppPT09TnVtYmVyJiYobz0ibnVtYmVyIik7dmFyIHM9ImZ1bmN0aW9uIj09dHlwZW9mIHQuU3ltYm9sJiYic3ltYm9sIj09dHlwZW9mIHQuU3ltYm9sLnRvUHJpbWl0aXZlP3Aocix0LlN5bWJvbC50b1ByaW1pdGl2ZSk6ZTtpZihzIT09ZSl7dmFyIGw9bihzLHIsW29dKTtpZigib2JqZWN0IiE9PWgobCkpcmV0dXJuIGw7dGhyb3cgbmV3IFR5cGVFcnJvcigiQ2Fubm90IGNvbnZlcnQgZXhvdGljIG9iamVjdCB0byBwcmltaXRpdmUuIil9cmV0dXJuImRlZmF1bHQiPT09byYmKG89Im51bWJlciIpLGZ1bmN0aW9uKHQsZSl7aWYoInN0cmluZyI9PT1lKXZhciByPVsidG9TdHJpbmciLCJ2YWx1ZU9mIl07ZWxzZSByPVsidmFsdWVPZiIsInRvU3RyaW5nIl07Zm9yKHZhciBpPTA7aTxyLmxlbmd0aDsrK2kpe3ZhciBvPWEodCxyW2ldKTtpZihjKG8pKXt2YXIgcz1uKG8sdCk7aWYoIm9iamVjdCIhPT1oKHMpKXJldHVybiBzfX10aHJvdyBuZXcgVHlwZUVycm9yKCJDYW5ub3QgY29udmVydCB0byBwcmltaXRpdmUuIil9KHIsbyl9cmV0dXJuIHJ9ZnVuY3Rpb24gVCh0KXtzd2l0Y2goaCh0KSl7Y2FzZSJzeW1ib2wiOnRocm93IG5ldyBUeXBlRXJyb3IoIkNhbm5vdCBjb252ZXJ0IGEgU3ltYm9sIHZhbHVlIHRvIGEgc3RyaW5nIik7Y2FzZSJvYmplY3QiOnJldHVybiBUKGoodCxTdHJpbmcpKTtkZWZhdWx0OnJldHVybiBTdHJpbmcodCl9fWZ1bmN0aW9uIFAodCl7dmFyIGU9bihhcmd1bWVudHMubGVuZ3RoPjE/YXJndW1lbnRzWzFdOnAodCxTeW1ib2wuaXRlcmF0b3IpLHQpO2lmKCJvYmplY3QiIT09aChlKSl0aHJvdyBuZXcgVHlwZUVycm9yKCJiYWQgaXRlcmF0b3IiKTt2YXIgcj11KGUsIm5leHQiKSxpPU9iamVjdC5jcmVhdGUobnVsbCk7cmV0dXJuIGlbIltbSXRlcmF0b3JdXSJdPWUsaVsiW1tOZXh0TWV0aG9kXV0iXT1yLGlbIltbRG9uZV1dIl09ITEsaX1zKE9iamVjdCwia2V5cyIsZnVuY3Rpb24oKXtmdW5jdGlvbiB0KCl7dmFyIHQ7dHJ5e3Q9T2JqZWN0LmNyZWF0ZSh7fSl9Y2F0Y2godCl7cmV0dXJuITB9cmV0dXJuIGkuY2FsbCh0LCJfX3Byb3RvX18iKX12YXIgcj1PYmplY3QucHJvdG90eXBlLmhhc093blByb3BlcnR5LG49T2JqZWN0LnByb3RvdHlwZS50b1N0cmluZyxpPU9iamVjdC5wcm90b3R5cGUucHJvcGVydHlJc0VudW1lcmFibGUsbz0haS5jYWxsKHt0b1N0cmluZzpudWxsfSwidG9TdHJpbmciKSxzPWkuY2FsbCgoZnVuY3Rpb24oKXt9KSwicHJvdG90eXBlIiksYT1bInRvU3RyaW5nIiwidG9Mb2NhbGVTdHJpbmciLCJ2YWx1ZU9mIiwiaGFzT3duUHJvcGVydHkiLCJpc1Byb3RvdHlwZU9mIiwicHJvcGVydHlJc0VudW1lcmFibGUiLCJjb25zdHJ1Y3RvciJdLGM9ZnVuY3Rpb24odCl7dmFyIGU9dC5jb25zdHJ1Y3RvcjtyZXR1cm4gZSYmZS5wcm90b3R5cGU9PT10fSxsPXskY29uc29sZTohMCwkZXh0ZXJuYWw6ITAsJGZyYW1lOiEwLCRmcmFtZUVsZW1lbnQ6ITAsJGZyYW1lczohMCwkaW5uZXJIZWlnaHQ6ITAsJGlubmVyV2lkdGg6ITAsJG91dGVySGVpZ2h0OiEwLCRvdXRlcldpZHRoOiEwLCRwYWdlWE9mZnNldDohMCwkcGFnZVlPZmZzZXQ6ITAsJHBhcmVudDohMCwkc2Nyb2xsTGVmdDohMCwkc2Nyb2xsVG9wOiEwLCRzY3JvbGxYOiEwLCRzY3JvbGxZOiEwLCRzZWxmOiEwLCR3ZWJraXRJbmRleGVkREI6ITAsJHdlYmtpdFN0b3JhZ2VJbmZvOiEwLCR3aW5kb3c6ITB9LHU9ZnVuY3Rpb24oKXtpZigidW5kZWZpbmVkIj09dHlwZW9mIHdpbmRvdylyZXR1cm4hMTtmb3IodmFyIHQgaW4gd2luZG93KXRyeXtpZighbFsiJCIrdF0mJnIuY2FsbCh3aW5kb3csdCkmJm51bGwhPT13aW5kb3dbdF0mJiJvYmplY3QiPT10eXBlb2Ygd2luZG93W3RdKXRyeXtjKHdpbmRvd1t0XSl9Y2F0Y2godCl7cmV0dXJuITB9fWNhdGNoKHQpe3JldHVybiEwfXJldHVybiExfSgpLHA9ZnVuY3Rpb24odCl7aWYoInVuZGVmaW5lZCI9PXR5cGVvZiB3aW5kb3d8fCF1KXJldHVybiBjKHQpO3RyeXtyZXR1cm4gYyh0KX1jYXRjaCh0KXtyZXR1cm4hMX19O3JldHVybiBmdW5jdGlvbihpKXt2YXIgYz0iW29iamVjdCBGdW5jdGlvbl0iPT09bi5jYWxsKGkpLGw9ZnVuY3Rpb24odCl7dmFyIGU9bi5jYWxsKHQpLHI9IltvYmplY3QgQXJndW1lbnRzXSI9PT1lO3JldHVybiByfHwocj0iW29iamVjdCBBcnJheV0iIT09ZSYmbnVsbCE9PXQmJiJvYmplY3QiPT10eXBlb2YgdCYmIm51bWJlciI9PXR5cGVvZiB0Lmxlbmd0aCYmdC5sZW5ndGg+PTAmJiJbb2JqZWN0IEZ1bmN0aW9uXSI9PT1uLmNhbGwodC5jYWxsZWUpKSxyfShpKSx1PSJbb2JqZWN0IFN0cmluZ10iPT09bi5jYWxsKGkpLGg9W107aWYoaT09PWV8fG51bGw9PT1pKXRocm93IG5ldyBUeXBlRXJyb3IoIkNhbm5vdCBjb252ZXJ0IHVuZGVmaW5lZCBvciBudWxsIHRvIG9iamVjdCIpO3ZhciBmPXMmJmM7aWYodSYmaS5sZW5ndGg+MCYmIXIuY2FsbChpLDApKWZvcih2YXIgZD0wO2Q8aS5sZW5ndGg7KytkKWgucHVzaChTdHJpbmcoZCkpO2lmKGwmJmkubGVuZ3RoPjApZm9yKHZhciB5PTA7eTxpLmxlbmd0aDsrK3kpaC5wdXNoKFN0cmluZyh5KSk7ZWxzZSBmb3IodmFyIGIgaW4gaSl0KCkmJiJfX3Byb3RvX18iPT09Ynx8ZiYmInByb3RvdHlwZSI9PT1ifHwhci5jYWxsKGksYil8fGgucHVzaChTdHJpbmcoYikpO2lmKG8pZm9yKHZhciBnPXAoaSksdj0wO3Y8YS5sZW5ndGg7Kyt2KWcmJiJjb25zdHJ1Y3RvciI9PT1hW3ZdfHwhci5jYWxsKGksYVt2XSl8fGgucHVzaChhW3ZdKTtyZXR1cm4gaH19KCkpLGY9T2JqZWN0LmlzRXh0ZW5zaWJsZSxzKE9iamVjdCwiaXNFeHRlbnNpYmxlIiwoZnVuY3Rpb24odCl7cmV0dXJuIm9iamVjdCI9PT1oKHQpJiYoIWZ8fGYodCkpfSkpLHMoQXJyYXkucHJvdG90eXBlLCJpbmNsdWRlcyIsKGZ1bmN0aW9uKHQpe3ZhciBlPWwodGhpcykscj1PKGEoZSwibGVuZ3RoIikpO2lmKDA9PT1yKXJldHVybiExO3ZhciBuPUUoYXJndW1lbnRzWzFdKTtpZihuPj0wKXZhciBpPW47ZWxzZShpPXIrbik8MCYmKGk9MCk7Zm9yKDtpPHI7KXtpZihTKHQsYShlLFQoaSkpKSlyZXR1cm4hMDtpKz0xfXJldHVybiExfSkpLGZ1bmN0aW9uKCl7dmFyIGU9e30udG9TdHJpbmcscj0iIi5zcGxpdCxuPVtdLmNvbmNhdCxpPU9iamVjdC5wcm90b3R5cGUuaGFzT3duUHJvcGVydHksbz1PYmplY3QuZ2V0T3duUHJvcGVydHlOYW1lc3x8T2JqZWN0LmtleXMsYT0ib2JqZWN0Ij09dHlwZW9mIHQ/byh0KTpbXTtzKE9iamVjdCwiZ2V0T3duUHJvcGVydHlOYW1lcyIsKGZ1bmN0aW9uKHQpe3ZhciBzPWwodCk7aWYoIltvYmplY3QgV2luZG93XSI9PT1lLmNhbGwocykpdHJ5e3JldHVybiBvKHMpfWNhdGNoKHQpe3JldHVybiBuLmNhbGwoW10sYSl9cz0iW29iamVjdCBTdHJpbmddIj09ZS5jYWxsKHMpP3IuY2FsbChzLCIiKTpPYmplY3Qocyk7Zm9yKHZhciBjPW8ocyksdT1bImxlbmd0aCIsInByb3RvdHlwZSJdLHA9MDtwPHUubGVuZ3RoO3ArKyl7dmFyIGg9dVtwXTtpLmNhbGwocyxoKSYmIWMuaW5jbHVkZXMoaCkmJmMucHVzaChoKX1pZihjLmluY2x1ZGVzKCJfX3Byb3RvX18iKSl7dmFyIGY9Yy5pbmRleE9mKCJfX3Byb3RvX18iKTtjLnNwbGljZShmLDEpfXJldHVybiBjfSkpfSgpLGZ1bmN0aW9uKCl7dmFyIHQ9T2JqZWN0LmdldE93blByb3BlcnR5RGVzY3JpcHRvcixlPWZ1bmN0aW9uKCl7dHJ5e3JldHVybiAxPT09T2JqZWN0LmRlZmluZVByb3BlcnR5KGRvY3VtZW50LmNyZWF0ZUVsZW1lbnQoImRpdiIpLCJvbmUiLHtnZXQ6ZnVuY3Rpb24oKXtyZXR1cm4gMX19KS5vbmV9Y2F0Y2godCl7cmV0dXJuITF9fSxyPXt9LnRvU3RyaW5nLG49IiIuc3BsaXQ7cyhPYmplY3QsImdldE93blByb3BlcnR5RGVzY3JpcHRvciIsKGZ1bmN0aW9uKGksbyl7dmFyIHM9bChpKTtzPSgic3RyaW5nIj09PWgocyl8fHMgaW5zdGFuY2VvZiBTdHJpbmcpJiYiW29iamVjdCBTdHJpbmddIj09ci5jYWxsKGkpP24uY2FsbChpLCIiKTpPYmplY3QoaSk7dmFyIGE9ZnVuY3Rpb24odCl7dmFyIGU9aih0LFN0cmluZyk7cmV0dXJuInN5bWJvbCI9PT1oKGUpP2U6VChlKX0obyk7aWYoZSl0cnl7cmV0dXJuIHQocyxhKX1jYXRjaCh0KXt9aWYoZnVuY3Rpb24odCxlKXtyZXR1cm4gT2JqZWN0LnByb3RvdHlwZS5oYXNPd25Qcm9wZXJ0eS5jYWxsKHQsZSl9KHMsYSkpcmV0dXJue2VudW1lcmFibGU6ITAsY29uZmlndXJhYmxlOiEwLHdyaXRhYmxlOiEwLHZhbHVlOnNbYV19fSkpfSgpLGZ1bmN0aW9uKHIsbixpKXt2YXIgbyxzPWZ1bmN0aW9uKCl7dHJ5e3ZhciB0PXt9O3JldHVybiByLmRlZmluZVByb3BlcnR5KHQsInQiLHtjb25maWd1cmFibGU6ITAsZW51bWVyYWJsZTohMSxnZXQ6ZnVuY3Rpb24oKXtyZXR1cm4hMH0sc2V0OmV9KSwhIXQudH1jYXRjaCh0KXtyZXR1cm4hMX19KCksYT0wLGM9IiIrTWF0aC5yYW5kb20oKSxsPSJfXwFzeW1ib2w6Iix1PSJfXwFzeW1ib2xAQCIrYyxwPXt9LGY9ImRlZmluZVByb3BlcnR5IixkPSJkZWZpbmVQcm9wZXJ0aWVzIix5PSJnZXRPd25Qcm9wZXJ0eU5hbWVzIixiPSJnZXRPd25Qcm9wZXJ0eURlc2NyaXB0b3IiLGc9InByb3BlcnR5SXNFbnVtZXJhYmxlIix2PXIucHJvdG90eXBlLG09di5oYXNPd25Qcm9wZXJ0eSxfPXZbZ10sdz12LnRvU3RyaW5nLFM9QXJyYXkucHJvdG90eXBlLmNvbmNhdCxFPXIuZ2V0T3duUHJvcGVydHlOYW1lcz9yLmdldE93blByb3BlcnR5TmFtZXModCk6W10sTz1yW3ldLGo9ZnVuY3Rpb24odCl7aWYoIltvYmplY3QgV2luZG93XSI9PT13LmNhbGwodCkpdHJ5e3JldHVybiBPKHQpfWNhdGNoKHQpe3JldHVybiBTLmNhbGwoW10sRSl9cmV0dXJuIE8odCl9LFQ9cltiXSxQPXIuY3JlYXRlLEE9ci5rZXlzLE49ci5mcmVlemV8fHIsQz1yW2ZdLEk9cltkXSxMPVQocix5KSxNPWZ1bmN0aW9uKHQsZSxyKXtpZighbS5jYWxsKHQsdSkpdHJ5e0ModCx1LHtlbnVtZXJhYmxlOiExLGNvbmZpZ3VyYWJsZTohMSx3cml0YWJsZTohMSx2YWx1ZTp7fX0pfWNhdGNoKGUpe3RbdV09e319dFt1XVsiQEAiK2VdPXJ9LEQ9ZnVuY3Rpb24oKXt9LHg9ZnVuY3Rpb24odCl7cmV0dXJuIHQhPXUmJiFtLmNhbGwoRix0KX0sUj1mdW5jdGlvbih0KXtyZXR1cm4gdCE9dSYmbS5jYWxsKEYsdCl9LGs9ZnVuY3Rpb24odCl7dmFyIGU9IiIrdDtyZXR1cm4gUihlKT9tLmNhbGwodGhpcyxlKSYmdGhpc1t1XSYmdGhpc1t1XVsiQEAiK2VdOl8uY2FsbCh0aGlzLHQpfSxIPWZ1bmN0aW9uKHQpe3ZhciBlPXtlbnVtZXJhYmxlOiExLGNvbmZpZ3VyYWJsZTohMCxnZXQ6RCxzZXQ6ZnVuY3Rpb24oZSl7byh0aGlzLHQse2VudW1lcmFibGU6ITEsY29uZmlndXJhYmxlOiEwLHdyaXRhYmxlOiEwLHZhbHVlOmV9KSxNKHRoaXMsdCwhMCl9fTt0cnl7Qyh2LHQsZSl9Y2F0Y2gocil7dlt0XT1lLnZhbHVlfUZbdF09QyhyKHQpLCJjb25zdHJ1Y3RvciIsVSk7dmFyIG49VCgkLnByb3RvdHlwZSwiZGVzY3JpcHRpb24iKTtyZXR1cm4gbiYmQyhGW3RdLCJkZXNjcmlwdGlvbiIsbiksTihGW3RdKX0sRz1mdW5jdGlvbih0KXt2YXIgcj1mdW5jdGlvbih0KXtpZigic3ltYm9sIj09PWgodCkpcmV0dXJuIHQ7dGhyb3cgVHlwZUVycm9yKHQrIiBpcyBub3QgYSBzeW1ib2wiKX0odCk7aWYoVil7dmFyIG49SyhyKTtpZigiIiE9PW4pcmV0dXJuIG4uc2xpY2UoMSwtMSl9aWYocFtyXSE9PWUpcmV0dXJuIHBbcl07dmFyIGk9ci50b1N0cmluZygpLG89aS5sYXN0SW5kZXhPZigiMC4iKTtyZXR1cm4iIj09PShpPWkuc2xpY2UoMTAsbykpP2U6aX0sJD1mdW5jdGlvbiB0KCl7dmFyIG49YXJndW1lbnRzWzBdO2lmKHRoaXMgaW5zdGFuY2VvZiB0KXRocm93IG5ldyBUeXBlRXJyb3IoIlN5bWJvbCBpcyBub3QgYSBjb25zdHJ1Y3RvciIpO3ZhciBpPWwuY29uY2F0KG58fCIiLGMsKythKTtuPT09ZXx8bnVsbCE9PW4mJiFpc05hTihuKSYmIiIhPT1TdHJpbmcobil8fChwW2ldPVN0cmluZyhuKSk7dmFyIG89SChpKTtyZXR1cm4gc3x8ci5kZWZpbmVQcm9wZXJ0eShvLCJkZXNjcmlwdGlvbiIse2NvbmZpZ3VyYWJsZTohMCxlbnVtZXJhYmxlOiExLHZhbHVlOkcobyl9KSxvfSxGPVAobnVsbCksVT17dmFsdWU6JH0sej1mdW5jdGlvbih0KXtyZXR1cm4gRlt0XX0sQj1mdW5jdGlvbih0LGUscil7dmFyIG49IiIrZTtyZXR1cm4gUihuKT8obyh0LG4sci5lbnVtZXJhYmxlP2Z1bmN0aW9uKHQpe3ZhciBlPVAodCk7cmV0dXJuIGUuZW51bWVyYWJsZT0hMSxlfShyKTpyKSxNKHQsbiwhIXIuZW51bWVyYWJsZSkpOkModCxlLHIpLHR9LFc9ZnVuY3Rpb24odCl7cmV0dXJuIGoodCkuZmlsdGVyKHQ9PT12P2Z1bmN0aW9uKHQpe3JldHVybiBmdW5jdGlvbihlKXtyZXR1cm4gbS5jYWxsKHQsdSkmJm0uY2FsbCh0W3VdLCJAQCIrZSl9fSh0KTpSKS5tYXAoeil9O0wudmFsdWU9QixDKHIsZixMKSxMLnZhbHVlPVcsQyhyLCJnZXRPd25Qcm9wZXJ0eVN5bWJvbHMiLEwpLEwudmFsdWU9ZnVuY3Rpb24odCl7cmV0dXJuIGoodCkuZmlsdGVyKHgpfSxDKHIseSxMKSxMLnZhbHVlPWZ1bmN0aW9uKHQsZSl7dmFyIHI9VyhlKTtyZXR1cm4gci5sZW5ndGg/QShlKS5jb25jYXQocikuZm9yRWFjaCgoZnVuY3Rpb24ocil7ay5jYWxsKGUscikmJkIodCxyLGVbcl0pfSkpOkkodCxlKSx0fSxDKHIsZCxMKSxMLnZhbHVlPWssQyh2LGcsTCksTC52YWx1ZT0kLEMoaSwiU3ltYm9sIixMKSxMLnZhbHVlPWZ1bmN0aW9uKHQpe3ZhciBlPWwuY29uY2F0KGwsdCxjKTtyZXR1cm4gZSBpbiB2P0ZbZV06SChlKX0sQygkLCJmb3IiLEwpLEwudmFsdWU9ZnVuY3Rpb24odCl7aWYoeCh0KSl0aHJvdyBuZXcgVHlwZUVycm9yKHQrIiBpcyBub3QgYSBzeW1ib2wiKTtyZXR1cm4gbS5jYWxsKEYsdCk/dC5zbGljZSgyMCwtYy5sZW5ndGgpOnZvaWQgMH0sQygkLCJrZXlGb3IiLEwpLEwudmFsdWU9ZnVuY3Rpb24odCxlKXt2YXIgcj1UKHQsZSk7cmV0dXJuIHImJlIoZSkmJihyLmVudW1lcmFibGU9ay5jYWxsKHQsZSkpLHJ9LEMocixiLEwpLEwudmFsdWU9ZnVuY3Rpb24odCxlKXtyZXR1cm4gMT09PWFyZ3VtZW50cy5sZW5ndGh8fHZvaWQgMD09PWU/UCh0KTpmdW5jdGlvbih0LGUpe3ZhciByPVAodCk7cmV0dXJuIGooZSkuZm9yRWFjaCgoZnVuY3Rpb24odCl7ay5jYWxsKGUsdCkmJkIocix0LGVbdF0pfSkpLHJ9KHQsZSl9LEMociwiY3JlYXRlIixMKTt2YXIgcT1udWxsPT09ZnVuY3Rpb24oKXtyZXR1cm4gdGhpc30uY2FsbChudWxsKTtpZihMLnZhbHVlPXE/ZnVuY3Rpb24oKXt2YXIgdD13LmNhbGwodGhpcyk7cmV0dXJuIltvYmplY3QgU3RyaW5nXSI9PT10JiZSKHRoaXMpPyJbb2JqZWN0IFN5bWJvbF0iOnR9OmZ1bmN0aW9uKCl7aWYodGhpcz09PXdpbmRvdylyZXR1cm4iW29iamVjdCBOdWxsXSI7dmFyIHQ9dy5jYWxsKHRoaXMpO3JldHVybiJbb2JqZWN0IFN0cmluZ10iPT09dCYmUih0aGlzKT8iW29iamVjdCBTeW1ib2xdIjp0fSxDKHYsInRvU3RyaW5nIixMKSxvPWZ1bmN0aW9uKHQsZSxyKXt2YXIgbj1UKHYsZSk7ZGVsZXRlIHZbZV0sQyh0LGUsciksdCE9PXYmJkModixlLG4pfSxmdW5jdGlvbigpe3RyeXt2YXIgdD17fTtyZXR1cm4gci5kZWZpbmVQcm9wZXJ0eSh0LCJ0Iix7Y29uZmlndXJhYmxlOiEwLGVudW1lcmFibGU6ITEsZ2V0OmZ1bmN0aW9uKCl7cmV0dXJuITB9LHNldDplfSksISF0LnR9Y2F0Y2godCl7cmV0dXJuITF9fSgpKXt2YXIgSzt0cnl7Sz1GdW5jdGlvbigicyIsInZhciB2ID0gcy52YWx1ZU9mKCk7IHJldHVybiB7IFt2XSgpIHt9IH1bdl0ubmFtZTsiKX1jYXRjaCh0KXt9dmFyIFY9SyYmImluZmVycmVkIj09PWZ1bmN0aW9uKCl7fS5uYW1lP0s6bnVsbDtyLmRlZmluZVByb3BlcnR5KGkuU3ltYm9sLnByb3RvdHlwZSwiZGVzY3JpcHRpb24iLHtjb25maWd1cmFibGU6ITAsZW51bWVyYWJsZTohMSxnZXQ6ZnVuY3Rpb24oKXtyZXR1cm4gRyh0aGlzKX19KX19KE9iamVjdCwwLHQpLE9iamVjdC5kZWZpbmVQcm9wZXJ0eSh0LlN5bWJvbCwiaXRlcmF0b3IiLHt2YWx1ZTp0LlN5bWJvbCgiaXRlcmF0b3IiKX0pLE9iamVjdC5kZWZpbmVQcm9wZXJ0eShTeW1ib2wsInNwZWNpZXMiLHt2YWx1ZTpTeW1ib2woInNwZWNpZXMiKX0pLGZ1bmN0aW9uKHQpe2Z1bmN0aW9uIHIodCxlKXtpZigib2JqZWN0IiE9PWgodCkpdGhyb3cgbmV3IFR5cGVFcnJvcigiY3JlYXRlTWFwSXRlcmF0b3IgY2FsbGVkIG9uIGluY29tcGF0aWJsZSByZWNlaXZlciAiK09iamVjdC5wcm90b3R5cGUudG9TdHJpbmcuY2FsbCh0KSk7aWYoITAhPT10Ll9lczZNYXApdGhyb3cgbmV3IFR5cGVFcnJvcigiY3JlYXRlTWFwSXRlcmF0b3IgY2FsbGVkIG9uIGluY29tcGF0aWJsZSByZWNlaXZlciAiK09iamVjdC5wcm90b3R5cGUudG9TdHJpbmcuY2FsbCh0KSk7dmFyIHI9T2JqZWN0LmNyZWF0ZShnKTtyZXR1cm4gT2JqZWN0LmRlZmluZVByb3BlcnR5KHIsIltbTWFwXV0iLHtjb25maWd1cmFibGU6ITAsZW51bWVyYWJsZTohMSx3cml0YWJsZTohMCx2YWx1ZTp0fSksT2JqZWN0LmRlZmluZVByb3BlcnR5KHIsIltbTWFwTmV4dEluZGV4XV0iLHtjb25maWd1cmFibGU6ITAsZW51bWVyYWJsZTohMSx3cml0YWJsZTohMCx2YWx1ZTowfSksT2JqZWN0LmRlZmluZVByb3BlcnR5KHIsIltbTWFwSXRlcmF0aW9uS2luZF1dIix7Y29uZmlndXJhYmxlOiEwLGVudW1lcmFibGU6ITEsd3JpdGFibGU6ITAsdmFsdWU6ZX0pLHJ9dmFyIG49ZnVuY3Rpb24oKXt0cnl7dmFyIHQ9e307cmV0dXJuIE9iamVjdC5kZWZpbmVQcm9wZXJ0eSh0LCJ0Iix7Y29uZmlndXJhYmxlOiEwLGVudW1lcmFibGU6ITEsZ2V0OmZ1bmN0aW9uKCl7cmV0dXJuITB9LHNldDplfSksISF0LnR9Y2F0Y2godCl7cmV0dXJuITF9fSgpLGk9MCxvPVN5bWJvbCgibWV0YV8iKygxZTgqTWF0aC5yYW5kb20oKSsiIikucmVwbGFjZSgiLiIsIiIpKSxhPWZ1bmN0aW9uKHQpe2lmKCJvYmplY3QiPT10eXBlb2YgdD9udWxsIT09dDoiZnVuY3Rpb24iPT10eXBlb2YgdCl7aWYoIU9iamVjdC5pc0V4dGVuc2libGUodCkpcmV0dXJuITE7aWYoIU9iamVjdC5wcm90b3R5cGUuaGFzT3duUHJvcGVydHkuY2FsbCh0LG8pKXt2YXIgZT10eXBlb2YgdCsiLSIrICsraTtPYmplY3QuZGVmaW5lUHJvcGVydHkodCxvLHtjb25maWd1cmFibGU6ITEsZW51bWVyYWJsZTohMSx3cml0YWJsZTohMSx2YWx1ZTplfSl9cmV0dXJuIHRbb119cmV0dXJuIiIrdH0sbD1mdW5jdGlvbih0LHIpe3ZhciBuPWEocik7aWYoITE9PT1uKXJldHVybiB1KHQscik7dmFyIGk9dC5fdGFibGVbbl07cmV0dXJuIGkhPT1lJiZpfSx1PWZ1bmN0aW9uKHQsZSl7Zm9yKHZhciByPTA7cjx0Ll9rZXlzLmxlbmd0aDtyKyspe3ZhciBuPXQuX2tleXNbcl07aWYobiE9PWYmJlMobixlKSlyZXR1cm4gcn1yZXR1cm4hMX0scD1mdW5jdGlvbih0LGUscil7dmFyIG49YShlKTtyZXR1cm4hMSE9PW4mJighMT09PXI/ZGVsZXRlIHQuX3RhYmxlW25dOnQuX3RhYmxlW25dPXIsITApfSxmPVN5bWJvbCgidW5kZWYiKSxiPWZ1bmN0aW9uIHQoKXtpZighKHRoaXMgaW5zdGFuY2VvZiB0KSl0aHJvdyBuZXcgVHlwZUVycm9yKCdDb25zdHJ1Y3RvciBNYXAgcmVxdWlyZXMgIm5ldyInKTt2YXIgcj15KHRoaXMsdC5wcm90b3R5cGUse190YWJsZTp7fSxfa2V5czpbXSxfdmFsdWVzOltdLF9zaXplOjAsX2VzNk1hcDohMH0pO258fE9iamVjdC5kZWZpbmVQcm9wZXJ0eShyLCJzaXplIix7Y29uZmlndXJhYmxlOiEwLGVudW1lcmFibGU6ITEsd3JpdGFibGU6ITAsdmFsdWU6MH0pO3ZhciBpPWFyZ3VtZW50cy5sZW5ndGg+MD9hcmd1bWVudHNbMF06ZTtpZihudWxsPT09aXx8aT09PWUpcmV0dXJuIHI7dmFyIG89ci5zZXQ7aWYoIWMobykpdGhyb3cgbmV3IFR5cGVFcnJvcigiTWFwLnByb3RvdHlwZS5zZXQgaXMgbm90IGEgZnVuY3Rpb24iKTt0cnl7Zm9yKHZhciBzPVAoaSk7Oyl7dmFyIGE9XyhzKTtpZighMT09PWEpcmV0dXJuIHI7dmFyIGw9dyhhKTtpZigib2JqZWN0IiE9PWgobCkpdHJ5e3Rocm93IG5ldyBUeXBlRXJyb3IoIkl0ZXJhdG9yIHZhbHVlICIrbCsiIGlzIG5vdCBhbiBlbnRyeSBvYmplY3QiKX1jYXRjaCh0KXtyZXR1cm4gdihzLHQpfXRyeXt2YXIgdT1sWzBdLHA9bFsxXTtvLmNhbGwocix1LHApfWNhdGNoKHQpe3JldHVybiB2KHMsdCl9fX1jYXRjaCh0KXtpZihBcnJheS5pc0FycmF5KGkpfHwiW29iamVjdCBBcmd1bWVudHNdIj09PU9iamVjdC5wcm90b3R5cGUudG9TdHJpbmcuY2FsbChpKXx8aS5jYWxsZWUpe3ZhciBmLGQ9aS5sZW5ndGg7Zm9yKGY9MDtmPGQ7ZisrKW8uY2FsbChyLGlbZl1bMF0saVtmXVsxXSl9fXJldHVybiByfTtPYmplY3QuZGVmaW5lUHJvcGVydHkoYiwicHJvdG90eXBlIix7Y29uZmlndXJhYmxlOiExLGVudW1lcmFibGU6ITEsd3JpdGFibGU6ITEsdmFsdWU6e319KSxuP09iamVjdC5kZWZpbmVQcm9wZXJ0eShiLFN5bWJvbC5zcGVjaWVzLHtjb25maWd1cmFibGU6ITAsZW51bWVyYWJsZTohMSxnZXQ6ZnVuY3Rpb24oKXtyZXR1cm4gdGhpc30sc2V0OmV9KTpzKGIsU3ltYm9sLnNwZWNpZXMsYikscyhiLnByb3RvdHlwZSwiY2xlYXIiLChmdW5jdGlvbigpe3ZhciB0PXRoaXM7aWYoIm9iamVjdCIhPT1oKHQpKXRocm93IG5ldyBUeXBlRXJyb3IoIk1ldGhvZCBNYXAucHJvdG90eXBlLmNsZWFyIGNhbGxlZCBvbiBpbmNvbXBhdGlibGUgcmVjZWl2ZXIgIitPYmplY3QucHJvdG90eXBlLnRvU3RyaW5nLmNhbGwodCkpO2lmKCEwIT09dC5fZXM2TWFwKXRocm93IG5ldyBUeXBlRXJyb3IoIk1ldGhvZCBNYXAucHJvdG90eXBlLmNsZWFyIGNhbGxlZCBvbiBpbmNvbXBhdGlibGUgcmVjZWl2ZXIgIitPYmplY3QucHJvdG90eXBlLnRvU3RyaW5nLmNhbGwodCkpO2Zvcih2YXIgcj10Ll9rZXlzLGk9MDtpPHIubGVuZ3RoO2krKyl0Ll9rZXlzW2ldPWYsdC5fdmFsdWVzW2ldPWY7cmV0dXJuIHRoaXMuX3NpemU9MCxufHwodGhpcy5zaXplPXRoaXMuX3NpemUpLHRoaXMuX3RhYmxlPXt9LGV9KSkscyhiLnByb3RvdHlwZSwiY29uc3RydWN0b3IiLGIpLHMoYi5wcm90b3R5cGUsImRlbGV0ZSIsKGZ1bmN0aW9uKHQpe3ZhciBlPXRoaXM7aWYoIm9iamVjdCIhPT1oKGUpKXRocm93IG5ldyBUeXBlRXJyb3IoIk1ldGhvZCBNYXAucHJvdG90eXBlLmNsZWFyIGNhbGxlZCBvbiBpbmNvbXBhdGlibGUgcmVjZWl2ZXIgIitPYmplY3QucHJvdG90eXBlLnRvU3RyaW5nLmNhbGwoZSkpO2lmKCEwIT09ZS5fZXM2TWFwKXRocm93IG5ldyBUeXBlRXJyb3IoIk1ldGhvZCBNYXAucHJvdG90eXBlLmNsZWFyIGNhbGxlZCBvbiBpbmNvbXBhdGlibGUgcmVjZWl2ZXIgIitPYmplY3QucHJvdG90eXBlLnRvU3RyaW5nLmNhbGwoZSkpO3ZhciByPWwoZSx0KTtpZighMSE9PXIpe3ZhciBpPWUuX2tleXNbcl07aWYoaSE9PWYmJlMoaSx0KSlyZXR1cm4gdGhpcy5fa2V5c1tyXT1mLHRoaXMuX3ZhbHVlc1tyXT1mLHRoaXMuX3NpemU9LS10aGlzLl9zaXplLG58fCh0aGlzLnNpemU9dGhpcy5fc2l6ZSkscCh0aGlzLHQsITEpLCEwfXJldHVybiExfSkpLHMoYi5wcm90b3R5cGUsImVudHJpZXMiLChmdW5jdGlvbigpe3JldHVybiByKHRoaXMsImtleSt2YWx1ZSIpfSkpLHMoYi5wcm90b3R5cGUsImZvckVhY2giLChmdW5jdGlvbih0KXt2YXIgcj10aGlzO2lmKCJvYmplY3QiIT09aChyKSl0aHJvdyBuZXcgVHlwZUVycm9yKCJNZXRob2QgTWFwLnByb3RvdHlwZS5mb3JFYWNoIGNhbGxlZCBvbiBpbmNvbXBhdGlibGUgcmVjZWl2ZXIgIitPYmplY3QucHJvdG90eXBlLnRvU3RyaW5nLmNhbGwocikpO2lmKCEwIT09ci5fZXM2TWFwKXRocm93IG5ldyBUeXBlRXJyb3IoIk1ldGhvZCBNYXAucHJvdG90eXBlLmZvckVhY2ggY2FsbGVkIG9uIGluY29tcGF0aWJsZSByZWNlaXZlciAiK09iamVjdC5wcm90b3R5cGUudG9TdHJpbmcuY2FsbChyKSk7aWYoIWModCkpdGhyb3cgbmV3IFR5cGVFcnJvcihPYmplY3QucHJvdG90eXBlLnRvU3RyaW5nLmNhbGwodCkrIiBpcyBub3QgYSBmdW5jdGlvbi4iKTtpZihhcmd1bWVudHNbMV0pdmFyIG49YXJndW1lbnRzWzFdO2Zvcih2YXIgaT1yLl9rZXlzLG89MDtvPGkubGVuZ3RoO28rKylyLl9rZXlzW29dIT09ZiYmci5fdmFsdWVzW29dIT09ZiYmdC5jYWxsKG4sci5fdmFsdWVzW29dLHIuX2tleXNbb10scik7cmV0dXJuIGV9KSkscyhiLnByb3RvdHlwZSwiZ2V0IiwoZnVuY3Rpb24odCl7dmFyIHI9dGhpcztpZigib2JqZWN0IiE9PWgocikpdGhyb3cgbmV3IFR5cGVFcnJvcigiTWV0aG9kIE1hcC5wcm90b3R5cGUuZ2V0IGNhbGxlZCBvbiBpbmNvbXBhdGlibGUgcmVjZWl2ZXIgIitPYmplY3QucHJvdG90eXBlLnRvU3RyaW5nLmNhbGwocikpO2lmKCEwIT09ci5fZXM2TWFwKXRocm93IG5ldyBUeXBlRXJyb3IoIk1ldGhvZCBNYXAucHJvdG90eXBlLmdldCBjYWxsZWQgb24gaW5jb21wYXRpYmxlIHJlY2VpdmVyICIrT2JqZWN0LnByb3RvdHlwZS50b1N0cmluZy5jYWxsKHIpKTt2YXIgbj1sKHIsdCk7aWYoITEhPT1uKXt2YXIgaT1yLl9rZXlzW25dO2lmKGkhPT1mJiZTKGksdCkpcmV0dXJuIHIuX3ZhbHVlc1tuXX1yZXR1cm4gZX0pKSxzKGIucHJvdG90eXBlLCJoYXMiLChmdW5jdGlvbih0KXt2YXIgZT10aGlzO2lmKCJvYmplY3QiIT10eXBlb2YgZSl0aHJvdyBuZXcgVHlwZUVycm9yKCJNZXRob2QgTWFwLnByb3RvdHlwZS5oYXMgY2FsbGVkIG9uIGluY29tcGF0aWJsZSByZWNlaXZlciAiK09iamVjdC5wcm90b3R5cGUudG9TdHJpbmcuY2FsbChlKSk7aWYoITAhPT1lLl9lczZNYXApdGhyb3cgbmV3IFR5cGVFcnJvcigiTWV0aG9kIE1hcC5wcm90b3R5cGUuaGFzIGNhbGxlZCBvbiBpbmNvbXBhdGlibGUgcmVjZWl2ZXIgIitPYmplY3QucHJvdG90eXBlLnRvU3RyaW5nLmNhbGwoZSkpO3ZhciByPWwoZSx0KTtpZighMSE9PXIpe3ZhciBuPWUuX2tleXNbcl07aWYobiE9PWYmJlMobix0KSlyZXR1cm4hMH1yZXR1cm4hMX0pKSxzKGIucHJvdG90eXBlLCJrZXlzIiwoZnVuY3Rpb24oKXtyZXR1cm4gcih0aGlzLCJrZXkiKX0pKSxzKGIucHJvdG90eXBlLCJzZXQiLChmdW5jdGlvbih0LGUpe3ZhciByPXRoaXM7aWYoIm9iamVjdCIhPT1oKHIpKXRocm93IG5ldyBUeXBlRXJyb3IoIk1ldGhvZCBNYXAucHJvdG90eXBlLnNldCBjYWxsZWQgb24gaW5jb21wYXRpYmxlIHJlY2VpdmVyICIrT2JqZWN0LnByb3RvdHlwZS50b1N0cmluZy5jYWxsKHIpKTtpZighMCE9PXIuX2VzNk1hcCl0aHJvdyBuZXcgVHlwZUVycm9yKCJNZXRob2QgTWFwLnByb3RvdHlwZS5zZXQgY2FsbGVkIG9uIGluY29tcGF0aWJsZSByZWNlaXZlciAiK09iamVjdC5wcm90b3R5cGUudG9TdHJpbmcuY2FsbChyKSk7dmFyIGk9bChyLHQpO2lmKCExIT09aSlyLl92YWx1ZXNbaV09ZTtlbHNley0wPT09dCYmKHQ9MCk7dmFyIG89eyJbW0tleV1dIjp0LCJbW1ZhbHVlXV0iOmV9O3IuX2tleXMucHVzaChvWyJbW0tleV1dIl0pLHIuX3ZhbHVlcy5wdXNoKG9bIltbVmFsdWVdXSJdKSxwKHIsdCxyLl9rZXlzLmxlbmd0aC0xKSwrK3IuX3NpemUsbnx8KHIuc2l6ZT1yLl9zaXplKX1yZXR1cm4gcn0pKSxuJiZPYmplY3QuZGVmaW5lUHJvcGVydHkoYi5wcm90b3R5cGUsInNpemUiLHtjb25maWd1cmFibGU6ITAsZW51bWVyYWJsZTohMSxnZXQ6ZnVuY3Rpb24oKXt2YXIgdD10aGlzO2lmKCJvYmplY3QiIT09aCh0KSl0aHJvdyBuZXcgVHlwZUVycm9yKCJNZXRob2QgTWFwLnByb3RvdHlwZS5zaXplIGNhbGxlZCBvbiBpbmNvbXBhdGlibGUgcmVjZWl2ZXIgIitPYmplY3QucHJvdG90eXBlLnRvU3RyaW5nLmNhbGwodCkpO2lmKCEwIT09dC5fZXM2TWFwKXRocm93IG5ldyBUeXBlRXJyb3IoIk1ldGhvZCBNYXAucHJvdG90eXBlLnNpemUgY2FsbGVkIG9uIGluY29tcGF0aWJsZSByZWNlaXZlciAiK09iamVjdC5wcm90b3R5cGUudG9TdHJpbmcuY2FsbCh0KSk7cmV0dXJuIHRoaXMuX3NpemV9LHNldDplfSkscyhiLnByb3RvdHlwZSwidmFsdWVzIiwoZnVuY3Rpb24oKXtyZXR1cm4gcih0aGlzLCJ2YWx1ZSIpfSkpLHMoYi5wcm90b3R5cGUsU3ltYm9sLml0ZXJhdG9yLGIucHJvdG90eXBlLmVudHJpZXMpLCJuYW1lImluIGJ8fE9iamVjdC5kZWZpbmVQcm9wZXJ0eShiLCJuYW1lIix7Y29uZmlndXJhYmxlOiEwLGVudW1lcmFibGU6ITEsd3JpdGFibGU6ITEsdmFsdWU6Ik1hcCJ9KTt2YXIgZz17fTtPYmplY3QuZGVmaW5lUHJvcGVydHkoZywiaXNNYXBJdGVyYXRvciIse2NvbmZpZ3VyYWJsZTohMSxlbnVtZXJhYmxlOiExLHdyaXRhYmxlOiExLHZhbHVlOiEwfSkscyhnLCJuZXh0IiwoZnVuY3Rpb24oKXt2YXIgdD10aGlzO2lmKCJvYmplY3QiIT09aCh0KSl0aHJvdyBuZXcgVHlwZUVycm9yKCJNZXRob2QgJU1hcEl0ZXJhdG9yUHJvdG90eXBlJS5uZXh0IGNhbGxlZCBvbiBpbmNvbXBhdGlibGUgcmVjZWl2ZXIgIitPYmplY3QucHJvdG90eXBlLnRvU3RyaW5nLmNhbGwodCkpO2lmKCF0LmlzTWFwSXRlcmF0b3IpdGhyb3cgbmV3IFR5cGVFcnJvcigiTWV0aG9kICVNYXBJdGVyYXRvclByb3RvdHlwZSUubmV4dCBjYWxsZWQgb24gaW5jb21wYXRpYmxlIHJlY2VpdmVyICIrT2JqZWN0LnByb3RvdHlwZS50b1N0cmluZy5jYWxsKHQpKTt2YXIgcj10WyJbW01hcF1dIl0sbj10WyJbW01hcE5leHRJbmRleF1dIl0saT10WyJbW01hcEl0ZXJhdGlvbktpbmRdXSJdO2lmKHI9PT1lKXJldHVybiBkKGUsITApO2lmKCFyLl9lczZNYXApdGhyb3cgbmV3IEVycm9yKE9iamVjdC5wcm90b3R5cGUudG9TdHJpbmcuY2FsbChyKSsiIGhhcyBhIFtbTWFwRGF0YV1dIGludGVybmFsIHNsb3QuIik7Zm9yKHZhciBvPXIuX2tleXMubGVuZ3RoO248bzspe3ZhciBzPU9iamVjdC5jcmVhdGUobnVsbCk7aWYoc1siW1tLZXldXSJdPXIuX2tleXNbbl0sc1siW1tWYWx1ZV1dIl09ci5fdmFsdWVzW25dLG4rPTEsdFsiW1tNYXBOZXh0SW5kZXhdXSJdPW4sc1siW1tLZXldXSJdIT09Zil7aWYoImtleSI9PT1pKXZhciBhPXNbIltbS2V5XV0iXTtlbHNlIGlmKCJ2YWx1ZSI9PT1pKWE9c1siW1tWYWx1ZV1dIl07ZWxzZXtpZigia2V5K3ZhbHVlIiE9PWkpdGhyb3cgbmV3IEVycm9yO2E9W3NbIltbS2V5XV0iXSxzWyJbW1ZhbHVlXV0iXV19cmV0dXJuIGQoYSwhMSl9fXJldHVybiB0WyJbW01hcF1dIl09ZSxkKGUsITApfSkpLHMoZyxTeW1ib2wuaXRlcmF0b3IsKGZ1bmN0aW9uKCl7cmV0dXJuIHRoaXN9KSk7dHJ5e3ModCwiTWFwIixiKX1jYXRjaChlKXt0Lk1hcD1ifX0odCksZnVuY3Rpb24odCl7ZnVuY3Rpb24gcih0LGUpe2lmKCJvYmplY3QiIT10eXBlb2YgdCl0aHJvdyBuZXcgVHlwZUVycm9yKCJjcmVhdGVTZXRJdGVyYXRvciBjYWxsZWQgb24gaW5jb21wYXRpYmxlIHJlY2VpdmVyICIrT2JqZWN0LnByb3RvdHlwZS50b1N0cmluZy5jYWxsKHQpKTtpZighMCE9PXQuX2VzNlNldCl0aHJvdyBuZXcgVHlwZUVycm9yKCJjcmVhdGVTZXRJdGVyYXRvciBjYWxsZWQgb24gaW5jb21wYXRpYmxlIHJlY2VpdmVyICIrT2JqZWN0LnByb3RvdHlwZS50b1N0cmluZy5jYWxsKHQpKTt2YXIgcj1PYmplY3QuY3JlYXRlKGwpO3JldHVybiBPYmplY3QuZGVmaW5lUHJvcGVydHkociwiW1tJdGVyYXRlZFNldF1dIix7Y29uZmlndXJhYmxlOiEwLGVudW1lcmFibGU6ITEsd3JpdGFibGU6ITAsdmFsdWU6dH0pLE9iamVjdC5kZWZpbmVQcm9wZXJ0eShyLCJbW1NldE5leHRJbmRleF1dIix7Y29uZmlndXJhYmxlOiEwLGVudW1lcmFibGU6ITEsd3JpdGFibGU6ITAsdmFsdWU6MH0pLE9iamVjdC5kZWZpbmVQcm9wZXJ0eShyLCJbW1NldEl0ZXJhdGlvbktpbmRdXSIse2NvbmZpZ3VyYWJsZTohMCxlbnVtZXJhYmxlOiExLHdyaXRhYmxlOiEwLHZhbHVlOmV9KSxyfXZhciBuPWZ1bmN0aW9uKCl7dHJ5e3ZhciB0PXt9O3JldHVybiBPYmplY3QuZGVmaW5lUHJvcGVydHkodCwidCIse2NvbmZpZ3VyYWJsZTohMCxlbnVtZXJhYmxlOiExLGdldDpmdW5jdGlvbigpe3JldHVybiEwfSxzZXQ6ZX0pLCEhdC50fWNhdGNoKHQpe3JldHVybiExfX0oKSxpPVN5bWJvbCgidW5kZWYiKSxvPWZ1bmN0aW9uIHQoKXtpZighKHRoaXMgaW5zdGFuY2VvZiB0KSl0aHJvdyBuZXcgVHlwZUVycm9yKCdDb25zdHJ1Y3RvciBTZXQgcmVxdWlyZXMgIm5ldyInKTt2YXIgcj15KHRoaXMsdC5wcm90b3R5cGUse192YWx1ZXM6W10sX3NpemU6MCxfZXM2U2V0OiEwfSk7bnx8T2JqZWN0LmRlZmluZVByb3BlcnR5KHIsInNpemUiLHtjb25maWd1cmFibGU6ITAsZW51bWVyYWJsZTohMSx3cml0YWJsZTohMCx2YWx1ZTowfSk7dmFyIGk9YXJndW1lbnRzLmxlbmd0aD4wP2FyZ3VtZW50c1swXTplO2lmKG51bGw9PT1pfHxpPT09ZSlyZXR1cm4gcjt2YXIgbz1yLmFkZDtpZighYyhvKSl0aHJvdyBuZXcgVHlwZUVycm9yKCJTZXQucHJvdG90eXBlLmFkZCBpcyBub3QgYSBmdW5jdGlvbiIpO3RyeXtmb3IodmFyIHM9UChpKTs7KXt2YXIgYT1fKHMpO2lmKCExPT09YSlyZXR1cm4gcjt2YXIgbD13KGEpO3RyeXtvLmNhbGwocixsKX1jYXRjaCh0KXtyZXR1cm4gdihzLHQpfX19Y2F0Y2godCl7aWYoIUFycmF5LmlzQXJyYXkoaSkmJiJbb2JqZWN0IEFyZ3VtZW50c10iIT09T2JqZWN0LnByb3RvdHlwZS50b1N0cmluZy5jYWxsKGkpJiYhaS5jYWxsZWUpdGhyb3cgdDt2YXIgdSxwPWkubGVuZ3RoO2Zvcih1PTA7dTxwO3UrKylvLmNhbGwocixpW3VdKX1yZXR1cm4gcn07T2JqZWN0LmRlZmluZVByb3BlcnR5KG8sInByb3RvdHlwZSIse2NvbmZpZ3VyYWJsZTohMSxlbnVtZXJhYmxlOiExLHdyaXRhYmxlOiExLHZhbHVlOnt9fSksbj9PYmplY3QuZGVmaW5lUHJvcGVydHkobyxTeW1ib2wuc3BlY2llcyx7Y29uZmlndXJhYmxlOiEwLGVudW1lcmFibGU6ITEsZ2V0OmZ1bmN0aW9uKCl7cmV0dXJuIHRoaXN9LHNldDplfSk6cyhvLFN5bWJvbC5zcGVjaWVzLG8pLHMoby5wcm90b3R5cGUsImFkZCIsKGZ1bmN0aW9uKHQpe3ZhciBlPXRoaXM7aWYoIm9iamVjdCIhPXR5cGVvZiBlKXRocm93IG5ldyBUeXBlRXJyb3IoIk1ldGhvZCBTZXQucHJvdG90eXBlLmFkZCBjYWxsZWQgb24gaW5jb21wYXRpYmxlIHJlY2VpdmVyICIrT2JqZWN0LnByb3RvdHlwZS50b1N0cmluZy5jYWxsKGUpKTtpZighMCE9PWUuX2VzNlNldCl0aHJvdyBuZXcgVHlwZUVycm9yKCJNZXRob2QgU2V0LnByb3RvdHlwZS5hZGQgY2FsbGVkIG9uIGluY29tcGF0aWJsZSByZWNlaXZlciAiK09iamVjdC5wcm90b3R5cGUudG9TdHJpbmcuY2FsbChlKSk7Zm9yKHZhciByPWUuX3ZhbHVlcyxvPTA7bzxyLmxlbmd0aDtvKyspe3ZhciBzPXJbb107aWYocyE9PWkmJlMocyx0KSlyZXR1cm4gZX1yZXR1cm4gMD09PXQmJjEvdD09LTEvMCYmKHQ9MCksZS5fdmFsdWVzLnB1c2godCksdGhpcy5fc2l6ZT0rK3RoaXMuX3NpemUsbnx8KHRoaXMuc2l6ZT10aGlzLl9zaXplKSxlfSkpLHMoby5wcm90b3R5cGUsImNsZWFyIiwoZnVuY3Rpb24oKXt2YXIgdD10aGlzO2lmKCJvYmplY3QiIT10eXBlb2YgdCl0aHJvdyBuZXcgVHlwZUVycm9yKCJNZXRob2QgU2V0LnByb3RvdHlwZS5jbGVhciBjYWxsZWQgb24gaW5jb21wYXRpYmxlIHJlY2VpdmVyICIrT2JqZWN0LnByb3RvdHlwZS50b1N0cmluZy5jYWxsKHQpKTtpZighMCE9PXQuX2VzNlNldCl0aHJvdyBuZXcgVHlwZUVycm9yKCJNZXRob2QgU2V0LnByb3RvdHlwZS5jbGVhciBjYWxsZWQgb24gaW5jb21wYXRpYmxlIHJlY2VpdmVyICIrT2JqZWN0LnByb3RvdHlwZS50b1N0cmluZy5jYWxsKHQpKTtmb3IodmFyIHI9dC5fdmFsdWVzLG89MDtvPHIubGVuZ3RoO28rKylyW29dPWk7cmV0dXJuIHRoaXMuX3NpemU9MCxufHwodGhpcy5zaXplPXRoaXMuX3NpemUpLGV9KSkscyhvLnByb3RvdHlwZSwiY29uc3RydWN0b3IiLG8pLHMoby5wcm90b3R5cGUsImRlbGV0ZSIsKGZ1bmN0aW9uKHQpe3ZhciBlPXRoaXM7aWYoIm9iamVjdCIhPXR5cGVvZiBlKXRocm93IG5ldyBUeXBlRXJyb3IoIk1ldGhvZCBTZXQucHJvdG90eXBlLmRlbGV0ZSBjYWxsZWQgb24gaW5jb21wYXRpYmxlIHJlY2VpdmVyICIrT2JqZWN0LnByb3RvdHlwZS50b1N0cmluZy5jYWxsKGUpKTtpZighMCE9PWUuX2VzNlNldCl0aHJvdyBuZXcgVHlwZUVycm9yKCJNZXRob2QgU2V0LnByb3RvdHlwZS5kZWxldGUgY2FsbGVkIG9uIGluY29tcGF0aWJsZSByZWNlaXZlciAiK09iamVjdC5wcm90b3R5cGUudG9TdHJpbmcuY2FsbChlKSk7Zm9yKHZhciByPWUuX3ZhbHVlcyxvPTA7bzxyLmxlbmd0aDtvKyspe3ZhciBzPXJbb107aWYocyE9PWkmJlMocyx0KSlyZXR1cm4gcltvXT1pLHRoaXMuX3NpemU9LS10aGlzLl9zaXplLG58fCh0aGlzLnNpemU9dGhpcy5fc2l6ZSksITB9cmV0dXJuITF9KSkscyhvLnByb3RvdHlwZSwiZW50cmllcyIsKGZ1bmN0aW9uKCl7cmV0dXJuIHIodGhpcywia2V5K3ZhbHVlIil9KSkscyhvLnByb3RvdHlwZSwiZm9yRWFjaCIsKGZ1bmN0aW9uKHQpe3ZhciByPXRoaXM7aWYoIm9iamVjdCIhPXR5cGVvZiByKXRocm93IG5ldyBUeXBlRXJyb3IoIk1ldGhvZCBTZXQucHJvdG90eXBlLmZvckVhY2ggY2FsbGVkIG9uIGluY29tcGF0aWJsZSByZWNlaXZlciAiK09iamVjdC5wcm90b3R5cGUudG9TdHJpbmcuY2FsbChyKSk7aWYoITAhPT1yLl9lczZTZXQpdGhyb3cgbmV3IFR5cGVFcnJvcigiTWV0aG9kIFNldC5wcm90b3R5cGUuZm9yRWFjaCBjYWxsZWQgb24gaW5jb21wYXRpYmxlIHJlY2VpdmVyICIrT2JqZWN0LnByb3RvdHlwZS50b1N0cmluZy5jYWxsKHIpKTtpZighYyh0KSl0aHJvdyBuZXcgVHlwZUVycm9yKE9iamVjdC5wcm90b3R5cGUudG9TdHJpbmcuY2FsbCh0KSsiIGlzIG5vdCBhIGZ1bmN0aW9uLiIpO2lmKGFyZ3VtZW50c1sxXSl2YXIgbj1hcmd1bWVudHNbMV07Zm9yKHZhciBvPXIuX3ZhbHVlcyxzPTA7czxvLmxlbmd0aDtzKyspe3ZhciBhPW9bc107YSE9PWkmJnQuY2FsbChuLGEsYSxyKX1yZXR1cm4gZX0pKSxzKG8ucHJvdG90eXBlLCJoYXMiLChmdW5jdGlvbih0KXt2YXIgZT10aGlzO2lmKCJvYmplY3QiIT10eXBlb2YgZSl0aHJvdyBuZXcgVHlwZUVycm9yKCJNZXRob2QgU2V0LnByb3RvdHlwZS5mb3JFYWNoIGNhbGxlZCBvbiBpbmNvbXBhdGlibGUgcmVjZWl2ZXIgIitPYmplY3QucHJvdG90eXBlLnRvU3RyaW5nLmNhbGwoZSkpO2lmKCEwIT09ZS5fZXM2U2V0KXRocm93IG5ldyBUeXBlRXJyb3IoIk1ldGhvZCBTZXQucHJvdG90eXBlLmZvckVhY2ggY2FsbGVkIG9uIGluY29tcGF0aWJsZSByZWNlaXZlciAiK09iamVjdC5wcm90b3R5cGUudG9TdHJpbmcuY2FsbChlKSk7Zm9yKHZhciByPWUuX3ZhbHVlcyxuPTA7bjxyLmxlbmd0aDtuKyspe3ZhciBvPXJbbl07aWYobyE9PWkmJlMobyx0KSlyZXR1cm4hMH1yZXR1cm4hMX0pKTt2YXIgYT1mdW5jdGlvbigpe3JldHVybiByKHRoaXMsInZhbHVlIil9O3Moby5wcm90b3R5cGUsInZhbHVlcyIsYSkscyhvLnByb3RvdHlwZSwia2V5cyIsYSksbiYmT2JqZWN0LmRlZmluZVByb3BlcnR5KG8ucHJvdG90eXBlLCJzaXplIix7Y29uZmlndXJhYmxlOiEwLGVudW1lcmFibGU6ITEsZ2V0OmZ1bmN0aW9uKCl7dmFyIHQ9dGhpcztpZigib2JqZWN0IiE9dHlwZW9mIHQpdGhyb3cgbmV3IFR5cGVFcnJvcigiTWV0aG9kIFNldC5wcm90b3R5cGUuc2l6ZSBjYWxsZWQgb24gaW5jb21wYXRpYmxlIHJlY2VpdmVyICIrT2JqZWN0LnByb3RvdHlwZS50b1N0cmluZy5jYWxsKHQpKTtpZighMCE9PXQuX2VzNlNldCl0aHJvdyBuZXcgVHlwZUVycm9yKCJNZXRob2QgU2V0LnByb3RvdHlwZS5zaXplIGNhbGxlZCBvbiBpbmNvbXBhdGlibGUgcmVjZWl2ZXIgIitPYmplY3QucHJvdG90eXBlLnRvU3RyaW5nLmNhbGwodCkpO2Zvcih2YXIgZT10Ll92YWx1ZXMscj0wLG49MDtuPGUubGVuZ3RoO24rKyllW25dIT09aSYmKHIrPTEpO3JldHVybiByfSxzZXQ6ZX0pLHMoby5wcm90b3R5cGUsU3ltYm9sLml0ZXJhdG9yLGEpLCJuYW1lImluIG98fE9iamVjdC5kZWZpbmVQcm9wZXJ0eShvLCJuYW1lIix7Y29uZmlndXJhYmxlOiEwLGVudW1lcmFibGU6ITEsd3JpdGFibGU6ITEsdmFsdWU6IlNldCJ9KTt2YXIgbD17fTtPYmplY3QuZGVmaW5lUHJvcGVydHkobCwiaXNTZXRJdGVyYXRvciIse2NvbmZpZ3VyYWJsZTohMSxlbnVtZXJhYmxlOiExLHdyaXRhYmxlOiExLHZhbHVlOiEwfSkscyhsLCJuZXh0IiwoZnVuY3Rpb24oKXt2YXIgdD10aGlzO2lmKCJvYmplY3QiIT10eXBlb2YgdCl0aHJvdyBuZXcgVHlwZUVycm9yKCJNZXRob2QgJVNldEl0ZXJhdG9yUHJvdG90eXBlJS5uZXh0IGNhbGxlZCBvbiBpbmNvbXBhdGlibGUgcmVjZWl2ZXIgIitPYmplY3QucHJvdG90eXBlLnRvU3RyaW5nLmNhbGwodCkpO2lmKCF0LmlzU2V0SXRlcmF0b3IpdGhyb3cgbmV3IFR5cGVFcnJvcigiTWV0aG9kICVTZXRJdGVyYXRvclByb3RvdHlwZSUubmV4dCBjYWxsZWQgb24gaW5jb21wYXRpYmxlIHJlY2VpdmVyICIrT2JqZWN0LnByb3RvdHlwZS50b1N0cmluZy5jYWxsKHQpKTt2YXIgcj10WyJbW0l0ZXJhdGVkU2V0XV0iXSxuPXRbIltbU2V0TmV4dEluZGV4XV0iXSxvPXRbIltbU2V0SXRlcmF0aW9uS2luZF1dIl07aWYocj09PWUpcmV0dXJuIGQoZSwhMCk7aWYoIXIuX2VzNlNldCl0aHJvdyBuZXcgRXJyb3IoT2JqZWN0LnByb3RvdHlwZS50b1N0cmluZy5jYWxsKHIpKyIgZG9lcyBub3QgaGF2ZSBbW1NldERhdGFdXSBpbnRlcm5hbCBzbG90LiIpO2Zvcih2YXIgcz1yLl92YWx1ZXMsYT1zLmxlbmd0aDtuPGE7KXt2YXIgYz1zW25dO2lmKG4rPTEsdFsiW1tTZXROZXh0SW5kZXhdXSJdPW4sYyE9PWkpcmV0dXJuIGQoImtleSt2YWx1ZSI9PT1vP1tjLGNdOmMsITEpfXJldHVybiB0WyJbW0l0ZXJhdGVkU2V0XV0iXT1lLGQoZSwhMCl9KSkscyhsLFN5bWJvbC5pdGVyYXRvciwoZnVuY3Rpb24oKXtyZXR1cm4gdGhpc30pKTt0cnl7cyh0LCJTZXQiLG8pfWNhdGNoKGUpe3QuU2V0PW99fSh0KSxmdW5jdGlvbigpe2Z1bmN0aW9uIHQodCl7cmV0dXJuInN0cmluZyI9PXR5cGVvZiB0fHwib2JqZWN0Ij09dHlwZW9mIHQmJiJbb2JqZWN0IFN0cmluZ10iPT09aS5jYWxsKHQpfXZhciBpPU9iamVjdC5wcm90b3R5cGUudG9TdHJpbmcsdT1TdHJpbmcucHJvdG90eXBlLm1hdGNoO3MoQXJyYXksImZyb20iLChmdW5jdGlvbihpKXt2YXIgcz10aGlzLGg9YXJndW1lbnRzLmxlbmd0aD4xP2FyZ3VtZW50c1sxXTplO2lmKGg9PT1lKXZhciBmPSExO2Vsc2V7aWYoITE9PT1jKGgpKXRocm93IG5ldyBUeXBlRXJyb3IoT2JqZWN0LnByb3RvdHlwZS50b1N0cmluZy5jYWxsKGgpKyIgaXMgbm90IGEgZnVuY3Rpb24uIik7dmFyIGQ9YXJndW1lbnRzLmxlbmd0aD4yP2FyZ3VtZW50c1syXTplO2lmKGQhPT1lKXZhciB5PWQ7ZWxzZSB5PWU7Zj0hMH12YXIgbT1wKGksU3ltYm9sLml0ZXJhdG9yKTtpZihtIT09ZSl7aWYoYihzKSl2YXIgUz1nKHMpO2Vsc2UgUz1yKDApO2Zvcih2YXIgRT1QKGksbSksaj0wOzspe2lmKGo+PU1hdGgucG93KDIsNTMpLTEpcmV0dXJuIHYoRSxuZXcgVHlwZUVycm9yKCJJdGVyYXRpb24gY291bnQgY2FuIG5vdCBiZSBncmVhdGVyIHRoYW4gb3IgZXF1YWwgOTAwNzE5OTI1NDc0MDk5MS4iKSk7dmFyIEE9VChqKSxOPV8oRSk7aWYoITE9PT1OKXJldHVybiBTLmxlbmd0aD1qLFM7dmFyIEM9dyhOKTtpZihmKXRyeXt2YXIgST1uKGgseSxbQyxqXSl9Y2F0Y2godCl7cmV0dXJuIHYoRSx0KX1lbHNlIEk9Qzt0cnl7byhTLEEsSSl9Y2F0Y2godCl7cmV0dXJuIHYoRSx0KX1qKz0xfX1pZih0KGkpKXZhciBMPXUuY2FsbChpLC9bXHVEODAwLVx1REJGRl1bXHVEQzAwLVx1REZGRl0/fFteXHVEODAwLVx1REZGRl18Li9nKXx8W107ZWxzZSBMPWwoaSk7dmFyIE09TyhhKEwsImxlbmd0aCIpKTtmb3IoUz1iKHMpP2cocyxbTV0pOnIoTSksaj0wO2o8TTspe3ZhciBEPWEoTCxBPVQoaikpO28oUyxBLEk9ITA9PT1mP24oaCx5LFtELGpdKTpEKSxqKz0xfXJldHVybiBTLmxlbmd0aD1NLFN9KSl9KCl9KCJvYmplY3QiPT10eXBlb2Ygd2luZG93JiZ3aW5kb3d8fCJvYmplY3QiPT10eXBlb2Ygc2VsZiYmc2VsZnx8Im9iamVjdCI9PXR5cGVvZiBnbG9iYWwmJmdsb2JhbHx8e30pLGZ1bmN0aW9uKHQsZSl7ZnVuY3Rpb24gcih0KXtpZigxL3Q9PS0xLzAmJih0PTApLHQ+TWF0aC5wb3coMiwzMiktMSl0aHJvdyBuZXcgUmFuZ2VFcnJvcigiSW52YWxpZCBhcnJheSBsZW5ndGgiKTt2YXIgZT1bXTtyZXR1cm4gZS5sZW5ndGg9dCxlfWZ1bmN0aW9uIG4odCxlKXt2YXIgcj1hcmd1bWVudHMubGVuZ3RoPjI/YXJndW1lbnRzWzJdOltdO2lmKCExPT09Yyh0KSl0aHJvdyBuZXcgVHlwZUVycm9yKE9iamVjdC5wcm90b3R5cGUudG9TdHJpbmcuY2FsbCh0KSsiaXMgbm90IGEgZnVuY3Rpb24uIik7cmV0dXJuIHQuYXBwbHkoZSxyKX1mdW5jdGlvbiBpKHQsZSxyKXt2YXIgbj1mdW5jdGlvbih0LGUscil7dmFyIG49e3ZhbHVlOnIsd3JpdGFibGU6ITAsZW51bWVyYWJsZTohMCxjb25maWd1cmFibGU6ITB9O3RyeXtyZXR1cm4gT2JqZWN0LmRlZmluZVByb3BlcnR5KHQsZSxuKSwhMH1jYXRjaCh0KXtyZXR1cm4hMX19KHQsZSxyKTtpZighbil0aHJvdyBuZXcgVHlwZUVycm9yKCJDYW5ub3QgYXNzaWduIHZhbHVlIGAiK09iamVjdC5wcm90b3R5cGUudG9TdHJpbmcuY2FsbChyKSsiYCB0byBwcm9wZXJ0eSBgIitPYmplY3QucHJvdG90eXBlLnRvU3RyaW5nLmNhbGwoZSkrImAgb24gb2JqZWN0IGAiK09iamVjdC5wcm90b3R5cGUudG9TdHJpbmcuY2FsbCh0KSsiYCIpO3JldHVybiBufWZ1bmN0aW9uIG8odCxlKXtyZXR1cm4gdFtlXX1mdW5jdGlvbiBzKHQsZSl7cmV0dXJuIGUgaW4gdH1mdW5jdGlvbiBhKHQpe3JldHVybiJbb2JqZWN0IEFycmF5XSI9PT1PYmplY3QucHJvdG90eXBlLnRvU3RyaW5nLmNhbGwodCl9ZnVuY3Rpb24gYyh0KXtyZXR1cm4iZnVuY3Rpb24iPT10eXBlb2YgdH1mdW5jdGlvbiBsKHQpe2lmKG51bGw9PT10fHx0PT09ZSl0aHJvdyBUeXBlRXJyb3IoKTtyZXR1cm4gT2JqZWN0KHQpfWZ1bmN0aW9uIHUodCxyKXt2YXIgbj1mdW5jdGlvbih0LGUpe3JldHVybiBsKHQpW2VdfSh0LHIpO2lmKG51bGw9PT1ufHxuPT09ZSlyZXR1cm4gZTtpZighMT09PWMobikpdGhyb3cgbmV3IFR5cGVFcnJvcigiTWV0aG9kIG5vdCBjYWxsYWJsZTogIityKTtyZXR1cm4gbn1mdW5jdGlvbiBwKGUpe3N3aXRjaCh0eXBlb2YgZSl7Y2FzZSJ1bmRlZmluZWQiOnJldHVybiJ1bmRlZmluZWQiO2Nhc2UiYm9vbGVhbiI6cmV0dXJuImJvb2xlYW4iO2Nhc2UibnVtYmVyIjpyZXR1cm4ibnVtYmVyIjtjYXNlInN0cmluZyI6cmV0dXJuInN0cmluZyI7Y2FzZSJzeW1ib2wiOnJldHVybiJzeW1ib2wiO2RlZmF1bHQ6cmV0dXJuIG51bGw9PT1lPyJudWxsIjoiU3ltYm9sImluIHQmJihlIGluc3RhbmNlb2YgdC5TeW1ib2x8fGUuY29uc3RydWN0b3I9PT10LlN5bWJvbCk/InN5bWJvbCI6Im9iamVjdCJ9fWZ1bmN0aW9uIGgodCxlKXt2YXIgcj1hcmd1bWVudHNbMl18fHt9LG49ZnVuY3Rpb24odCxlKXt2YXIgcj1vKHQsInByb3RvdHlwZSIpO3JldHVybiJvYmplY3QiIT09cChyKSYmKHI9ZSkscn0odCxlKSxpPU9iamVjdC5jcmVhdGUobik7Zm9yKHZhciBzIGluIHIpT2JqZWN0LnByb3RvdHlwZS5oYXNPd25Qcm9wZXJ0eS5jYWxsKHIscykmJk9iamVjdC5kZWZpbmVQcm9wZXJ0eShpLHMse2NvbmZpZ3VyYWJsZTohMCxlbnVtZXJhYmxlOiExLHdyaXRhYmxlOiEwLHZhbHVlOnJbc119KTtyZXR1cm4gaX1mdW5jdGlvbiBmKHQpe3JldHVybiJvYmplY3QiPT09cCh0KSYmImZ1bmN0aW9uIj09dHlwZW9mIHQmJiEhdC5wcm90b3R5cGV9ZnVuY3Rpb24gZChpLHMpe2lmKDA9PT1zJiYxL3M9PS0xLzAmJihzPTApLCExPT09YShpKSlyZXR1cm4gcihzKTt2YXIgYz1vKGksImNvbnN0cnVjdG9yIik7aWYoIm9iamVjdCI9PT1wKGMpJiZudWxsPT09KGM9IlN5bWJvbCJpbiB0JiYic3BlY2llcyJpbiB0LlN5bWJvbD9vKGMsdC5TeW1ib2wuc3BlY2llcyk6ZSkmJihjPWUpLGM9PT1lKXJldHVybiByKHMpO2lmKCFmKGMpKXRocm93IG5ldyBUeXBlRXJyb3IoIkMgbXVzdCBiZSBhIGNvbnN0cnVjdG9yIik7cmV0dXJuIGZ1bmN0aW9uKHQpe3ZhciBlPWFyZ3VtZW50cy5sZW5ndGg+Mj9hcmd1bWVudHNbMl06dCxyPWFyZ3VtZW50cy5sZW5ndGg+MT9hcmd1bWVudHNbMV06W107aWYoIWYodCkpdGhyb3cgbmV3IFR5cGVFcnJvcigiRiBtdXN0IGJlIGEgY29uc3RydWN0b3IuIik7aWYoIWYoZSkpdGhyb3cgbmV3IFR5cGVFcnJvcigibmV3VGFyZ2V0IG11c3QgYmUgYSBjb25zdHJ1Y3Rvci4iKTtyZXR1cm4gZT09PXQ/bmV3KEZ1bmN0aW9uLnByb3RvdHlwZS5iaW5kLmFwcGx5KHQsW251bGxdLmNvbmNhdChyKSkpOm4odCxoKGUsT2JqZWN0LnByb3RvdHlwZSkscil9KGMsW3NdKX1mdW5jdGlvbiB5KHQpe2lmKCJzeW1ib2wiPT09cCh0KSl0aHJvdyBuZXcgVHlwZUVycm9yKCJDYW5ub3QgY29udmVydCBhIFN5bWJvbCB2YWx1ZSB0byBhIG51bWJlciIpO3ZhciBlPU51bWJlcih0KTtyZXR1cm4gaXNOYU4oZSk/MDoxL2U9PTEvMHx8MS9lPT0tMS8wfHxlPT09MS8wfHxlPT09LTEvMD9lOihlPDA/LTE6MSkqTWF0aC5mbG9vcihNYXRoLmFicyhlKSl9ZnVuY3Rpb24gYih0KXt2YXIgZT15KHQpO3JldHVybiBlPD0wPzA6TWF0aC5taW4oZSxNYXRoLnBvdygyLDUzKS0xKX1mdW5jdGlvbiBnKHIpe3ZhciBpPWFyZ3VtZW50cy5sZW5ndGg+MT9hcmd1bWVudHNbMV06ZTtpZigib2JqZWN0Ij09PXAocikpe2lmKGFyZ3VtZW50cy5sZW5ndGg8Mil2YXIgcz0iZGVmYXVsdCI7ZWxzZSBpPT09U3RyaW5nP3M9InN0cmluZyI6aT09PU51bWJlciYmKHM9Im51bWJlciIpO3ZhciBhPSJmdW5jdGlvbiI9PXR5cGVvZiB0LlN5bWJvbCYmInN5bWJvbCI9PXR5cGVvZiB0LlN5bWJvbC50b1ByaW1pdGl2ZT91KHIsdC5TeW1ib2wudG9QcmltaXRpdmUpOmU7aWYoYSE9PWUpe3ZhciBsPW4oYSxyLFtzXSk7aWYoIm9iamVjdCIhPT1wKGwpKXJldHVybiBsO3Rocm93IG5ldyBUeXBlRXJyb3IoIkNhbm5vdCBjb252ZXJ0IGV4b3RpYyBvYmplY3QgdG8gcHJpbWl0aXZlLiIpfXJldHVybiJkZWZhdWx0Ij09PXMmJihzPSJudW1iZXIiKSxmdW5jdGlvbih0LGUpe2lmKCJzdHJpbmciPT09ZSl2YXIgcj1bInRvU3RyaW5nIiwidmFsdWVPZiJdO2Vsc2Ugcj1bInZhbHVlT2YiLCJ0b1N0cmluZyJdO2Zvcih2YXIgaT0wO2k8ci5sZW5ndGg7KytpKXt2YXIgcz1vKHQscltpXSk7aWYoYyhzKSl7dmFyIGE9bihzLHQpO2lmKCJvYmplY3QiIT09cChhKSlyZXR1cm4gYX19dGhyb3cgbmV3IFR5cGVFcnJvcigiQ2Fubm90IGNvbnZlcnQgdG8gcHJpbWl0aXZlLiIpfShyLHMpfXJldHVybiByfWZ1bmN0aW9uIHYodCl7c3dpdGNoKHAodCkpe2Nhc2Uic3ltYm9sIjp0aHJvdyBuZXcgVHlwZUVycm9yKCJDYW5ub3QgY29udmVydCBhIFN5bWJvbCB2YWx1ZSB0byBhIHN0cmluZyIpO2Nhc2Uib2JqZWN0IjpyZXR1cm4gdihnKHQsU3RyaW5nKSk7ZGVmYXVsdDpyZXR1cm4gU3RyaW5nKHQpfX1mdW5jdGlvbiBtKHQsZSxyLGMsbCl7Zm9yKHZhciB1PWFyZ3VtZW50cyxwPWFyZ3VtZW50c1s1XSxoPWFyZ3VtZW50c1s2XSxmPWMsZD0wO2Q8cjspe3ZhciB5PXYoZCk7aWYoITA9PT1zKGUseSkpe3ZhciBnPW8oZSx5KTs1IGluIHUmJihnPW4ocCxoLFtnLGQsZV0pKTt2YXIgXz0hMTtpZihsPjAmJihfPWEoZykpLCEwPT09XylmPW0odCxnLGIobyhnLCJsZW5ndGgiKSksZixsLTEpO2Vsc2V7aWYoZj49TWF0aC5wb3coMiw1MyktMSl0aHJvdyBuZXcgVHlwZUVycm9yKCJ0YXJnZXRJbmRleCBpcyBncmVhdGVyIHRoYW4gb3IgZXF1YWwgdG8gMl41My0xIik7aSh0LHYoZiksZyksZis9MX19ZCs9MX1yZXR1cm4gZn12YXIgXyx3LFMsRTtfPUFycmF5LnByb3RvdHlwZSx3PSJmbGF0IixTPWZ1bmN0aW9uKCl7dmFyIHQ9YXJndW1lbnRzWzBdLGU9bCh0aGlzKSxyPWIobyhlLCJsZW5ndGgiKSksbj0xO3ZvaWQgMCE9PXQmJihuPXkodCkpO3ZhciBpPWQoZSwwKTtyZXR1cm4gbShpLGUsciwwLG4pLGl9LEU9e3ZhbHVlOlMsd3JpdGFibGU6ITAsZW51bWVyYWJsZTohMSxjb25maWd1cmFibGU6ITB9LE9iamVjdC5kZWZpbmVQcm9wZXJ0eShfLHcsRSl9KCJvYmplY3QiPT10eXBlb2Ygd2luZG93JiZ3aW5kb3d8fCJvYmplY3QiPT10eXBlb2Ygc2VsZiYmc2VsZnx8Im9iamVjdCI9PXR5cGVvZiBnbG9iYWwmJmdsb2JhbHx8e30pLGZ1bmN0aW9uKHQsZSl7ZnVuY3Rpb24gcih0LGUpe3ZhciByPWFyZ3VtZW50cy5sZW5ndGg+Mj9hcmd1bWVudHNbMl06W107aWYoITE9PT1vKHQpKXRocm93IG5ldyBUeXBlRXJyb3IoT2JqZWN0LnByb3RvdHlwZS50b1N0cmluZy5jYWxsKHQpKyJpcyBub3QgYSBmdW5jdGlvbi4iKTtyZXR1cm4gdC5hcHBseShlLHIpfWZ1bmN0aW9uIG4odCxlLHIpe3ZhciBuPXt2YWx1ZTpyLHdyaXRhYmxlOiEwLGVudW1lcmFibGU6ITEsY29uZmlndXJhYmxlOiEwfTtPYmplY3QuZGVmaW5lUHJvcGVydHkodCxlLG4pfWZ1bmN0aW9uIGkodCxlKXtyZXR1cm4gdFtlXX1mdW5jdGlvbiBvKHQpe3JldHVybiJmdW5jdGlvbiI9PXR5cGVvZiB0fWZ1bmN0aW9uIHModCl7aWYobnVsbD09PXR8fHQ9PT1lKXRocm93IFR5cGVFcnJvcigpO3JldHVybiBPYmplY3QodCl9ZnVuY3Rpb24gYSh0LHIpe3ZhciBuPWZ1bmN0aW9uKHQsZSl7cmV0dXJuIHModClbZV19KHQscik7aWYobnVsbD09PW58fG49PT1lKXJldHVybiBlO2lmKCExPT09byhuKSl0aHJvdyBuZXcgVHlwZUVycm9yKCJNZXRob2Qgbm90IGNhbGxhYmxlOiAiK3IpO3JldHVybiBufWZ1bmN0aW9uIGMoZSl7c3dpdGNoKHR5cGVvZiBlKXtjYXNlInVuZGVmaW5lZCI6cmV0dXJuInVuZGVmaW5lZCI7Y2FzZSJib29sZWFuIjpyZXR1cm4iYm9vbGVhbiI7Y2FzZSJudW1iZXIiOnJldHVybiJudW1iZXIiO2Nhc2Uic3RyaW5nIjpyZXR1cm4ic3RyaW5nIjtjYXNlInN5bWJvbCI6cmV0dXJuInN5bWJvbCI7ZGVmYXVsdDpyZXR1cm4gbnVsbD09PWU/Im51bGwiOiJTeW1ib2wiaW4gdCYmKGUgaW5zdGFuY2VvZiB0LlN5bWJvbHx8ZS5jb25zdHJ1Y3Rvcj09PXQuU3ltYm9sKT8ic3ltYm9sIjoib2JqZWN0In19ZnVuY3Rpb24gbChuKXt2YXIgcz1hcmd1bWVudHMubGVuZ3RoPjE/YXJndW1lbnRzWzFdOmU7aWYoIm9iamVjdCI9PT1jKG4pKXtpZihhcmd1bWVudHMubGVuZ3RoPDIpdmFyIGw9ImRlZmF1bHQiO2Vsc2Ugcz09PVN0cmluZz9sPSJzdHJpbmciOnM9PT1OdW1iZXImJihsPSJudW1iZXIiKTt2YXIgdT0iZnVuY3Rpb24iPT10eXBlb2YgdC5TeW1ib2wmJiJzeW1ib2wiPT10eXBlb2YgdC5TeW1ib2wudG9QcmltaXRpdmU/YShuLHQuU3ltYm9sLnRvUHJpbWl0aXZlKTplO2lmKHUhPT1lKXt2YXIgcD1yKHUsbixbbF0pO2lmKCJvYmplY3QiIT09YyhwKSlyZXR1cm4gcDt0aHJvdyBuZXcgVHlwZUVycm9yKCJDYW5ub3QgY29udmVydCBleG90aWMgb2JqZWN0IHRvIHByaW1pdGl2ZS4iKX1yZXR1cm4iZGVmYXVsdCI9PT1sJiYobD0ibnVtYmVyIiksZnVuY3Rpb24odCxlKXtpZigic3RyaW5nIj09PWUpdmFyIG49WyJ0b1N0cmluZyIsInZhbHVlT2YiXTtlbHNlIG49WyJ2YWx1ZU9mIiwidG9TdHJpbmciXTtmb3IodmFyIHM9MDtzPG4ubGVuZ3RoOysrcyl7dmFyIGE9aSh0LG5bc10pO2lmKG8oYSkpe3ZhciBsPXIoYSx0KTtpZigib2JqZWN0IiE9PWMobCkpcmV0dXJuIGx9fXRocm93IG5ldyBUeXBlRXJyb3IoIkNhbm5vdCBjb252ZXJ0IHRvIHByaW1pdGl2ZS4iKX0obixsKX1yZXR1cm4gbn1mdW5jdGlvbiB1KHQpe3N3aXRjaChjKHQpKXtjYXNlInN5bWJvbCI6dGhyb3cgbmV3IFR5cGVFcnJvcigiQ2Fubm90IGNvbnZlcnQgYSBTeW1ib2wgdmFsdWUgdG8gYSBzdHJpbmciKTtjYXNlIm9iamVjdCI6cmV0dXJuIHUobCh0LFN0cmluZykpO2RlZmF1bHQ6cmV0dXJuIFN0cmluZyh0KX19ZnVuY3Rpb24gcCh0KXt2YXIgZT1sKHQsU3RyaW5nKTtyZXR1cm4ic3ltYm9sIj09PWMoZSk/ZTp1KGUpfXZhciBoLGYsZCx5O24oT2JqZWN0LCJrZXlzIixmdW5jdGlvbigpe2Z1bmN0aW9uIHQoKXt2YXIgdDt0cnl7dD1PYmplY3QuY3JlYXRlKHt9KX1jYXRjaCh0KXtyZXR1cm4hMH1yZXR1cm4gaS5jYWxsKHQsIl9fcHJvdG9fXyIpfXZhciByPU9iamVjdC5wcm90b3R5cGUuaGFzT3duUHJvcGVydHksbj1PYmplY3QucHJvdG90eXBlLnRvU3RyaW5nLGk9T2JqZWN0LnByb3RvdHlwZS5wcm9wZXJ0eUlzRW51bWVyYWJsZSxvPSFpLmNhbGwoe3RvU3RyaW5nOm51bGx9LCJ0b1N0cmluZyIpLHM9aS5jYWxsKChmdW5jdGlvbigpe30pLCJwcm90b3R5cGUiKSxhPVsidG9TdHJpbmciLCJ0b0xvY2FsZVN0cmluZyIsInZhbHVlT2YiLCJoYXNPd25Qcm9wZXJ0eSIsImlzUHJvdG90eXBlT2YiLCJwcm9wZXJ0eUlzRW51bWVyYWJsZSIsImNvbnN0cnVjdG9yIl0sYz1mdW5jdGlvbih0KXt2YXIgZT10LmNvbnN0cnVjdG9yO3JldHVybiBlJiZlLnByb3RvdHlwZT09PXR9LGw9eyRjb25zb2xlOiEwLCRleHRlcm5hbDohMCwkZnJhbWU6ITAsJGZyYW1lRWxlbWVudDohMCwkZnJhbWVzOiEwLCRpbm5lckhlaWdodDohMCwkaW5uZXJXaWR0aDohMCwkb3V0ZXJIZWlnaHQ6ITAsJG91dGVyV2lkdGg6ITAsJHBhZ2VYT2Zmc2V0OiEwLCRwYWdlWU9mZnNldDohMCwkcGFyZW50OiEwLCRzY3JvbGxMZWZ0OiEwLCRzY3JvbGxUb3A6ITAsJHNjcm9sbFg6ITAsJHNjcm9sbFk6ITAsJHNlbGY6ITAsJHdlYmtpdEluZGV4ZWREQjohMCwkd2Via2l0U3RvcmFnZUluZm86ITAsJHdpbmRvdzohMH0sdT1mdW5jdGlvbigpe2lmKCJ1bmRlZmluZWQiPT10eXBlb2Ygd2luZG93KXJldHVybiExO2Zvcih2YXIgdCBpbiB3aW5kb3cpdHJ5e2lmKCFsWyIkIit0XSYmci5jYWxsKHdpbmRvdyx0KSYmbnVsbCE9PXdpbmRvd1t0XSYmIm9iamVjdCI9PXR5cGVvZiB3aW5kb3dbdF0pdHJ5e2Mod2luZG93W3RdKX1jYXRjaCh0KXtyZXR1cm4hMH19Y2F0Y2godCl7cmV0dXJuITB9cmV0dXJuITF9KCkscD1mdW5jdGlvbih0KXtpZigidW5kZWZpbmVkIj09dHlwZW9mIHdpbmRvd3x8IXUpcmV0dXJuIGModCk7dHJ5e3JldHVybiBjKHQpfWNhdGNoKHQpe3JldHVybiExfX07cmV0dXJuIGZ1bmN0aW9uKGkpe3ZhciBjPSJbb2JqZWN0IEZ1bmN0aW9uXSI9PT1uLmNhbGwoaSksbD1mdW5jdGlvbih0KXt2YXIgZT1uLmNhbGwodCkscj0iW29iamVjdCBBcmd1bWVudHNdIj09PWU7cmV0dXJuIHJ8fChyPSJbb2JqZWN0IEFycmF5XSIhPT1lJiZudWxsIT09dCYmIm9iamVjdCI9PXR5cGVvZiB0JiYibnVtYmVyIj09dHlwZW9mIHQubGVuZ3RoJiZ0Lmxlbmd0aD49MCYmIltvYmplY3QgRnVuY3Rpb25dIj09PW4uY2FsbCh0LmNhbGxlZSkpLHJ9KGkpLHU9IltvYmplY3QgU3RyaW5nXSI9PT1uLmNhbGwoaSksaD1bXTtpZihpPT09ZXx8bnVsbD09PWkpdGhyb3cgbmV3IFR5cGVFcnJvcigiQ2Fubm90IGNvbnZlcnQgdW5kZWZpbmVkIG9yIG51bGwgdG8gb2JqZWN0Iik7dmFyIGY9cyYmYztpZih1JiZpLmxlbmd0aD4wJiYhci5jYWxsKGksMCkpZm9yKHZhciBkPTA7ZDxpLmxlbmd0aDsrK2QpaC5wdXNoKFN0cmluZyhkKSk7aWYobCYmaS5sZW5ndGg+MClmb3IodmFyIHk9MDt5PGkubGVuZ3RoOysreSloLnB1c2goU3RyaW5nKHkpKTtlbHNlIGZvcih2YXIgYiBpbiBpKXQoKSYmIl9fcHJvdG9fXyI9PT1ifHxmJiYicHJvdG90eXBlIj09PWJ8fCFyLmNhbGwoaSxiKXx8aC5wdXNoKFN0cmluZyhiKSk7aWYobylmb3IodmFyIGc9cChpKSx2PTA7djxhLmxlbmd0aDsrK3YpZyYmImNvbnN0cnVjdG9yIj09PWFbdl18fCFyLmNhbGwoaSxhW3ZdKXx8aC5wdXNoKGFbdl0pO3JldHVybiBofX0oKSksaD1PYmplY3QuZ2V0T3duUHJvcGVydHlEZXNjcmlwdG9yLGY9ZnVuY3Rpb24oKXt0cnl7cmV0dXJuIDE9PT1PYmplY3QuZGVmaW5lUHJvcGVydHkoZG9jdW1lbnQuY3JlYXRlRWxlbWVudCgiZGl2IiksIm9uZSIse2dldDpmdW5jdGlvbigpe3JldHVybiAxfX0pLm9uZX1jYXRjaCh0KXtyZXR1cm4hMX19LGQ9e30udG9TdHJpbmcseT0iIi5zcGxpdCxuKE9iamVjdCwiZ2V0T3duUHJvcGVydHlEZXNjcmlwdG9yIiwoZnVuY3Rpb24odCxlKXt2YXIgcj1zKHQpO3I9KCJzdHJpbmciPT09YyhyKXx8ciBpbnN0YW5jZW9mIFN0cmluZykmJiJbb2JqZWN0IFN0cmluZ10iPT1kLmNhbGwodCk/eS5jYWxsKHQsIiIpOk9iamVjdCh0KTt2YXIgbj1wKGUpO2lmKGYpdHJ5e3JldHVybiBoKHIsbil9Y2F0Y2godCl7fWlmKGZ1bmN0aW9uKHQsZSl7cmV0dXJuIE9iamVjdC5wcm90b3R5cGUuaGFzT3duUHJvcGVydHkuY2FsbCh0LGUpfShyLG4pKXJldHVybntlbnVtZXJhYmxlOiEwLGNvbmZpZ3VyYWJsZTohMCx3cml0YWJsZTohMCx2YWx1ZTpyW25dfX0pKSxuKE9iamVjdCwiYXNzaWduIiwoZnVuY3Rpb24odCxyKXt2YXIgbj1zKHQpO2lmKDE9PT1hcmd1bWVudHMubGVuZ3RoKXJldHVybiBuO3ZhciBvLGEsYyxsLHU9QXJyYXkucHJvdG90eXBlLnNsaWNlLmNhbGwoYXJndW1lbnRzLDEpO2ZvcihvPTA7bzx1Lmxlbmd0aDtvKyspe3ZhciBwPXVbb107Zm9yKHA9PT1lfHxudWxsPT09cD9jPVtdOihsPSJbb2JqZWN0IFN0cmluZ10iPT09T2JqZWN0LnByb3RvdHlwZS50b1N0cmluZy5jYWxsKHApP1N0cmluZyhwKS5zcGxpdCgiIik6cyhwKSxjPU9iamVjdC5rZXlzKGwpKSxhPTA7YTxjLmxlbmd0aDthKyspe3ZhciBoLGY9Y1thXTt0cnl7dmFyIGQ9T2JqZWN0LmdldE93blByb3BlcnR5RGVzY3JpcHRvcihsLGYpO2g9ZCE9PWUmJiEwPT09ZC5lbnVtZXJhYmxlfWNhdGNoKHQpe2g9T2JqZWN0LnByb3RvdHlwZS5wcm9wZXJ0eUlzRW51bWVyYWJsZS5jYWxsKGwsZil9aWYoaCl7dmFyIHk9aShsLGYpO25bZl09eX19fXJldHVybiBufSkpfSgib2JqZWN0Ij09dHlwZW9mIHdpbmRvdyYmd2luZG93fHwib2JqZWN0Ij09dHlwZW9mIHNlbGYmJnNlbGZ8fCJvYmplY3QiPT10eXBlb2YgZ2xvYmFsJiZnbG9iYWx8fHt9KSxmdW5jdGlvbih0LGUpe2Z1bmN0aW9uIHIodCxlKXt2YXIgcj1hcmd1bWVudHMubGVuZ3RoPjI/YXJndW1lbnRzWzJdOltdO2lmKCExPT09byh0KSl0aHJvdyBuZXcgVHlwZUVycm9yKE9iamVjdC5wcm90b3R5cGUudG9TdHJpbmcuY2FsbCh0KSsiaXMgbm90IGEgZnVuY3Rpb24uIik7cmV0dXJuIHQuYXBwbHkoZSxyKX1mdW5jdGlvbiBuKHQsZSxyKXt2YXIgbj17dmFsdWU6cix3cml0YWJsZTohMCxlbnVtZXJhYmxlOiExLGNvbmZpZ3VyYWJsZTohMH07T2JqZWN0LmRlZmluZVByb3BlcnR5KHQsZSxuKX1mdW5jdGlvbiBpKHQsZSl7cmV0dXJuIHRbZV19ZnVuY3Rpb24gbyh0KXtyZXR1cm4iZnVuY3Rpb24iPT10eXBlb2YgdH1mdW5jdGlvbiBzKHQpe2lmKG51bGw9PT10fHx0PT09ZSl0aHJvdyBUeXBlRXJyb3IoKTtyZXR1cm4gT2JqZWN0KHQpfWZ1bmN0aW9uIGEodCxyKXt2YXIgbj1mdW5jdGlvbih0LGUpe3JldHVybiBzKHQpW2VdfSh0LHIpO2lmKG51bGw9PT1ufHxuPT09ZSlyZXR1cm4gZTtpZighMT09PW8obikpdGhyb3cgbmV3IFR5cGVFcnJvcigiTWV0aG9kIG5vdCBjYWxsYWJsZTogIityKTtyZXR1cm4gbn1mdW5jdGlvbiBjKGUpe3N3aXRjaCh0eXBlb2YgZSl7Y2FzZSJ1bmRlZmluZWQiOnJldHVybiJ1bmRlZmluZWQiO2Nhc2UiYm9vbGVhbiI6cmV0dXJuImJvb2xlYW4iO2Nhc2UibnVtYmVyIjpyZXR1cm4ibnVtYmVyIjtjYXNlInN0cmluZyI6cmV0dXJuInN0cmluZyI7Y2FzZSJzeW1ib2wiOnJldHVybiJzeW1ib2wiO2RlZmF1bHQ6cmV0dXJuIG51bGw9PT1lPyJudWxsIjoiU3ltYm9sImluIHQmJihlIGluc3RhbmNlb2YgdC5TeW1ib2x8fGUuY29uc3RydWN0b3I9PT10LlN5bWJvbCk/InN5bWJvbCI6Im9iamVjdCJ9fWZ1bmN0aW9uIGwobil7dmFyIHM9YXJndW1lbnRzLmxlbmd0aD4xP2FyZ3VtZW50c1sxXTplO2lmKCJvYmplY3QiPT09YyhuKSl7aWYoYXJndW1lbnRzLmxlbmd0aDwyKXZhciBsPSJkZWZhdWx0IjtlbHNlIHM9PT1TdHJpbmc/bD0ic3RyaW5nIjpzPT09TnVtYmVyJiYobD0ibnVtYmVyIik7dmFyIHU9ImZ1bmN0aW9uIj09dHlwZW9mIHQuU3ltYm9sJiYic3ltYm9sIj09dHlwZW9mIHQuU3ltYm9sLnRvUHJpbWl0aXZlP2Eobix0LlN5bWJvbC50b1ByaW1pdGl2ZSk6ZTtpZih1IT09ZSl7dmFyIHA9cih1LG4sW2xdKTtpZigib2JqZWN0IiE9PWMocCkpcmV0dXJuIHA7dGhyb3cgbmV3IFR5cGVFcnJvcigiQ2Fubm90IGNvbnZlcnQgZXhvdGljIG9iamVjdCB0byBwcmltaXRpdmUuIil9cmV0dXJuImRlZmF1bHQiPT09bCYmKGw9Im51bWJlciIpLGZ1bmN0aW9uKHQsZSl7aWYoInN0cmluZyI9PT1lKXZhciBuPVsidG9TdHJpbmciLCJ2YWx1ZU9mIl07ZWxzZSBuPVsidmFsdWVPZiIsInRvU3RyaW5nIl07Zm9yKHZhciBzPTA7czxuLmxlbmd0aDsrK3Mpe3ZhciBhPWkodCxuW3NdKTtpZihvKGEpKXt2YXIgbD1yKGEsdCk7aWYoIm9iamVjdCIhPT1jKGwpKXJldHVybiBsfX10aHJvdyBuZXcgVHlwZUVycm9yKCJDYW5ub3QgY29udmVydCB0byBwcmltaXRpdmUuIil9KG4sbCl9cmV0dXJuIG59ZnVuY3Rpb24gdSh0KXtzd2l0Y2goYyh0KSl7Y2FzZSJzeW1ib2wiOnRocm93IG5ldyBUeXBlRXJyb3IoIkNhbm5vdCBjb252ZXJ0IGEgU3ltYm9sIHZhbHVlIHRvIGEgc3RyaW5nIik7Y2FzZSJvYmplY3QiOnJldHVybiB1KGwodCxTdHJpbmcpKTtkZWZhdWx0OnJldHVybiBTdHJpbmcodCl9fWZ1bmN0aW9uIHAodCl7dmFyIGU9bCh0LFN0cmluZyk7cmV0dXJuInN5bWJvbCI9PT1jKGUpP2U6dShlKX12YXIgaCxmLGQseTtuKE9iamVjdCwia2V5cyIsZnVuY3Rpb24oKXtmdW5jdGlvbiB0KCl7dmFyIHQ7dHJ5e3Q9T2JqZWN0LmNyZWF0ZSh7fSl9Y2F0Y2godCl7cmV0dXJuITB9cmV0dXJuIGkuY2FsbCh0LCJfX3Byb3RvX18iKX12YXIgcj1PYmplY3QucHJvdG90eXBlLmhhc093blByb3BlcnR5LG49T2JqZWN0LnByb3RvdHlwZS50b1N0cmluZyxpPU9iamVjdC5wcm90b3R5cGUucHJvcGVydHlJc0VudW1lcmFibGUsbz0haS5jYWxsKHt0b1N0cmluZzpudWxsfSwidG9TdHJpbmciKSxzPWkuY2FsbCgoZnVuY3Rpb24oKXt9KSwicHJvdG90eXBlIiksYT1bInRvU3RyaW5nIiwidG9Mb2NhbGVTdHJpbmciLCJ2YWx1ZU9mIiwiaGFzT3duUHJvcGVydHkiLCJpc1Byb3RvdHlwZU9mIiwicHJvcGVydHlJc0VudW1lcmFibGUiLCJjb25zdHJ1Y3RvciJdLGM9ZnVuY3Rpb24odCl7dmFyIGU9dC5jb25zdHJ1Y3RvcjtyZXR1cm4gZSYmZS5wcm90b3R5cGU9PT10fSxsPXskY29uc29sZTohMCwkZXh0ZXJuYWw6ITAsJGZyYW1lOiEwLCRmcmFtZUVsZW1lbnQ6ITAsJGZyYW1lczohMCwkaW5uZXJIZWlnaHQ6ITAsJGlubmVyV2lkdGg6ITAsJG91dGVySGVpZ2h0OiEwLCRvdXRlcldpZHRoOiEwLCRwYWdlWE9mZnNldDohMCwkcGFnZVlPZmZzZXQ6ITAsJHBhcmVudDohMCwkc2Nyb2xsTGVmdDohMCwkc2Nyb2xsVG9wOiEwLCRzY3JvbGxYOiEwLCRzY3JvbGxZOiEwLCRzZWxmOiEwLCR3ZWJraXRJbmRleGVkREI6ITAsJHdlYmtpdFN0b3JhZ2VJbmZvOiEwLCR3aW5kb3c6ITB9LHU9ZnVuY3Rpb24oKXtpZigidW5kZWZpbmVkIj09dHlwZW9mIHdpbmRvdylyZXR1cm4hMTtmb3IodmFyIHQgaW4gd2luZG93KXRyeXtpZighbFsiJCIrdF0mJnIuY2FsbCh3aW5kb3csdCkmJm51bGwhPT13aW5kb3dbdF0mJiJvYmplY3QiPT10eXBlb2Ygd2luZG93W3RdKXRyeXtjKHdpbmRvd1t0XSl9Y2F0Y2godCl7cmV0dXJuITB9fWNhdGNoKHQpe3JldHVybiEwfXJldHVybiExfSgpLHA9ZnVuY3Rpb24odCl7aWYoInVuZGVmaW5lZCI9PXR5cGVvZiB3aW5kb3d8fCF1KXJldHVybiBjKHQpO3RyeXtyZXR1cm4gYyh0KX1jYXRjaCh0KXtyZXR1cm4hMX19O3JldHVybiBmdW5jdGlvbihpKXt2YXIgYz0iW29iamVjdCBGdW5jdGlvbl0iPT09bi5jYWxsKGkpLGw9ZnVuY3Rpb24odCl7dmFyIGU9bi5jYWxsKHQpLHI9IltvYmplY3QgQXJndW1lbnRzXSI9PT1lO3JldHVybiByfHwocj0iW29iamVjdCBBcnJheV0iIT09ZSYmbnVsbCE9PXQmJiJvYmplY3QiPT10eXBlb2YgdCYmIm51bWJlciI9PXR5cGVvZiB0Lmxlbmd0aCYmdC5sZW5ndGg+PTAmJiJbb2JqZWN0IEZ1bmN0aW9uXSI9PT1uLmNhbGwodC5jYWxsZWUpKSxyfShpKSx1PSJbb2JqZWN0IFN0cmluZ10iPT09bi5jYWxsKGkpLGg9W107aWYoaT09PWV8fG51bGw9PT1pKXRocm93IG5ldyBUeXBlRXJyb3IoIkNhbm5vdCBjb252ZXJ0IHVuZGVmaW5lZCBvciBudWxsIHRvIG9iamVjdCIpO3ZhciBmPXMmJmM7aWYodSYmaS5sZW5ndGg+MCYmIXIuY2FsbChpLDApKWZvcih2YXIgZD0wO2Q8aS5sZW5ndGg7KytkKWgucHVzaChTdHJpbmcoZCkpO2lmKGwmJmkubGVuZ3RoPjApZm9yKHZhciB5PTA7eTxpLmxlbmd0aDsrK3kpaC5wdXNoKFN0cmluZyh5KSk7ZWxzZSBmb3IodmFyIGIgaW4gaSl0KCkmJiJfX3Byb3RvX18iPT09Ynx8ZiYmInByb3RvdHlwZSI9PT1ifHwhci5jYWxsKGksYil8fGgucHVzaChTdHJpbmcoYikpO2lmKG8pZm9yKHZhciBnPXAoaSksdj0wO3Y8YS5sZW5ndGg7Kyt2KWcmJiJjb25zdHJ1Y3RvciI9PT1hW3ZdfHwhci5jYWxsKGksYVt2XSl8fGgucHVzaChhW3ZdKTtyZXR1cm4gaH19KCkpLGg9T2JqZWN0LmdldE93blByb3BlcnR5RGVzY3JpcHRvcixmPWZ1bmN0aW9uKCl7dHJ5e3JldHVybiAxPT09T2JqZWN0LmRlZmluZVByb3BlcnR5KGRvY3VtZW50LmNyZWF0ZUVsZW1lbnQoImRpdiIpLCJvbmUiLHtnZXQ6ZnVuY3Rpb24oKXtyZXR1cm4gMX19KS5vbmV9Y2F0Y2godCl7cmV0dXJuITF9fSxkPXt9LnRvU3RyaW5nLHk9IiIuc3BsaXQsbihPYmplY3QsImdldE93blByb3BlcnR5RGVzY3JpcHRvciIsKGZ1bmN0aW9uKHQsZSl7dmFyIHI9cyh0KTtyPSgic3RyaW5nIj09PWMocil8fHIgaW5zdGFuY2VvZiBTdHJpbmcpJiYiW29iamVjdCBTdHJpbmddIj09ZC5jYWxsKHQpP3kuY2FsbCh0LCIiKTpPYmplY3QodCk7dmFyIG49cChlKTtpZihmKXRyeXtyZXR1cm4gaChyLG4pfWNhdGNoKHQpe31pZihmdW5jdGlvbih0LGUpe3JldHVybiBPYmplY3QucHJvdG90eXBlLmhhc093blByb3BlcnR5LmNhbGwodCxlKX0ocixuKSlyZXR1cm57ZW51bWVyYWJsZTohMCxjb25maWd1cmFibGU6ITAsd3JpdGFibGU6ITAsdmFsdWU6cltuXX19KSksZnVuY3Rpb24oKXt2YXIgdD17fS50b1N0cmluZyxlPSIiLnNwbGl0O24oT2JqZWN0LCJlbnRyaWVzIiwoZnVuY3Rpb24ocil7dmFyIG49cyhyKTtyZXR1cm4gZnVuY3Rpb24odCxlKXtmb3IodmFyIHI9T2JqZWN0LmtleXModCksbj1bXSxvPXIubGVuZ3RoLHM9MDtzPG87cysrKXt2YXIgYT1yW3NdO2lmKCJzdHJpbmciPT09YyhhKSl7dmFyIGw9T2JqZWN0LmdldE93blByb3BlcnR5RGVzY3JpcHRvcih0LGEpO2lmKGwmJmwuZW51bWVyYWJsZSlpZigia2V5Ij09PWUpbi5wdXNoKGEpO2Vsc2V7dmFyIHU9aSh0LGEpO2lmKCJ2YWx1ZSI9PT1lKW4ucHVzaCh1KTtlbHNle3ZhciBwPVthLHVdO24ucHVzaChwKX19fX1yZXR1cm4gbn0obj0oInN0cmluZyI9PT1jKG4pfHxuIGluc3RhbmNlb2YgU3RyaW5nKSYmIltvYmplY3QgU3RyaW5nXSI9PXQuY2FsbChyKT9lLmNhbGwociwiIik6T2JqZWN0KHIpLCJrZXkrdmFsdWUiKX0pKX0oKX0oIm9iamVjdCI9PXR5cGVvZiB3aW5kb3cmJndpbmRvd3x8Im9iamVjdCI9PXR5cGVvZiBzZWxmJiZzZWxmfHwib2JqZWN0Ij09dHlwZW9mIGdsb2JhbCYmZ2xvYmFsfHx7fSksZnVuY3Rpb24odCxlKXtmdW5jdGlvbiByKHQsZSl7dmFyIHI9YXJndW1lbnRzLmxlbmd0aD4yP2FyZ3VtZW50c1syXTpbXTtpZighMT09PXModCkpdGhyb3cgbmV3IFR5cGVFcnJvcihPYmplY3QucHJvdG90eXBlLnRvU3RyaW5nLmNhbGwodCkrImlzIG5vdCBhIGZ1bmN0aW9uLiIpO3JldHVybiB0LmFwcGx5KGUscil9ZnVuY3Rpb24gbih0LGUscil7dmFyIG49ZnVuY3Rpb24odCxlLHIpe3ZhciBuPXt2YWx1ZTpyLHdyaXRhYmxlOiEwLGVudW1lcmFibGU6ITAsY29uZmlndXJhYmxlOiEwfTt0cnl7cmV0dXJuIE9iamVjdC5kZWZpbmVQcm9wZXJ0eSh0LGUsbiksITB9Y2F0Y2godCl7cmV0dXJuITF9fSh0LGUscik7aWYoIW4pdGhyb3cgbmV3IFR5cGVFcnJvcigiQ2Fubm90IGFzc2lnbiB2YWx1ZSBgIitPYmplY3QucHJvdG90eXBlLnRvU3RyaW5nLmNhbGwocikrImAgdG8gcHJvcGVydHkgYCIrT2JqZWN0LnByb3RvdHlwZS50b1N0cmluZy5jYWxsKGUpKyJgIG9uIG9iamVjdCBgIitPYmplY3QucHJvdG90eXBlLnRvU3RyaW5nLmNhbGwodCkrImAiKTtyZXR1cm4gbn1mdW5jdGlvbiBpKHQsZSxyKXt2YXIgbj17dmFsdWU6cix3cml0YWJsZTohMCxlbnVtZXJhYmxlOiExLGNvbmZpZ3VyYWJsZTohMH07T2JqZWN0LmRlZmluZVByb3BlcnR5KHQsZSxuKX1mdW5jdGlvbiBvKHQsZSl7cmV0dXJuIHRbZV19ZnVuY3Rpb24gcyh0KXtyZXR1cm4iZnVuY3Rpb24iPT10eXBlb2YgdH1mdW5jdGlvbiBhKHQpe2lmKG51bGw9PT10fHx0PT09ZSl0aHJvdyBUeXBlRXJyb3IoT2JqZWN0LnByb3RvdHlwZS50b1N0cmluZy5jYWxsKHQpKyIgaXMgbm90IGNvZXJjaWJsZSB0byBPYmplY3QuIik7cmV0dXJuIHR9ZnVuY3Rpb24gYyh0KXtyZXR1cm4gQm9vbGVhbih0KX1mdW5jdGlvbiBsKHQpe2lmKG51bGw9PT10fHx0PT09ZSl0aHJvdyBUeXBlRXJyb3IoKTtyZXR1cm4gT2JqZWN0KHQpfWZ1bmN0aW9uIHUodCxlKXtyZXR1cm4gbCh0KVtlXX1mdW5jdGlvbiBwKHQscil7dmFyIG49dSh0LHIpO2lmKG51bGw9PT1ufHxuPT09ZSlyZXR1cm4gZTtpZighMT09PXMobikpdGhyb3cgbmV3IFR5cGVFcnJvcigiTWV0aG9kIG5vdCBjYWxsYWJsZTogIityKTtyZXR1cm4gbn1mdW5jdGlvbiBoKGUpe3N3aXRjaCh0eXBlb2YgZSl7Y2FzZSJ1bmRlZmluZWQiOnJldHVybiJ1bmRlZmluZWQiO2Nhc2UiYm9vbGVhbiI6cmV0dXJuImJvb2xlYW4iO2Nhc2UibnVtYmVyIjpyZXR1cm4ibnVtYmVyIjtjYXNlInN0cmluZyI6cmV0dXJuInN0cmluZyI7Y2FzZSJzeW1ib2wiOnJldHVybiJzeW1ib2wiO2RlZmF1bHQ6cmV0dXJuIG51bGw9PT1lPyJudWxsIjoiU3ltYm9sImluIHQmJihlIGluc3RhbmNlb2YgdC5TeW1ib2x8fGUuY29uc3RydWN0b3I9PT10LlN5bWJvbCk/InN5bWJvbCI6Im9iamVjdCJ9fWZ1bmN0aW9uIGYodCxuKXtpZigib2JqZWN0IiE9PWgodFsiW1tJdGVyYXRvcl1dIl0pKXRocm93IG5ldyBFcnJvcihPYmplY3QucHJvdG90eXBlLnRvU3RyaW5nLmNhbGwodFsiW1tJdGVyYXRvcl1dIl0pKyJpcyBub3QgYW4gT2JqZWN0LiIpO3ZhciBpPXRbIltbSXRlcmF0b3JdXSJdLG89cChpLCJyZXR1cm4iKTtpZihvPT09ZSlyZXR1cm4gbjt0cnl7dmFyIHM9cihvLGkpfWNhdGNoKHQpe3ZhciBhPXR9aWYobilyZXR1cm4gbjtpZihhKXRocm93IGE7aWYoIm9iamVjdCIhPT1oKHMpKXRocm93IG5ldyBUeXBlRXJyb3IoIkl0ZXJhdG9yJ3MgcmV0dXJuIG1ldGhvZCByZXR1cm5lZCBhIG5vbi1vYmplY3QuIik7cmV0dXJuIG59ZnVuY3Rpb24gZCh0KXt2YXIgZT1mdW5jdGlvbih0KXtpZihhcmd1bWVudHMubGVuZ3RoPDIpdmFyIGU9cih0WyJbW05leHRNZXRob2RdXSJdLHRbIltbSXRlcmF0b3JdXSJdKTtlbHNlIGU9cih0WyJbW05leHRNZXRob2RdXSJdLHRbIltbSXRlcmF0b3JdXSJdLFthcmd1bWVudHNbMV1dKTtpZigib2JqZWN0IiE9PWgoZSkpdGhyb3cgbmV3IFR5cGVFcnJvcigiYmFkIGl0ZXJhdG9yIik7cmV0dXJuIGV9KHQpO3JldHVybiEwIT09ZnVuY3Rpb24odCl7aWYoIm9iamVjdCIhPT1oKHQpKXRocm93IG5ldyBFcnJvcihPYmplY3QucHJvdG90eXBlLnRvU3RyaW5nLmNhbGwodCkrImlzIG5vdCBhbiBPYmplY3QuIik7cmV0dXJuIGMobyh0LCJkb25lIikpfShlKSYmZX1mdW5jdGlvbiB5KHQpe2lmKCJvYmplY3QiIT09aCh0KSl0aHJvdyBuZXcgRXJyb3IoT2JqZWN0LnByb3RvdHlwZS50b1N0cmluZy5jYWxsKHQpKyJpcyBub3QgYW4gT2JqZWN0LiIpO3JldHVybiBvKHQsInZhbHVlIil9ZnVuY3Rpb24gYih0LGUpe3JldHVybiBoKHQpPT09aChlKSYmKCJudW1iZXIiPT09aCh0KT8hKCFpc05hTih0KXx8IWlzTmFOKGUpKXx8MS90PT0xLzAmJjEvZT09LTEvMHx8MS90PT0tMS8wJiYxL2U9PTEvMHx8dD09PWU6ZnVuY3Rpb24odCxlKXtyZXR1cm4gdD09PWV9KHQsZSkpfWZ1bmN0aW9uIGcodCl7aWYoInN5bWJvbCI9PT1oKHQpKXRocm93IG5ldyBUeXBlRXJyb3IoIkNhbm5vdCBjb252ZXJ0IGEgU3ltYm9sIHZhbHVlIHRvIGEgbnVtYmVyIik7dmFyIGU9TnVtYmVyKHQpO3JldHVybiBpc05hTihlKT8wOjEvZT09MS8wfHwxL2U9PS0xLzB8fGU9PT0xLzB8fGU9PT0tMS8wP2U6KGU8MD8tMToxKSpNYXRoLmZsb29yKE1hdGguYWJzKGUpKX1mdW5jdGlvbiB2KG4pe3ZhciBpPWFyZ3VtZW50cy5sZW5ndGg+MT9hcmd1bWVudHNbMV06ZTtpZigib2JqZWN0Ij09PWgobikpe2lmKGFyZ3VtZW50cy5sZW5ndGg8Mil2YXIgYT0iZGVmYXVsdCI7ZWxzZSBpPT09U3RyaW5nP2E9InN0cmluZyI6aT09PU51bWJlciYmKGE9Im51bWJlciIpO3ZhciBjPSJmdW5jdGlvbiI9PXR5cGVvZiB0LlN5bWJvbCYmInN5bWJvbCI9PXR5cGVvZiB0LlN5bWJvbC50b1ByaW1pdGl2ZT9wKG4sdC5TeW1ib2wudG9QcmltaXRpdmUpOmU7aWYoYyE9PWUpe3ZhciBsPXIoYyxuLFthXSk7aWYoIm9iamVjdCIhPT1oKGwpKXJldHVybiBsO3Rocm93IG5ldyBUeXBlRXJyb3IoIkNhbm5vdCBjb252ZXJ0IGV4b3RpYyBvYmplY3QgdG8gcHJpbWl0aXZlLiIpfXJldHVybiJkZWZhdWx0Ij09PWEmJihhPSJudW1iZXIiKSxmdW5jdGlvbih0LGUpe2lmKCJzdHJpbmciPT09ZSl2YXIgbj1bInRvU3RyaW5nIiwidmFsdWVPZiJdO2Vsc2Ugbj1bInZhbHVlT2YiLCJ0b1N0cmluZyJdO2Zvcih2YXIgaT0wO2k8bi5sZW5ndGg7KytpKXt2YXIgYT1vKHQsbltpXSk7aWYocyhhKSl7dmFyIGM9cihhLHQpO2lmKCJvYmplY3QiIT09aChjKSlyZXR1cm4gY319dGhyb3cgbmV3IFR5cGVFcnJvcigiQ2Fubm90IGNvbnZlcnQgdG8gcHJpbWl0aXZlLiIpfShuLGEpfXJldHVybiBufWZ1bmN0aW9uIG0odCl7c3dpdGNoKGgodCkpe2Nhc2Uic3ltYm9sIjp0aHJvdyBuZXcgVHlwZUVycm9yKCJDYW5ub3QgY29udmVydCBhIFN5bWJvbCB2YWx1ZSB0byBhIHN0cmluZyIpO2Nhc2Uib2JqZWN0IjpyZXR1cm4gbSh2KHQsU3RyaW5nKSk7ZGVmYXVsdDpyZXR1cm4gU3RyaW5nKHQpfX12YXIgXyx3LFMsRSxPLGo7ZnVuY3Rpb24gVCh0KXt2YXIgZT12KHQsU3RyaW5nKTtyZXR1cm4ic3ltYm9sIj09PWgoZSk/ZTptKGUpfWkoT2JqZWN0LCJrZXlzIixmdW5jdGlvbigpe2Z1bmN0aW9uIHQoKXt2YXIgdDt0cnl7dD1PYmplY3QuY3JlYXRlKHt9KX1jYXRjaCh0KXtyZXR1cm4hMH1yZXR1cm4gaS5jYWxsKHQsIl9fcHJvdG9fXyIpfXZhciByPU9iamVjdC5wcm90b3R5cGUuaGFzT3duUHJvcGVydHksbj1PYmplY3QucHJvdG90eXBlLnRvU3RyaW5nLGk9T2JqZWN0LnByb3RvdHlwZS5wcm9wZXJ0eUlzRW51bWVyYWJsZSxvPSFpLmNhbGwoe3RvU3RyaW5nOm51bGx9LCJ0b1N0cmluZyIpLHM9aS5jYWxsKChmdW5jdGlvbigpe30pLCJwcm90b3R5cGUiKSxhPVsidG9TdHJpbmciLCJ0b0xvY2FsZVN0cmluZyIsInZhbHVlT2YiLCJoYXNPd25Qcm9wZXJ0eSIsImlzUHJvdG90eXBlT2YiLCJwcm9wZXJ0eUlzRW51bWVyYWJsZSIsImNvbnN0cnVjdG9yIl0sYz1mdW5jdGlvbih0KXt2YXIgZT10LmNvbnN0cnVjdG9yO3JldHVybiBlJiZlLnByb3RvdHlwZT09PXR9LGw9eyRjb25zb2xlOiEwLCRleHRlcm5hbDohMCwkZnJhbWU6ITAsJGZyYW1lRWxlbWVudDohMCwkZnJhbWVzOiEwLCRpbm5lckhlaWdodDohMCwkaW5uZXJXaWR0aDohMCwkb3V0ZXJIZWlnaHQ6ITAsJG91dGVyV2lkdGg6ITAsJHBhZ2VYT2Zmc2V0OiEwLCRwYWdlWU9mZnNldDohMCwkcGFyZW50OiEwLCRzY3JvbGxMZWZ0OiEwLCRzY3JvbGxUb3A6ITAsJHNjcm9sbFg6ITAsJHNjcm9sbFk6ITAsJHNlbGY6ITAsJHdlYmtpdEluZGV4ZWREQjohMCwkd2Via2l0U3RvcmFnZUluZm86ITAsJHdpbmRvdzohMH0sdT1mdW5jdGlvbigpe2lmKCJ1bmRlZmluZWQiPT10eXBlb2Ygd2luZG93KXJldHVybiExO2Zvcih2YXIgdCBpbiB3aW5kb3cpdHJ5e2lmKCFsWyIkIit0XSYmci5jYWxsKHdpbmRvdyx0KSYmbnVsbCE9PXdpbmRvd1t0XSYmIm9iamVjdCI9PXR5cGVvZiB3aW5kb3dbdF0pdHJ5e2Mod2luZG93W3RdKX1jYXRjaCh0KXtyZXR1cm4hMH19Y2F0Y2godCl7cmV0dXJuITB9cmV0dXJuITF9KCkscD1mdW5jdGlvbih0KXtpZigidW5kZWZpbmVkIj09dHlwZW9mIHdpbmRvd3x8IXUpcmV0dXJuIGModCk7dHJ5e3JldHVybiBjKHQpfWNhdGNoKHQpe3JldHVybiExfX07cmV0dXJuIGZ1bmN0aW9uKGkpe3ZhciBjPSJbb2JqZWN0IEZ1bmN0aW9uXSI9PT1uLmNhbGwoaSksbD1mdW5jdGlvbih0KXt2YXIgZT1uLmNhbGwodCkscj0iW29iamVjdCBBcmd1bWVudHNdIj09PWU7cmV0dXJuIHJ8fChyPSJbb2JqZWN0IEFycmF5XSIhPT1lJiZudWxsIT09dCYmIm9iamVjdCI9PXR5cGVvZiB0JiYibnVtYmVyIj09dHlwZW9mIHQubGVuZ3RoJiZ0Lmxlbmd0aD49MCYmIltvYmplY3QgRnVuY3Rpb25dIj09PW4uY2FsbCh0LmNhbGxlZSkpLHJ9KGkpLHU9IltvYmplY3QgU3RyaW5nXSI9PT1uLmNhbGwoaSksaD1bXTtpZihpPT09ZXx8bnVsbD09PWkpdGhyb3cgbmV3IFR5cGVFcnJvcigiQ2Fubm90IGNvbnZlcnQgdW5kZWZpbmVkIG9yIG51bGwgdG8gb2JqZWN0Iik7dmFyIGY9cyYmYztpZih1JiZpLmxlbmd0aD4wJiYhci5jYWxsKGksMCkpZm9yKHZhciBkPTA7ZDxpLmxlbmd0aDsrK2QpaC5wdXNoKFN0cmluZyhkKSk7aWYobCYmaS5sZW5ndGg+MClmb3IodmFyIHk9MDt5PGkubGVuZ3RoOysreSloLnB1c2goU3RyaW5nKHkpKTtlbHNlIGZvcih2YXIgYiBpbiBpKXQoKSYmIl9fcHJvdG9fXyI9PT1ifHxmJiYicHJvdG90eXBlIj09PWJ8fCFyLmNhbGwoaSxiKXx8aC5wdXNoKFN0cmluZyhiKSk7aWYobylmb3IodmFyIGc9cChpKSx2PTA7djxhLmxlbmd0aDsrK3YpZyYmImNvbnN0cnVjdG9yIj09PWFbdl18fCFyLmNhbGwoaSxhW3ZdKXx8aC5wdXNoKGFbdl0pO3JldHVybiBofX0oKSksaShBcnJheS5wcm90b3R5cGUsImluY2x1ZGVzIiwoZnVuY3Rpb24odCl7dmFyIGU9bCh0aGlzKSxyPWZ1bmN0aW9uKHQpe3ZhciBlPWcodCk7cmV0dXJuIGU8PTA/MDpNYXRoLm1pbihlLE1hdGgucG93KDIsNTMpLTEpfShvKGUsImxlbmd0aCIpKTtpZigwPT09cilyZXR1cm4hMTt2YXIgbj1nKGFyZ3VtZW50c1sxXSk7aWYobj49MCl2YXIgaT1uO2Vsc2UoaT1yK24pPDAmJihpPTApO2Zvcig7aTxyOyl7aWYoYih0LG8oZSxtKGkpKSkpcmV0dXJuITA7aSs9MX1yZXR1cm4hMX0pKSxfPXt9LnRvU3RyaW5nLHc9IiIuc3BsaXQsUz1bXS5jb25jYXQsRT1PYmplY3QucHJvdG90eXBlLmhhc093blByb3BlcnR5LE89T2JqZWN0LmdldE93blByb3BlcnR5TmFtZXN8fE9iamVjdC5rZXlzLGo9Im9iamVjdCI9PXR5cGVvZiB0P08odCk6W10saShPYmplY3QsImdldE93blByb3BlcnR5TmFtZXMiLChmdW5jdGlvbih0KXt2YXIgZT1sKHQpO2lmKCJbb2JqZWN0IFdpbmRvd10iPT09Xy5jYWxsKGUpKXRyeXtyZXR1cm4gTyhlKX1jYXRjaCh0KXtyZXR1cm4gUy5jYWxsKFtdLGopfWU9IltvYmplY3QgU3RyaW5nXSI9PV8uY2FsbChlKT93LmNhbGwoZSwiIik6T2JqZWN0KGUpO2Zvcih2YXIgcj1PKGUpLG49WyJsZW5ndGgiLCJwcm90b3R5cGUiXSxpPTA7aTxuLmxlbmd0aDtpKyspe3ZhciBvPW5baV07RS5jYWxsKGUsbykmJiFyLmluY2x1ZGVzKG8pJiZyLnB1c2gobyl9aWYoci5pbmNsdWRlcygiX19wcm90b19fIikpe3ZhciBzPXIuaW5kZXhPZigiX19wcm90b19fIik7ci5zcGxpY2UocywxKX1yZXR1cm4gcn0pKSxpKFN0cmluZy5wcm90b3R5cGUsImluY2x1ZGVzIiwoZnVuY3Rpb24ocil7dmFyIG49YXJndW1lbnRzLmxlbmd0aD4xP2FyZ3VtZW50c1sxXTplLGk9bShhKHRoaXMpKTtpZihmdW5jdGlvbihyKXtpZigib2JqZWN0IiE9PWgocikpcmV0dXJuITE7dmFyIG49IlN5bWJvbCJpbiB0JiYibWF0Y2giaW4gdC5TeW1ib2w/byhyLHQuU3ltYm9sLm1hdGNoKTplO2lmKG4hPT1lKXJldHVybiBjKG4pO3RyeXt2YXIgaT1yLmxhc3RJbmRleDtyZXR1cm4gci5sYXN0SW5kZXg9MCxSZWdFeHAucHJvdG90eXBlLmV4ZWMuY2FsbChyKSwhMH1jYXRjaCh0KXt9ZmluYWxseXtyLmxhc3RJbmRleD1pfXJldHVybiExfShyKSl0aHJvdyBuZXcgVHlwZUVycm9yKCJGaXJzdCBhcmd1bWVudCB0byBTdHJpbmcucHJvdG90eXBlLmluY2x1ZGVzIG11c3Qgbm90IGJlIGEgcmVndWxhciBleHByZXNzaW9uIik7dmFyIHM9bShyKSxsPWcobiksdT1pLmxlbmd0aCxwPU1hdGgubWluKE1hdGgubWF4KGwsMCksdSk7cmV0dXJuLTEhPT1TdHJpbmcucHJvdG90eXBlLmluZGV4T2YuY2FsbChpLHMscCl9KSksZnVuY3Rpb24oKXt2YXIgdD1PYmplY3QuZ2V0T3duUHJvcGVydHlEZXNjcmlwdG9yLGU9ZnVuY3Rpb24oKXt0cnl7cmV0dXJuIDE9PT1PYmplY3QuZGVmaW5lUHJvcGVydHkoZG9jdW1lbnQuY3JlYXRlRWxlbWVudCgiZGl2IiksIm9uZSIse2dldDpmdW5jdGlvbigpe3JldHVybiAxfX0pLm9uZX1jYXRjaCh0KXtyZXR1cm4hMX19LHI9e30udG9TdHJpbmcsbj0iIi5zcGxpdDtpKE9iamVjdCwiZ2V0T3duUHJvcGVydHlEZXNjcmlwdG9yIiwoZnVuY3Rpb24oaSxvKXt2YXIgcz1sKGkpO3M9KCJzdHJpbmciPT09aChzKXx8cyBpbnN0YW5jZW9mIFN0cmluZykmJiJbb2JqZWN0IFN0cmluZ10iPT1yLmNhbGwoaSk/bi5jYWxsKGksIiIpOk9iamVjdChpKTt2YXIgYT1UKG8pO2lmKGUpdHJ5e3JldHVybiB0KHMsYSl9Y2F0Y2godCl7fWlmKGZ1bmN0aW9uKHQsZSl7cmV0dXJuIE9iamVjdC5wcm90b3R5cGUuaGFzT3duUHJvcGVydHkuY2FsbCh0LGUpfShzLGEpKXJldHVybntlbnVtZXJhYmxlOiEwLGNvbmZpZ3VyYWJsZTohMCx3cml0YWJsZTohMCx2YWx1ZTpzW2FdfX0pKX0oKSxpKE9iamVjdCwiYXNzaWduIiwoZnVuY3Rpb24odCxyKXt2YXIgbj1sKHQpO2lmKDE9PT1hcmd1bWVudHMubGVuZ3RoKXJldHVybiBuO3ZhciBpLHMsYSxjLHU9QXJyYXkucHJvdG90eXBlLnNsaWNlLmNhbGwoYXJndW1lbnRzLDEpO2ZvcihpPTA7aTx1Lmxlbmd0aDtpKyspe3ZhciBwPXVbaV07Zm9yKHA9PT1lfHxudWxsPT09cD9hPVtdOihjPSJbb2JqZWN0IFN0cmluZ10iPT09T2JqZWN0LnByb3RvdHlwZS50b1N0cmluZy5jYWxsKHApP1N0cmluZyhwKS5zcGxpdCgiIik6bChwKSxhPU9iamVjdC5rZXlzKGMpKSxzPTA7czxhLmxlbmd0aDtzKyspe3ZhciBoLGY9YVtzXTt0cnl7dmFyIGQ9T2JqZWN0LmdldE93blByb3BlcnR5RGVzY3JpcHRvcihjLGYpO2g9ZCE9PWUmJiEwPT09ZC5lbnVtZXJhYmxlfWNhdGNoKHQpe2g9T2JqZWN0LnByb3RvdHlwZS5wcm9wZXJ0eUlzRW51bWVyYWJsZS5jYWxsKGMsZil9aWYoaCl7dmFyIHk9byhjLGYpO25bZl09eX19fXJldHVybiBufSkpLGZ1bmN0aW9uKCl7aWYoIU9iamVjdC5zZXRQcm90b3R5cGVPZil7dmFyIHQsZSxyPU9iamVjdC5nZXRPd25Qcm9wZXJ0eU5hbWVzLG49T2JqZWN0LmdldE93blByb3BlcnR5RGVzY3JpcHRvcixvPU9iamVjdC5jcmVhdGUscz1PYmplY3QuZGVmaW5lUHJvcGVydHksYT1PYmplY3QuZ2V0UHJvdG90eXBlT2YsYz1PYmplY3QucHJvdG90eXBlLGw9ZnVuY3Rpb24odCxlKXtyZXR1cm4gZnVuY3Rpb24odCxlKXtyZXR1cm4gcihlKS5mb3JFYWNoKChmdW5jdGlvbihyKXtzKHQscixuKGUscikpfSkpLHR9KG8oZSksdCl9O3RyeXsodD1uKGMsIl9fcHJvdG9fXyIpLnNldCkuY2FsbCh7fSxudWxsKSxlPWZ1bmN0aW9uKGUscil7cmV0dXJuIHQuY2FsbChlLHIpLGV9fWNhdGNoKHIpeyh0PXtfX3Byb3RvX186bnVsbH0paW5zdGFuY2VvZiBPYmplY3Q/ZT1sOih0Ll9fcHJvdG9fXz1jLGU9dCBpbnN0YW5jZW9mIE9iamVjdD9mdW5jdGlvbih0LGUpe3JldHVybiB0Ll9fcHJvdG9fXz1lLHR9OmZ1bmN0aW9uKHQsZSl7cmV0dXJuIGEodCk/KHQuX19wcm90b19fPWUsdCk6bCh0LGUpfSl9aShPYmplY3QsInNldFByb3RvdHlwZU9mIixlKX19KCksZnVuY3Rpb24ocixuLGkpe3ZhciBvLHM9ZnVuY3Rpb24oKXt0cnl7dmFyIHQ9e307cmV0dXJuIHIuZGVmaW5lUHJvcGVydHkodCwidCIse2NvbmZpZ3VyYWJsZTohMCxlbnVtZXJhYmxlOiExLGdldDpmdW5jdGlvbigpe3JldHVybiEwfSxzZXQ6ZX0pLCEhdC50fWNhdGNoKHQpe3JldHVybiExfX0oKSxhPTAsYz0iIitNYXRoLnJhbmRvbSgpLGw9Il9fAXN5bWJvbDoiLHU9Il9fAXN5bWJvbEBAIitjLHA9e30sZj0iZGVmaW5lUHJvcGVydHkiLGQ9ImRlZmluZVByb3BlcnRpZXMiLHk9ImdldE93blByb3BlcnR5TmFtZXMiLGI9ImdldE93blByb3BlcnR5RGVzY3JpcHRvciIsZz0icHJvcGVydHlJc0VudW1lcmFibGUiLHY9ci5wcm90b3R5cGUsbT12Lmhhc093blByb3BlcnR5LF89dltnXSx3PXYudG9TdHJpbmcsUz1BcnJheS5wcm90b3R5cGUuY29uY2F0LEU9ci5nZXRPd25Qcm9wZXJ0eU5hbWVzP3IuZ2V0T3duUHJvcGVydHlOYW1lcyh0KTpbXSxPPXJbeV0saj1mdW5jdGlvbih0KXtpZigiW29iamVjdCBXaW5kb3ddIj09PXcuY2FsbCh0KSl0cnl7cmV0dXJuIE8odCl9Y2F0Y2godCl7cmV0dXJuIFMuY2FsbChbXSxFKX1yZXR1cm4gTyh0KX0sVD1yW2JdLFA9ci5jcmVhdGUsQT1yLmtleXMsTj1yLmZyZWV6ZXx8cixDPXJbZl0sST1yW2RdLEw9VChyLHkpLE09ZnVuY3Rpb24odCxlLHIpe2lmKCFtLmNhbGwodCx1KSl0cnl7Qyh0LHUse2VudW1lcmFibGU6ITEsY29uZmlndXJhYmxlOiExLHdyaXRhYmxlOiExLHZhbHVlOnt9fSl9Y2F0Y2goZSl7dFt1XT17fX10W3VdWyJAQCIrZV09cn0sRD1mdW5jdGlvbigpe30seD1mdW5jdGlvbih0KXtyZXR1cm4gdCE9dSYmIW0uY2FsbChGLHQpfSxSPWZ1bmN0aW9uKHQpe3JldHVybiB0IT11JiZtLmNhbGwoRix0KX0saz1mdW5jdGlvbih0KXt2YXIgZT0iIit0O3JldHVybiBSKGUpP20uY2FsbCh0aGlzLGUpJiZ0aGlzW3VdJiZ0aGlzW3VdWyJAQCIrZV06Xy5jYWxsKHRoaXMsdCl9LEg9ZnVuY3Rpb24odCl7dmFyIGU9e2VudW1lcmFibGU6ITEsY29uZmlndXJhYmxlOiEwLGdldDpELHNldDpmdW5jdGlvbihlKXtvKHRoaXMsdCx7ZW51bWVyYWJsZTohMSxjb25maWd1cmFibGU6ITAsd3JpdGFibGU6ITAsdmFsdWU6ZX0pLE0odGhpcyx0LCEwKX19O3RyeXtDKHYsdCxlKX1jYXRjaChyKXt2W3RdPWUudmFsdWV9Rlt0XT1DKHIodCksImNvbnN0cnVjdG9yIixVKTt2YXIgbj1UKCQucHJvdG90eXBlLCJkZXNjcmlwdGlvbiIpO3JldHVybiBuJiZDKEZbdF0sImRlc2NyaXB0aW9uIixuKSxOKEZbdF0pfSxHPWZ1bmN0aW9uKHQpe3ZhciByPWZ1bmN0aW9uKHQpe2lmKCJzeW1ib2wiPT09aCh0KSlyZXR1cm4gdDt0aHJvdyBUeXBlRXJyb3IodCsiIGlzIG5vdCBhIHN5bWJvbCIpfSh0KTtpZihWKXt2YXIgbj1LKHIpO2lmKCIiIT09bilyZXR1cm4gbi5zbGljZSgxLC0xKX1pZihwW3JdIT09ZSlyZXR1cm4gcFtyXTt2YXIgaT1yLnRvU3RyaW5nKCksbz1pLmxhc3RJbmRleE9mKCIwLiIpO3JldHVybiIiPT09KGk9aS5zbGljZSgxMCxvKSk/ZTppfSwkPWZ1bmN0aW9uIHQoKXt2YXIgbj1hcmd1bWVudHNbMF07aWYodGhpcyBpbnN0YW5jZW9mIHQpdGhyb3cgbmV3IFR5cGVFcnJvcigiU3ltYm9sIGlzIG5vdCBhIGNvbnN0cnVjdG9yIik7dmFyIGk9bC5jb25jYXQobnx8IiIsYywrK2EpO249PT1lfHxudWxsIT09biYmIWlzTmFOKG4pJiYiIiE9PVN0cmluZyhuKXx8KHBbaV09U3RyaW5nKG4pKTt2YXIgbz1IKGkpO3JldHVybiBzfHxyLmRlZmluZVByb3BlcnR5KG8sImRlc2NyaXB0aW9uIix7Y29uZmlndXJhYmxlOiEwLGVudW1lcmFibGU6ITEsdmFsdWU6RyhvKX0pLG99LEY9UChudWxsKSxVPXt2YWx1ZTokfSx6PWZ1bmN0aW9uKHQpe3JldHVybiBGW3RdfSxCPWZ1bmN0aW9uKHQsZSxyKXt2YXIgbj0iIitlO3JldHVybiBSKG4pPyhvKHQsbixyLmVudW1lcmFibGU/ZnVuY3Rpb24odCl7dmFyIGU9UCh0KTtyZXR1cm4gZS5lbnVtZXJhYmxlPSExLGV9KHIpOnIpLE0odCxuLCEhci5lbnVtZXJhYmxlKSk6Qyh0LGUsciksdH0sVz1mdW5jdGlvbih0KXtyZXR1cm4gaih0KS5maWx0ZXIodD09PXY/ZnVuY3Rpb24odCl7cmV0dXJuIGZ1bmN0aW9uKGUpe3JldHVybiBtLmNhbGwodCx1KSYmbS5jYWxsKHRbdV0sIkBAIitlKX19KHQpOlIpLm1hcCh6KX07TC52YWx1ZT1CLEMocixmLEwpLEwudmFsdWU9VyxDKHIsImdldE93blByb3BlcnR5U3ltYm9scyIsTCksTC52YWx1ZT1mdW5jdGlvbih0KXtyZXR1cm4gaih0KS5maWx0ZXIoeCl9LEMocix5LEwpLEwudmFsdWU9ZnVuY3Rpb24odCxlKXt2YXIgcj1XKGUpO3JldHVybiByLmxlbmd0aD9BKGUpLmNvbmNhdChyKS5mb3JFYWNoKChmdW5jdGlvbihyKXtrLmNhbGwoZSxyKSYmQih0LHIsZVtyXSl9KSk6SSh0LGUpLHR9LEMocixkLEwpLEwudmFsdWU9ayxDKHYsZyxMKSxMLnZhbHVlPSQsQyhpLCJTeW1ib2wiLEwpLEwudmFsdWU9ZnVuY3Rpb24odCl7dmFyIGU9bC5jb25jYXQobCx0LGMpO3JldHVybiBlIGluIHY/RltlXTpIKGUpfSxDKCQsImZvciIsTCksTC52YWx1ZT1mdW5jdGlvbih0KXtpZih4KHQpKXRocm93IG5ldyBUeXBlRXJyb3IodCsiIGlzIG5vdCBhIHN5bWJvbCIpO3JldHVybiBtLmNhbGwoRix0KT90LnNsaWNlKDIwLC1jLmxlbmd0aCk6dm9pZCAwfSxDKCQsImtleUZvciIsTCksTC52YWx1ZT1mdW5jdGlvbih0LGUpe3ZhciByPVQodCxlKTtyZXR1cm4gciYmUihlKSYmKHIuZW51bWVyYWJsZT1rLmNhbGwodCxlKSkscn0sQyhyLGIsTCksTC52YWx1ZT1mdW5jdGlvbih0LGUpe3JldHVybiAxPT09YXJndW1lbnRzLmxlbmd0aHx8dm9pZCAwPT09ZT9QKHQpOmZ1bmN0aW9uKHQsZSl7dmFyIHI9UCh0KTtyZXR1cm4gaihlKS5mb3JFYWNoKChmdW5jdGlvbih0KXtrLmNhbGwoZSx0KSYmQihyLHQsZVt0XSl9KSkscn0odCxlKX0sQyhyLCJjcmVhdGUiLEwpO3ZhciBxPW51bGw9PT1mdW5jdGlvbigpe3JldHVybiB0aGlzfS5jYWxsKG51bGwpO2lmKEwudmFsdWU9cT9mdW5jdGlvbigpe3ZhciB0PXcuY2FsbCh0aGlzKTtyZXR1cm4iW29iamVjdCBTdHJpbmddIj09PXQmJlIodGhpcyk/IltvYmplY3QgU3ltYm9sXSI6dH06ZnVuY3Rpb24oKXtpZih0aGlzPT09d2luZG93KXJldHVybiJbb2JqZWN0IE51bGxdIjt2YXIgdD13LmNhbGwodGhpcyk7cmV0dXJuIltvYmplY3QgU3RyaW5nXSI9PT10JiZSKHRoaXMpPyJbb2JqZWN0IFN5bWJvbF0iOnR9LEModiwidG9TdHJpbmciLEwpLG89ZnVuY3Rpb24odCxlLHIpe3ZhciBuPVQodixlKTtkZWxldGUgdltlXSxDKHQsZSxyKSx0IT09diYmQyh2LGUsbil9LGZ1bmN0aW9uKCl7dHJ5e3ZhciB0PXt9O3JldHVybiByLmRlZmluZVByb3BlcnR5KHQsInQiLHtjb25maWd1cmFibGU6ITAsZW51bWVyYWJsZTohMSxnZXQ6ZnVuY3Rpb24oKXtyZXR1cm4hMH0sc2V0OmV9KSwhIXQudH1jYXRjaCh0KXtyZXR1cm4hMX19KCkpe3ZhciBLO3RyeXtLPUZ1bmN0aW9uKCJzIiwidmFyIHYgPSBzLnZhbHVlT2YoKTsgcmV0dXJuIHsgW3ZdKCkge30gfVt2XS5uYW1lOyIpfWNhdGNoKHQpe312YXIgVj1LJiYiaW5mZXJyZWQiPT09ZnVuY3Rpb24oKXt9Lm5hbWU/SzpudWxsO3IuZGVmaW5lUHJvcGVydHkoaS5TeW1ib2wucHJvdG90eXBlLCJkZXNjcmlwdGlvbiIse2NvbmZpZ3VyYWJsZTohMCxlbnVtZXJhYmxlOiExLGdldDpmdW5jdGlvbigpe3JldHVybiBHKHRoaXMpfX0pfX0oT2JqZWN0LDAsdCksT2JqZWN0LmRlZmluZVByb3BlcnR5KHQuU3ltYm9sLCJpdGVyYXRvciIse3ZhbHVlOnQuU3ltYm9sKCJpdGVyYXRvciIpfSk7dmFyIFA9ZnVuY3Rpb24oKXt2YXIgdD17fS50b1N0cmluZyxlPSIiLnNwbGl0O3JldHVybiBmdW5jdGlvbihuLGksYSl7aWYoITE9PT1zKGEpKXRocm93IG5ldyBUeXBlRXJyb3IoImFkZGVyIGlzIG5vdCBjYWxsYWJsZS4iKTtmb3IodmFyIGM9ZnVuY3Rpb24odCl7dmFyIGU9cihhcmd1bWVudHMubGVuZ3RoPjE/YXJndW1lbnRzWzFdOnAodCxTeW1ib2wuaXRlcmF0b3IpLHQpO2lmKCJvYmplY3QiIT09aChlKSl0aHJvdyBuZXcgVHlwZUVycm9yKCJiYWQgaXRlcmF0b3IiKTt2YXIgbj11KGUsIm5leHQiKSxpPU9iamVjdC5jcmVhdGUobnVsbCk7cmV0dXJuIGlbIltbSXRlcmF0b3JdXSJdPWUsaVsiW1tOZXh0TWV0aG9kXV0iXT1uLGlbIltbRG9uZV1dIl09ITEsaX0oaSk7Oyl7dmFyIGw9ZChjKTtpZighMT09PWwpcmV0dXJuIG47dmFyIGIsZyx2PXkobCk7aWYoIm9iamVjdCIhPT1oKHYpKXt2YXIgbT1uZXcgVHlwZUVycm9yKCJuZXh0SXRlbSBpcyBub3QgYW4gb2JqZWN0Iik7dGhyb3cgZihjLG0pLG19dj0oInN0cmluZyI9PT1oKHYpfHx2IGluc3RhbmNlb2YgU3RyaW5nKSYmIltvYmplY3QgU3RyaW5nXSI9PXQuY2FsbCh2KT9lLmNhbGwodiwiIik6djt0cnl7Yj1vKHYsIjAiKX1jYXRjaCh0KXtyZXR1cm4gZihjLHQpfXRyeXtnPW8odiwiMSIpfWNhdGNoKHQpe3JldHVybiBmKGMsdCl9dHJ5e3IoYSxuLFtiLGddKX1jYXRjaCh0KXtyZXR1cm4gZihjLHQpfX19fSgpO09iamVjdC5kZWZpbmVQcm9wZXJ0eShTeW1ib2wsInRvU3RyaW5nVGFnIix7dmFsdWU6U3ltYm9sKCJ0b1N0cmluZ1RhZyIpfSk7dmFyIEE9ZnVuY3Rpb24oKXt2YXIgdD1mdW5jdGlvbigpe3JldHVybiB0aGlzLmxlbmd0aD0wLHRoaXN9LHI9ZnVuY3Rpb24odCxlKXtpZighKHRoaXMgaW5zdGFuY2VvZiByKSlyZXR1cm4gbmV3IHIodCxlKTtPYmplY3QuZGVmaW5lUHJvcGVydGllcyh0aGlzLHtfX2xpc3RfXzp7d3JpdGFibGU6ITAsdmFsdWU6dH0sX19jb250ZXh0X186e3dyaXRhYmxlOiEwLHZhbHVlOmV9LF9fbmV4dEluZGV4X186e3dyaXRhYmxlOiEwLHZhbHVlOjB9fSksZSYmKGZ1bmN0aW9uKHQpe2lmKCJmdW5jdGlvbiIhPXR5cGVvZiB0KXRocm93IG5ldyBUeXBlRXJyb3IodCsiIGlzIG5vdCBhIGZ1bmN0aW9uIil9KGUub24pLGUub24oIl9hZGQiLHRoaXMuX29uQWRkLmJpbmQodGhpcykpLGUub24oIl9kZWxldGUiLHRoaXMuX29uRGVsZXRlLmJpbmQodGhpcykpLGUub24oIl9jbGVhciIsdGhpcy5fb25DbGVhci5iaW5kKHRoaXMpKSl9O3JldHVybiBPYmplY3QuZGVmaW5lUHJvcGVydGllcyhyLnByb3RvdHlwZSxPYmplY3QuYXNzaWduKHtjb25zdHJ1Y3Rvcjp7dmFsdWU6cixjb25maWd1cmFibGU6ITAsZW51bWVyYWJsZTohMSx3cml0YWJsZTohMH0sX25leHQ6e3ZhbHVlOmZ1bmN0aW9uKCl7dmFyIHQ7aWYodGhpcy5fX2xpc3RfXylyZXR1cm4gdGhpcy5fX3JlZG9fXyYmKHQ9dGhpcy5fX3JlZG9fXy5zaGlmdCgpKSE9PWU/dDp0aGlzLl9fbmV4dEluZGV4X188dGhpcy5fX2xpc3RfXy5sZW5ndGg/dGhpcy5fX25leHRJbmRleF9fKys6dm9pZCB0aGlzLl91bkJpbmQoKX0sY29uZmlndXJhYmxlOiEwLGVudW1lcmFibGU6ITEsd3JpdGFibGU6ITB9LG5leHQ6e3ZhbHVlOmZ1bmN0aW9uKCl7cmV0dXJuIHRoaXMuX2NyZWF0ZVJlc3VsdCh0aGlzLl9uZXh0KCkpfSxjb25maWd1cmFibGU6ITAsZW51bWVyYWJsZTohMSx3cml0YWJsZTohMH0sX2NyZWF0ZVJlc3VsdDp7dmFsdWU6ZnVuY3Rpb24odCl7cmV0dXJuIHQ9PT1lP3tkb25lOiEwLHZhbHVlOmV9Ontkb25lOiExLHZhbHVlOnRoaXMuX3Jlc29sdmUodCl9fSxjb25maWd1cmFibGU6ITAsZW51bWVyYWJsZTohMSx3cml0YWJsZTohMH0sX3Jlc29sdmU6e3ZhbHVlOmZ1bmN0aW9uKHQpe3JldHVybiB0aGlzLl9fbGlzdF9fW3RdfSxjb25maWd1cmFibGU6ITAsZW51bWVyYWJsZTohMSx3cml0YWJsZTohMH0sX3VuQmluZDp7dmFsdWU6ZnVuY3Rpb24oKXt0aGlzLl9fbGlzdF9fPW51bGwsZGVsZXRlIHRoaXMuX19yZWRvX18sdGhpcy5fX2NvbnRleHRfXyYmKHRoaXMuX19jb250ZXh0X18ub2ZmKCJfYWRkIix0aGlzLl9vbkFkZC5iaW5kKHRoaXMpKSx0aGlzLl9fY29udGV4dF9fLm9mZigiX2RlbGV0ZSIsdGhpcy5fb25EZWxldGUuYmluZCh0aGlzKSksdGhpcy5fX2NvbnRleHRfXy5vZmYoIl9jbGVhciIsdGhpcy5fb25DbGVhci5iaW5kKHRoaXMpKSx0aGlzLl9fY29udGV4dF9fPW51bGwpfSxjb25maWd1cmFibGU6ITAsZW51bWVyYWJsZTohMSx3cml0YWJsZTohMH0sdG9TdHJpbmc6e3ZhbHVlOmZ1bmN0aW9uKCl7cmV0dXJuIltvYmplY3QgSXRlcmF0b3JdIn0sY29uZmlndXJhYmxlOiEwLGVudW1lcmFibGU6ITEsd3JpdGFibGU6ITB9fSx7X29uQWRkOnt2YWx1ZTpmdW5jdGlvbih0KXtpZighKHQ+PXRoaXMuX19uZXh0SW5kZXhfXykpe2lmKCsrdGhpcy5fX25leHRJbmRleF9fLCF0aGlzLl9fcmVkb19fKXJldHVybiB2b2lkIE9iamVjdC5kZWZpbmVQcm9wZXJ0eSh0aGlzLCJfX3JlZG9fXyIse3ZhbHVlOlt0XSxjb25maWd1cmFibGU6ITAsZW51bWVyYWJsZTohMSx3cml0YWJsZTohMX0pO3RoaXMuX19yZWRvX18uZm9yRWFjaCgoZnVuY3Rpb24oZSxyKXtlPj10JiYodGhpcy5fX3JlZG9fX1tyXT0rK2UpfSksdGhpcyksdGhpcy5fX3JlZG9fXy5wdXNoKHQpfX0sY29uZmlndXJhYmxlOiEwLGVudW1lcmFibGU6ITEsd3JpdGFibGU6ITB9LF9vbkRlbGV0ZTp7dmFsdWU6ZnVuY3Rpb24odCl7dmFyIGU7dD49dGhpcy5fX25leHRJbmRleF9ffHwoLS10aGlzLl9fbmV4dEluZGV4X18sdGhpcy5fX3JlZG9fXyYmKC0xIT09KGU9dGhpcy5fX3JlZG9fXy5pbmRleE9mKHQpKSYmdGhpcy5fX3JlZG9fXy5zcGxpY2UoZSwxKSx0aGlzLl9fcmVkb19fLmZvckVhY2goKGZ1bmN0aW9uKGUscil7ZT50JiYodGhpcy5fX3JlZG9fX1tyXT0tLWUpfSksdGhpcykpKX0sY29uZmlndXJhYmxlOiEwLGVudW1lcmFibGU6ITEsd3JpdGFibGU6ITB9LF9vbkNsZWFyOnt2YWx1ZTpmdW5jdGlvbigpe3RoaXMuX19yZWRvX18mJnQuY2FsbCh0aGlzLl9fcmVkb19fKSx0aGlzLl9fbmV4dEluZGV4X189MH0sY29uZmlndXJhYmxlOiEwLGVudW1lcmFibGU6ITEsd3JpdGFibGU6ITB9fSkpLE9iamVjdC5kZWZpbmVQcm9wZXJ0eShyLnByb3RvdHlwZSxTeW1ib2wuaXRlcmF0b3Ise3ZhbHVlOmZ1bmN0aW9uKCl7cmV0dXJuIHRoaXN9LGNvbmZpZ3VyYWJsZTohMCxlbnVtZXJhYmxlOiExLHdyaXRhYmxlOiEwfSksT2JqZWN0LmRlZmluZVByb3BlcnR5KHIucHJvdG90eXBlLFN5bWJvbC50b1N0cmluZ1RhZyx7dmFsdWU6Ikl0ZXJhdG9yIixjb25maWd1cmFibGU6ITEsZW51bWVyYWJsZTohMSx3cml0YWJsZTohMH0pLHJ9KCksTj1mdW5jdGlvbigpe3ZhciB0PWZ1bmN0aW9uKGUscil7aWYoISh0aGlzIGluc3RhbmNlb2YgdCkpcmV0dXJuIG5ldyB0KGUscik7QS5jYWxsKHRoaXMsZSkscj1yP1N0cmluZy5wcm90b3R5cGUuaW5jbHVkZXMuY2FsbChyLCJrZXkrdmFsdWUiKT8ia2V5K3ZhbHVlIjpTdHJpbmcucHJvdG90eXBlLmluY2x1ZGVzLmNhbGwociwia2V5Iik/ImtleSI6InZhbHVlIjoidmFsdWUiLE9iamVjdC5kZWZpbmVQcm9wZXJ0eSh0aGlzLCJfX2tpbmRfXyIse3ZhbHVlOnIsY29uZmlndXJhYmxlOiExLGVudW1lcmFibGU6ITEsd3JpdGFibGU6ITF9KX07cmV0dXJuIE9iamVjdC5zZXRQcm90b3R5cGVPZiYmT2JqZWN0LnNldFByb3RvdHlwZU9mKHQsQS5wcm90b3R5cGUpLHQucHJvdG90eXBlPU9iamVjdC5jcmVhdGUoQS5wcm90b3R5cGUse2NvbnN0cnVjdG9yOnt2YWx1ZTp0LGNvbmZpZ3VyYWJsZTohMCxlbnVtZXJhYmxlOiExLHdyaXRhYmxlOiEwfSxfcmVzb2x2ZTp7dmFsdWU6ZnVuY3Rpb24odCl7cmV0dXJuInZhbHVlIj09PXRoaXMuX19raW5kX18/dGhpcy5fX2xpc3RfX1t0XToia2V5K3ZhbHVlIj09PXRoaXMuX19raW5kX18/W3QsdGhpcy5fX2xpc3RfX1t0XV06dH0sY29uZmlndXJhYmxlOiEwLGVudW1lcmFibGU6ITEsd3JpdGFibGU6ITB9LHRvU3RyaW5nOnt2YWx1ZTpmdW5jdGlvbigpe3JldHVybiJbb2JqZWN0IEFycmF5IEl0ZXJhdG9yXSJ9LGNvbmZpZ3VyYWJsZTohMCxlbnVtZXJhYmxlOiExLHdyaXRhYmxlOiEwfX0pLHR9KCk7IlN5bWJvbCJpbiB0JiYiaXRlcmF0b3IiaW4gU3ltYm9sJiYiZnVuY3Rpb24iPT10eXBlb2YgQXJyYXkucHJvdG90eXBlW1N5bWJvbC5pdGVyYXRvcl0/aShBcnJheS5wcm90b3R5cGUsInZhbHVlcyIsQXJyYXkucHJvdG90eXBlW1N5bWJvbC5pdGVyYXRvcl0pOmkoQXJyYXkucHJvdG90eXBlLCJ2YWx1ZXMiLChmdW5jdGlvbigpe3ZhciB0PWwodGhpcyk7cmV0dXJuIG5ldyBOKHQsInZhbHVlIil9KSksaShBcnJheS5wcm90b3R5cGUsU3ltYm9sLml0ZXJhdG9yLEFycmF5LnByb3RvdHlwZS52YWx1ZXMpLGkoT2JqZWN0LCJmcm9tRW50cmllcyIsKGZ1bmN0aW9uKHQpe2EodCk7cmV0dXJuIFAoe30sdCwoZnVuY3Rpb24odCxlKXtuKHRoaXMsVCh0KSxlKX0pKX0pKX0oIm9iamVjdCI9PXR5cGVvZiB3aW5kb3cmJndpbmRvd3x8Im9iamVjdCI9PXR5cGVvZiBzZWxmJiZzZWxmfHwib2JqZWN0Ij09dHlwZW9mIGdsb2JhbCYmZ2xvYmFsfHx7fSksZnVuY3Rpb24odCxlKXtmdW5jdGlvbiByKHQsZSxyKXt2YXIgbj17dmFsdWU6cix3cml0YWJsZTohMCxlbnVtZXJhYmxlOiExLGNvbmZpZ3VyYWJsZTohMH07T2JqZWN0LmRlZmluZVByb3BlcnR5KHQsZSxuKX12YXIgbixpO3IoT2JqZWN0LCJrZXlzIixmdW5jdGlvbigpe2Z1bmN0aW9uIHQoKXt2YXIgdDt0cnl7dD1PYmplY3QuY3JlYXRlKHt9KX1jYXRjaCh0KXtyZXR1cm4hMH1yZXR1cm4gaS5jYWxsKHQsIl9fcHJvdG9fXyIpfXZhciByPU9iamVjdC5wcm90b3R5cGUuaGFzT3duUHJvcGVydHksbj1PYmplY3QucHJvdG90eXBlLnRvU3RyaW5nLGk9T2JqZWN0LnByb3RvdHlwZS5wcm9wZXJ0eUlzRW51bWVyYWJsZSxvPSFpLmNhbGwoe3RvU3RyaW5nOm51bGx9LCJ0b1N0cmluZyIpLHM9aS5jYWxsKChmdW5jdGlvbigpe30pLCJwcm90b3R5cGUiKSxhPVsidG9TdHJpbmciLCJ0b0xvY2FsZVN0cmluZyIsInZhbHVlT2YiLCJoYXNPd25Qcm9wZXJ0eSIsImlzUHJvdG90eXBlT2YiLCJwcm9wZXJ0eUlzRW51bWVyYWJsZSIsImNvbnN0cnVjdG9yIl0sYz1mdW5jdGlvbih0KXt2YXIgZT10LmNvbnN0cnVjdG9yO3JldHVybiBlJiZlLnByb3RvdHlwZT09PXR9LGw9eyRjb25zb2xlOiEwLCRleHRlcm5hbDohMCwkZnJhbWU6ITAsJGZyYW1lRWxlbWVudDohMCwkZnJhbWVzOiEwLCRpbm5lckhlaWdodDohMCwkaW5uZXJXaWR0aDohMCwkb3V0ZXJIZWlnaHQ6ITAsJG91dGVyV2lkdGg6ITAsJHBhZ2VYT2Zmc2V0OiEwLCRwYWdlWU9mZnNldDohMCwkcGFyZW50OiEwLCRzY3JvbGxMZWZ0OiEwLCRzY3JvbGxUb3A6ITAsJHNjcm9sbFg6ITAsJHNjcm9sbFk6ITAsJHNlbGY6ITAsJHdlYmtpdEluZGV4ZWREQjohMCwkd2Via2l0U3RvcmFnZUluZm86ITAsJHdpbmRvdzohMH0sdT1mdW5jdGlvbigpe2lmKCJ1bmRlZmluZWQiPT10eXBlb2Ygd2luZG93KXJldHVybiExO2Zvcih2YXIgdCBpbiB3aW5kb3cpdHJ5e2lmKCFsWyIkIit0XSYmci5jYWxsKHdpbmRvdyx0KSYmbnVsbCE9PXdpbmRvd1t0XSYmIm9iamVjdCI9PXR5cGVvZiB3aW5kb3dbdF0pdHJ5e2Mod2luZG93W3RdKX1jYXRjaCh0KXtyZXR1cm4hMH19Y2F0Y2godCl7cmV0dXJuITB9cmV0dXJuITF9KCkscD1mdW5jdGlvbih0KXtpZigidW5kZWZpbmVkIj09dHlwZW9mIHdpbmRvd3x8IXUpcmV0dXJuIGModCk7dHJ5e3JldHVybiBjKHQpfWNhdGNoKHQpe3JldHVybiExfX07cmV0dXJuIGZ1bmN0aW9uKGkpe3ZhciBjPSJbb2JqZWN0IEZ1bmN0aW9uXSI9PT1uLmNhbGwoaSksbD1mdW5jdGlvbih0KXt2YXIgZT1uLmNhbGwodCkscj0iW29iamVjdCBBcmd1bWVudHNdIj09PWU7cmV0dXJuIHJ8fChyPSJbb2JqZWN0IEFycmF5XSIhPT1lJiZudWxsIT09dCYmIm9iamVjdCI9PXR5cGVvZiB0JiYibnVtYmVyIj09dHlwZW9mIHQubGVuZ3RoJiZ0Lmxlbmd0aD49MCYmIltvYmplY3QgRnVuY3Rpb25dIj09PW4uY2FsbCh0LmNhbGxlZSkpLHJ9KGkpLHU9IltvYmplY3QgU3RyaW5nXSI9PT1uLmNhbGwoaSksaD1bXTtpZihpPT09ZXx8bnVsbD09PWkpdGhyb3cgbmV3IFR5cGVFcnJvcigiQ2Fubm90IGNvbnZlcnQgdW5kZWZpbmVkIG9yIG51bGwgdG8gb2JqZWN0Iik7dmFyIGY9cyYmYztpZih1JiZpLmxlbmd0aD4wJiYhci5jYWxsKGksMCkpZm9yKHZhciBkPTA7ZDxpLmxlbmd0aDsrK2QpaC5wdXNoKFN0cmluZyhkKSk7aWYobCYmaS5sZW5ndGg+MClmb3IodmFyIHk9MDt5PGkubGVuZ3RoOysreSloLnB1c2goU3RyaW5nKHkpKTtlbHNlIGZvcih2YXIgYiBpbiBpKXQoKSYmIl9fcHJvdG9fXyI9PT1ifHxmJiYicHJvdG90eXBlIj09PWJ8fCFyLmNhbGwoaSxiKXx8aC5wdXNoKFN0cmluZyhiKSk7aWYobylmb3IodmFyIGc9cChpKSx2PTA7djxhLmxlbmd0aDsrK3YpZyYmImNvbnN0cnVjdG9yIj09PWFbdl18fCFyLmNhbGwoaSxhW3ZdKXx8aC5wdXNoKGFbdl0pO3JldHVybiBofX0oKSksbj17fS50b1N0cmluZyxpPSIiLnNwbGl0LHIoT2JqZWN0LCJ2YWx1ZXMiLChmdW5jdGlvbih0KXt2YXIgcj0iW29iamVjdCBTdHJpbmddIj09bi5jYWxsKHQpP2kuY2FsbCh0LCIiKTpmdW5jdGlvbih0KXtpZihudWxsPT09dHx8dD09PWUpdGhyb3cgVHlwZUVycm9yKCk7cmV0dXJuIE9iamVjdCh0KX0odCk7cmV0dXJuIE9iamVjdC5rZXlzKHIpLm1hcCgoZnVuY3Rpb24odCl7cmV0dXJuIHJbdF19KSl9KSl9KCksZnVuY3Rpb24odCxlKXtmdW5jdGlvbiByKHQsZSl7dmFyIHI9YXJndW1lbnRzLmxlbmd0aD4yP2FyZ3VtZW50c1syXTpbXTtpZighMT09PW8odCkpdGhyb3cgbmV3IFR5cGVFcnJvcihPYmplY3QucHJvdG90eXBlLnRvU3RyaW5nLmNhbGwodCkrImlzIG5vdCBhIGZ1bmN0aW9uLiIpO3JldHVybiB0LmFwcGx5KGUscil9ZnVuY3Rpb24gbih0LGUscil7dmFyIG49e3ZhbHVlOnIsd3JpdGFibGU6ITAsZW51bWVyYWJsZTohMSxjb25maWd1cmFibGU6ITB9O09iamVjdC5kZWZpbmVQcm9wZXJ0eSh0LGUsbil9ZnVuY3Rpb24gaSh0LGUpe3JldHVybiB0W2VdfWZ1bmN0aW9uIG8odCl7cmV0dXJuImZ1bmN0aW9uIj09dHlwZW9mIHR9ZnVuY3Rpb24gcyh0KXtpZihudWxsPT09dHx8dD09PWUpdGhyb3cgVHlwZUVycm9yKCk7cmV0dXJuIE9iamVjdCh0KX1mdW5jdGlvbiBhKHQscil7dmFyIG49ZnVuY3Rpb24odCxlKXtyZXR1cm4gcyh0KVtlXX0odCxyKTtpZihudWxsPT09bnx8bj09PWUpcmV0dXJuIGU7aWYoITE9PT1vKG4pKXRocm93IG5ldyBUeXBlRXJyb3IoIk1ldGhvZCBub3QgY2FsbGFibGU6ICIrcik7cmV0dXJuIG59ZnVuY3Rpb24gYyhlKXtzd2l0Y2godHlwZW9mIGUpe2Nhc2UidW5kZWZpbmVkIjpyZXR1cm4idW5kZWZpbmVkIjtjYXNlImJvb2xlYW4iOnJldHVybiJib29sZWFuIjtjYXNlIm51bWJlciI6cmV0dXJuIm51bWJlciI7Y2FzZSJzdHJpbmciOnJldHVybiJzdHJpbmciO2Nhc2Uic3ltYm9sIjpyZXR1cm4ic3ltYm9sIjtkZWZhdWx0OnJldHVybiBudWxsPT09ZT8ibnVsbCI6IlN5bWJvbCJpbiB0JiYoZSBpbnN0YW5jZW9mIHQuU3ltYm9sfHxlLmNvbnN0cnVjdG9yPT09dC5TeW1ib2wpPyJzeW1ib2wiOiJvYmplY3QifX1mdW5jdGlvbiBsKHQsZSl7cmV0dXJuIGModCk9PT1jKGUpJiYoIm51bWJlciI9PT1jKHQpPyEoIWlzTmFOKHQpfHwhaXNOYU4oZSkpfHwxL3Q9PTEvMCYmMS9lPT0tMS8wfHwxL3Q9PS0xLzAmJjEvZT09MS8wfHx0PT09ZTpmdW5jdGlvbih0LGUpe3JldHVybiB0PT09ZX0odCxlKSl9ZnVuY3Rpb24gdSh0KXtpZigic3ltYm9sIj09PWModCkpdGhyb3cgbmV3IFR5cGVFcnJvcigiQ2Fubm90IGNvbnZlcnQgYSBTeW1ib2wgdmFsdWUgdG8gYSBudW1iZXIiKTt2YXIgZT1OdW1iZXIodCk7cmV0dXJuIGlzTmFOKGUpPzA6MS9lPT0xLzB8fDEvZT09LTEvMHx8ZT09PTEvMHx8ZT09PS0xLzA/ZTooZTwwPy0xOjEpKk1hdGguZmxvb3IoTWF0aC5hYnMoZSkpfWZ1bmN0aW9uIHAobil7dmFyIHM9YXJndW1lbnRzLmxlbmd0aD4xP2FyZ3VtZW50c1sxXTplO2lmKCJvYmplY3QiPT09YyhuKSl7aWYoYXJndW1lbnRzLmxlbmd0aDwyKXZhciBsPSJkZWZhdWx0IjtlbHNlIHM9PT1TdHJpbmc/bD0ic3RyaW5nIjpzPT09TnVtYmVyJiYobD0ibnVtYmVyIik7dmFyIHU9ImZ1bmN0aW9uIj09dHlwZW9mIHQuU3ltYm9sJiYic3ltYm9sIj09dHlwZW9mIHQuU3ltYm9sLnRvUHJpbWl0aXZlP2Eobix0LlN5bWJvbC50b1ByaW1pdGl2ZSk6ZTtpZih1IT09ZSl7dmFyIHA9cih1LG4sW2xdKTtpZigib2JqZWN0IiE9PWMocCkpcmV0dXJuIHA7dGhyb3cgbmV3IFR5cGVFcnJvcigiQ2Fubm90IGNvbnZlcnQgZXhvdGljIG9iamVjdCB0byBwcmltaXRpdmUuIil9cmV0dXJuImRlZmF1bHQiPT09bCYmKGw9Im51bWJlciIpLGZ1bmN0aW9uKHQsZSl7aWYoInN0cmluZyI9PT1lKXZhciBuPVsidG9TdHJpbmciLCJ2YWx1ZU9mIl07ZWxzZSBuPVsidmFsdWVPZiIsInRvU3RyaW5nIl07Zm9yKHZhciBzPTA7czxuLmxlbmd0aDsrK3Mpe3ZhciBhPWkodCxuW3NdKTtpZihvKGEpKXt2YXIgbD1yKGEsdCk7aWYoIm9iamVjdCIhPT1jKGwpKXJldHVybiBsfX10aHJvdyBuZXcgVHlwZUVycm9yKCJDYW5ub3QgY29udmVydCB0byBwcmltaXRpdmUuIil9KG4sbCl9cmV0dXJuIG59ZnVuY3Rpb24gaCh0KXtzd2l0Y2goYyh0KSl7Y2FzZSJzeW1ib2wiOnRocm93IG5ldyBUeXBlRXJyb3IoIkNhbm5vdCBjb252ZXJ0IGEgU3ltYm9sIHZhbHVlIHRvIGEgc3RyaW5nIik7Y2FzZSJvYmplY3QiOnJldHVybiBoKHAodCxTdHJpbmcpKTtkZWZhdWx0OnJldHVybiBTdHJpbmcodCl9fXZhciBmLGQseSxiLGcsdjtuKE9iamVjdCwia2V5cyIsZnVuY3Rpb24oKXtmdW5jdGlvbiB0KCl7dmFyIHQ7dHJ5e3Q9T2JqZWN0LmNyZWF0ZSh7fSl9Y2F0Y2godCl7cmV0dXJuITB9cmV0dXJuIGkuY2FsbCh0LCJfX3Byb3RvX18iKX12YXIgcj1PYmplY3QucHJvdG90eXBlLmhhc093blByb3BlcnR5LG49T2JqZWN0LnByb3RvdHlwZS50b1N0cmluZyxpPU9iamVjdC5wcm90b3R5cGUucHJvcGVydHlJc0VudW1lcmFibGUsbz0haS5jYWxsKHt0b1N0cmluZzpudWxsfSwidG9TdHJpbmciKSxzPWkuY2FsbCgoZnVuY3Rpb24oKXt9KSwicHJvdG90eXBlIiksYT1bInRvU3RyaW5nIiwidG9Mb2NhbGVTdHJpbmciLCJ2YWx1ZU9mIiwiaGFzT3duUHJvcGVydHkiLCJpc1Byb3RvdHlwZU9mIiwicHJvcGVydHlJc0VudW1lcmFibGUiLCJjb25zdHJ1Y3RvciJdLGM9ZnVuY3Rpb24odCl7dmFyIGU9dC5jb25zdHJ1Y3RvcjtyZXR1cm4gZSYmZS5wcm90b3R5cGU9PT10fSxsPXskY29uc29sZTohMCwkZXh0ZXJuYWw6ITAsJGZyYW1lOiEwLCRmcmFtZUVsZW1lbnQ6ITAsJGZyYW1lczohMCwkaW5uZXJIZWlnaHQ6ITAsJGlubmVyV2lkdGg6ITAsJG91dGVySGVpZ2h0OiEwLCRvdXRlcldpZHRoOiEwLCRwYWdlWE9mZnNldDohMCwkcGFnZVlPZmZzZXQ6ITAsJHBhcmVudDohMCwkc2Nyb2xsTGVmdDohMCwkc2Nyb2xsVG9wOiEwLCRzY3JvbGxYOiEwLCRzY3JvbGxZOiEwLCRzZWxmOiEwLCR3ZWJraXRJbmRleGVkREI6ITAsJHdlYmtpdFN0b3JhZ2VJbmZvOiEwLCR3aW5kb3c6ITB9LHU9ZnVuY3Rpb24oKXtpZigidW5kZWZpbmVkIj09dHlwZW9mIHdpbmRvdylyZXR1cm4hMTtmb3IodmFyIHQgaW4gd2luZG93KXRyeXtpZighbFsiJCIrdF0mJnIuY2FsbCh3aW5kb3csdCkmJm51bGwhPT13aW5kb3dbdF0mJiJvYmplY3QiPT10eXBlb2Ygd2luZG93W3RdKXRyeXtjKHdpbmRvd1t0XSl9Y2F0Y2godCl7cmV0dXJuITB9fWNhdGNoKHQpe3JldHVybiEwfXJldHVybiExfSgpLHA9ZnVuY3Rpb24odCl7aWYoInVuZGVmaW5lZCI9PXR5cGVvZiB3aW5kb3d8fCF1KXJldHVybiBjKHQpO3RyeXtyZXR1cm4gYyh0KX1jYXRjaCh0KXtyZXR1cm4hMX19O3JldHVybiBmdW5jdGlvbihpKXt2YXIgYz0iW29iamVjdCBGdW5jdGlvbl0iPT09bi5jYWxsKGkpLGw9ZnVuY3Rpb24odCl7dmFyIGU9bi5jYWxsKHQpLHI9IltvYmplY3QgQXJndW1lbnRzXSI9PT1lO3JldHVybiByfHwocj0iW29iamVjdCBBcnJheV0iIT09ZSYmbnVsbCE9PXQmJiJvYmplY3QiPT10eXBlb2YgdCYmIm51bWJlciI9PXR5cGVvZiB0Lmxlbmd0aCYmdC5sZW5ndGg+PTAmJiJbb2JqZWN0IEZ1bmN0aW9uXSI9PT1uLmNhbGwodC5jYWxsZWUpKSxyfShpKSx1PSJbb2JqZWN0IFN0cmluZ10iPT09bi5jYWxsKGkpLGg9W107aWYoaT09PWV8fG51bGw9PT1pKXRocm93IG5ldyBUeXBlRXJyb3IoIkNhbm5vdCBjb252ZXJ0IHVuZGVmaW5lZCBvciBudWxsIHRvIG9iamVjdCIpO3ZhciBmPXMmJmM7aWYodSYmaS5sZW5ndGg+MCYmIXIuY2FsbChpLDApKWZvcih2YXIgZD0wO2Q8aS5sZW5ndGg7KytkKWgucHVzaChTdHJpbmcoZCkpO2lmKGwmJmkubGVuZ3RoPjApZm9yKHZhciB5PTA7eTxpLmxlbmd0aDsrK3kpaC5wdXNoKFN0cmluZyh5KSk7ZWxzZSBmb3IodmFyIGIgaW4gaSl0KCkmJiJfX3Byb3RvX18iPT09Ynx8ZiYmInByb3RvdHlwZSI9PT1ifHwhci5jYWxsKGksYil8fGgucHVzaChTdHJpbmcoYikpO2lmKG8pZm9yKHZhciBnPXAoaSksdj0wO3Y8YS5sZW5ndGg7Kyt2KWcmJiJjb25zdHJ1Y3RvciI9PT1hW3ZdfHwhci5jYWxsKGksYVt2XSl8fGgucHVzaChhW3ZdKTtyZXR1cm4gaH19KCkpLG4oQXJyYXkucHJvdG90eXBlLCJpbmNsdWRlcyIsKGZ1bmN0aW9uKHQpe3ZhciBlPXModGhpcykscj1mdW5jdGlvbih0KXt2YXIgZT11KHQpO3JldHVybiBlPD0wPzA6TWF0aC5taW4oZSxNYXRoLnBvdygyLDUzKS0xKX0oaShlLCJsZW5ndGgiKSk7aWYoMD09PXIpcmV0dXJuITE7dmFyIG49dShhcmd1bWVudHNbMV0pO2lmKG4+PTApdmFyIG89bjtlbHNlKG89cituKTwwJiYobz0wKTtmb3IoO288cjspe2lmKGwodCxpKGUsaChvKSkpKXJldHVybiEwO28rPTF9cmV0dXJuITF9KSksZj17fS50b1N0cmluZyxkPSIiLnNwbGl0LHk9W10uY29uY2F0LGI9T2JqZWN0LnByb3RvdHlwZS5oYXNPd25Qcm9wZXJ0eSxnPU9iamVjdC5nZXRPd25Qcm9wZXJ0eU5hbWVzfHxPYmplY3Qua2V5cyx2PSJvYmplY3QiPT10eXBlb2YgdD9nKHQpOltdLG4oT2JqZWN0LCJnZXRPd25Qcm9wZXJ0eU5hbWVzIiwoZnVuY3Rpb24odCl7dmFyIGU9cyh0KTtpZigiW29iamVjdCBXaW5kb3ddIj09PWYuY2FsbChlKSl0cnl7cmV0dXJuIGcoZSl9Y2F0Y2godCl7cmV0dXJuIHkuY2FsbChbXSx2KX1lPSJbb2JqZWN0IFN0cmluZ10iPT1mLmNhbGwoZSk/ZC5jYWxsKGUsIiIpOk9iamVjdChlKTtmb3IodmFyIHI9ZyhlKSxuPVsibGVuZ3RoIiwicHJvdG90eXBlIl0saT0wO2k8bi5sZW5ndGg7aSsrKXt2YXIgbz1uW2ldO2IuY2FsbChlLG8pJiYhci5pbmNsdWRlcyhvKSYmci5wdXNoKG8pfWlmKHIuaW5jbHVkZXMoIl9fcHJvdG9fXyIpKXt2YXIgYT1yLmluZGV4T2YoIl9fcHJvdG9fXyIpO3Iuc3BsaWNlKGEsMSl9cmV0dXJuIHJ9KSksZnVuY3Rpb24oKXt2YXIgdD1PYmplY3QuZ2V0T3duUHJvcGVydHlEZXNjcmlwdG9yLGU9ZnVuY3Rpb24oKXt0cnl7cmV0dXJuIDE9PT1PYmplY3QuZGVmaW5lUHJvcGVydHkoZG9jdW1lbnQuY3JlYXRlRWxlbWVudCgiZGl2IiksIm9uZSIse2dldDpmdW5jdGlvbigpe3JldHVybiAxfX0pLm9uZX1jYXRjaCh0KXtyZXR1cm4hMX19LHI9e30udG9TdHJpbmcsaT0iIi5zcGxpdDtuKE9iamVjdCwiZ2V0T3duUHJvcGVydHlEZXNjcmlwdG9yIiwoZnVuY3Rpb24obixvKXt2YXIgYT1zKG4pO2E9KCJzdHJpbmciPT09YyhhKXx8YSBpbnN0YW5jZW9mIFN0cmluZykmJiJbb2JqZWN0IFN0cmluZ10iPT1yLmNhbGwobik/aS5jYWxsKG4sIiIpOk9iamVjdChuKTt2YXIgbD1mdW5jdGlvbih0KXt2YXIgZT1wKHQsU3RyaW5nKTtyZXR1cm4ic3ltYm9sIj09PWMoZSk/ZTpoKGUpfShvKTtpZihlKXRyeXtyZXR1cm4gdChhLGwpfWNhdGNoKHQpe31pZihmdW5jdGlvbih0LGUpe3JldHVybiBPYmplY3QucHJvdG90eXBlLmhhc093blByb3BlcnR5LmNhbGwodCxlKX0oYSxsKSlyZXR1cm57ZW51bWVyYWJsZTohMCxjb25maWd1cmFibGU6ITAsd3JpdGFibGU6ITAsdmFsdWU6YVtsXX19KSl9KCksZnVuY3Rpb24ocixuLGkpe3ZhciBvLHM9ZnVuY3Rpb24oKXt0cnl7dmFyIHQ9e307cmV0dXJuIHIuZGVmaW5lUHJvcGVydHkodCwidCIse2NvbmZpZ3VyYWJsZTohMCxlbnVtZXJhYmxlOiExLGdldDpmdW5jdGlvbigpe3JldHVybiEwfSxzZXQ6ZX0pLCEhdC50fWNhdGNoKHQpe3JldHVybiExfX0oKSxhPTAsbD0iIitNYXRoLnJhbmRvbSgpLHU9Il9fAXN5bWJvbDoiLHA9Il9fAXN5bWJvbEBAIitsLGg9e30sZj0iZGVmaW5lUHJvcGVydHkiLGQ9ImRlZmluZVByb3BlcnRpZXMiLHk9ImdldE93blByb3BlcnR5TmFtZXMiLGI9ImdldE93blByb3BlcnR5RGVzY3JpcHRvciIsZz0icHJvcGVydHlJc0VudW1lcmFibGUiLHY9ci5wcm90b3R5cGUsbT12Lmhhc093blByb3BlcnR5LF89dltnXSx3PXYudG9TdHJpbmcsUz1BcnJheS5wcm90b3R5cGUuY29uY2F0LEU9ci5nZXRPd25Qcm9wZXJ0eU5hbWVzP3IuZ2V0T3duUHJvcGVydHlOYW1lcyh0KTpbXSxPPXJbeV0saj1mdW5jdGlvbih0KXtpZigiW29iamVjdCBXaW5kb3ddIj09PXcuY2FsbCh0KSl0cnl7cmV0dXJuIE8odCl9Y2F0Y2godCl7cmV0dXJuIFMuY2FsbChbXSxFKX1yZXR1cm4gTyh0KX0sVD1yW2JdLFA9ci5jcmVhdGUsQT1yLmtleXMsTj1yLmZyZWV6ZXx8cixDPXJbZl0sST1yW2RdLEw9VChyLHkpLE09ZnVuY3Rpb24odCxlLHIpe2lmKCFtLmNhbGwodCxwKSl0cnl7Qyh0LHAse2VudW1lcmFibGU6ITEsY29uZmlndXJhYmxlOiExLHdyaXRhYmxlOiExLHZhbHVlOnt9fSl9Y2F0Y2goZSl7dFtwXT17fX10W3BdWyJAQCIrZV09cn0sRD1mdW5jdGlvbigpe30seD1mdW5jdGlvbih0KXtyZXR1cm4gdCE9cCYmIW0uY2FsbChGLHQpfSxSPWZ1bmN0aW9uKHQpe3JldHVybiB0IT1wJiZtLmNhbGwoRix0KX0saz1mdW5jdGlvbih0KXt2YXIgZT0iIit0O3JldHVybiBSKGUpP20uY2FsbCh0aGlzLGUpJiZ0aGlzW3BdJiZ0aGlzW3BdWyJAQCIrZV06Xy5jYWxsKHRoaXMsdCl9LEg9ZnVuY3Rpb24odCl7dmFyIGU9e2VudW1lcmFibGU6ITEsY29uZmlndXJhYmxlOiEwLGdldDpELHNldDpmdW5jdGlvbihlKXtvKHRoaXMsdCx7ZW51bWVyYWJsZTohMSxjb25maWd1cmFibGU6ITAsd3JpdGFibGU6ITAsdmFsdWU6ZX0pLE0odGhpcyx0LCEwKX19O3RyeXtDKHYsdCxlKX1jYXRjaChyKXt2W3RdPWUudmFsdWV9Rlt0XT1DKHIodCksImNvbnN0cnVjdG9yIixVKTt2YXIgbj1UKCQucHJvdG90eXBlLCJkZXNjcmlwdGlvbiIpO3JldHVybiBuJiZDKEZbdF0sImRlc2NyaXB0aW9uIixuKSxOKEZbdF0pfSxHPWZ1bmN0aW9uKHQpe3ZhciByPWZ1bmN0aW9uKHQpe2lmKCJzeW1ib2wiPT09Yyh0KSlyZXR1cm4gdDt0aHJvdyBUeXBlRXJyb3IodCsiIGlzIG5vdCBhIHN5bWJvbCIpfSh0KTtpZihWKXt2YXIgbj1LKHIpO2lmKCIiIT09bilyZXR1cm4gbi5zbGljZSgxLC0xKX1pZihoW3JdIT09ZSlyZXR1cm4gaFtyXTt2YXIgaT1yLnRvU3RyaW5nKCksbz1pLmxhc3RJbmRleE9mKCIwLiIpO3JldHVybiIiPT09KGk9aS5zbGljZSgxMCxvKSk/ZTppfSwkPWZ1bmN0aW9uIHQoKXt2YXIgbj1hcmd1bWVudHNbMF07aWYodGhpcyBpbnN0YW5jZW9mIHQpdGhyb3cgbmV3IFR5cGVFcnJvcigiU3ltYm9sIGlzIG5vdCBhIGNvbnN0cnVjdG9yIik7dmFyIGk9dS5jb25jYXQobnx8IiIsbCwrK2EpO249PT1lfHxudWxsIT09biYmIWlzTmFOKG4pJiYiIiE9PVN0cmluZyhuKXx8KGhbaV09U3RyaW5nKG4pKTt2YXIgbz1IKGkpO3JldHVybiBzfHxyLmRlZmluZVByb3BlcnR5KG8sImRlc2NyaXB0aW9uIix7Y29uZmlndXJhYmxlOiEwLGVudW1lcmFibGU6ITEsdmFsdWU6RyhvKX0pLG99LEY9UChudWxsKSxVPXt2YWx1ZTokfSx6PWZ1bmN0aW9uKHQpe3JldHVybiBGW3RdfSxCPWZ1bmN0aW9uKHQsZSxyKXt2YXIgbj0iIitlO3JldHVybiBSKG4pPyhvKHQsbixyLmVudW1lcmFibGU/ZnVuY3Rpb24odCl7dmFyIGU9UCh0KTtyZXR1cm4gZS5lbnVtZXJhYmxlPSExLGV9KHIpOnIpLE0odCxuLCEhci5lbnVtZXJhYmxlKSk6Qyh0LGUsciksdH0sVz1mdW5jdGlvbih0KXtyZXR1cm4gaih0KS5maWx0ZXIodD09PXY/ZnVuY3Rpb24odCl7cmV0dXJuIGZ1bmN0aW9uKGUpe3JldHVybiBtLmNhbGwodCxwKSYmbS5jYWxsKHRbcF0sIkBAIitlKX19KHQpOlIpLm1hcCh6KX07TC52YWx1ZT1CLEMocixmLEwpLEwudmFsdWU9VyxDKHIsImdldE93blByb3BlcnR5U3ltYm9scyIsTCksTC52YWx1ZT1mdW5jdGlvbih0KXtyZXR1cm4gaih0KS5maWx0ZXIoeCl9LEMocix5LEwpLEwudmFsdWU9ZnVuY3Rpb24odCxlKXt2YXIgcj1XKGUpO3JldHVybiByLmxlbmd0aD9BKGUpLmNvbmNhdChyKS5mb3JFYWNoKChmdW5jdGlvbihyKXtrLmNhbGwoZSxyKSYmQih0LHIsZVtyXSl9KSk6SSh0LGUpLHR9LEMocixkLEwpLEwudmFsdWU9ayxDKHYsZyxMKSxMLnZhbHVlPSQsQyhpLCJTeW1ib2wiLEwpLEwudmFsdWU9ZnVuY3Rpb24odCl7dmFyIGU9dS5jb25jYXQodSx0LGwpO3JldHVybiBlIGluIHY/RltlXTpIKGUpfSxDKCQsImZvciIsTCksTC52YWx1ZT1mdW5jdGlvbih0KXtpZih4KHQpKXRocm93IG5ldyBUeXBlRXJyb3IodCsiIGlzIG5vdCBhIHN5bWJvbCIpO3JldHVybiBtLmNhbGwoRix0KT90LnNsaWNlKDIwLC1sLmxlbmd0aCk6dm9pZCAwfSxDKCQsImtleUZvciIsTCksTC52YWx1ZT1mdW5jdGlvbih0LGUpe3ZhciByPVQodCxlKTtyZXR1cm4gciYmUihlKSYmKHIuZW51bWVyYWJsZT1rLmNhbGwodCxlKSkscn0sQyhyLGIsTCksTC52YWx1ZT1mdW5jdGlvbih0LGUpe3JldHVybiAxPT09YXJndW1lbnRzLmxlbmd0aHx8dm9pZCAwPT09ZT9QKHQpOmZ1bmN0aW9uKHQsZSl7dmFyIHI9UCh0KTtyZXR1cm4gaihlKS5mb3JFYWNoKChmdW5jdGlvbih0KXtrLmNhbGwoZSx0KSYmQihyLHQsZVt0XSl9KSkscn0odCxlKX0sQyhyLCJjcmVhdGUiLEwpO3ZhciBxPW51bGw9PT1mdW5jdGlvbigpe3JldHVybiB0aGlzfS5jYWxsKG51bGwpO2lmKEwudmFsdWU9cT9mdW5jdGlvbigpe3ZhciB0PXcuY2FsbCh0aGlzKTtyZXR1cm4iW29iamVjdCBTdHJpbmddIj09PXQmJlIodGhpcyk/IltvYmplY3QgU3ltYm9sXSI6dH06ZnVuY3Rpb24oKXtpZih0aGlzPT09d2luZG93KXJldHVybiJbb2JqZWN0IE51bGxdIjt2YXIgdD13LmNhbGwodGhpcyk7cmV0dXJuIltvYmplY3QgU3RyaW5nXSI9PT10JiZSKHRoaXMpPyJbb2JqZWN0IFN5bWJvbF0iOnR9LEModiwidG9TdHJpbmciLEwpLG89ZnVuY3Rpb24odCxlLHIpe3ZhciBuPVQodixlKTtkZWxldGUgdltlXSxDKHQsZSxyKSx0IT09diYmQyh2LGUsbil9LGZ1bmN0aW9uKCl7dHJ5e3ZhciB0PXt9O3JldHVybiByLmRlZmluZVByb3BlcnR5KHQsInQiLHtjb25maWd1cmFibGU6ITAsZW51bWVyYWJsZTohMSxnZXQ6ZnVuY3Rpb24oKXtyZXR1cm4hMH0sc2V0OmV9KSwhIXQudH1jYXRjaCh0KXtyZXR1cm4hMX19KCkpe3ZhciBLO3RyeXtLPUZ1bmN0aW9uKCJzIiwidmFyIHYgPSBzLnZhbHVlT2YoKTsgcmV0dXJuIHsgW3ZdKCkge30gfVt2XS5uYW1lOyIpfWNhdGNoKHQpe312YXIgVj1LJiYiaW5mZXJyZWQiPT09ZnVuY3Rpb24oKXt9Lm5hbWU/SzpudWxsO3IuZGVmaW5lUHJvcGVydHkoaS5TeW1ib2wucHJvdG90eXBlLCJkZXNjcmlwdGlvbiIse2NvbmZpZ3VyYWJsZTohMCxlbnVtZXJhYmxlOiExLGdldDpmdW5jdGlvbigpe3JldHVybiBHKHRoaXMpfX0pfX0oT2JqZWN0LDAsdCl9KCJvYmplY3QiPT10eXBlb2Ygd2luZG93JiZ3aW5kb3d8fCJvYmplY3QiPT10eXBlb2Ygc2VsZiYmc2VsZnx8Im9iamVjdCI9PXR5cGVvZiBnbG9iYWwmJmdsb2JhbHx8e30pLEVsZW1lbnQucHJvdG90eXBlLm1hdGNoZXM9RWxlbWVudC5wcm90b3R5cGUud2Via2l0TWF0Y2hlc1NlbGVjdG9yfHxFbGVtZW50LnByb3RvdHlwZS5vTWF0Y2hlc1NlbGVjdG9yfHxFbGVtZW50LnByb3RvdHlwZS5tc01hdGNoZXNTZWxlY3Rvcnx8RWxlbWVudC5wcm90b3R5cGUubW96TWF0Y2hlc1NlbGVjdG9yfHxmdW5jdGlvbih0KXtmb3IodmFyIGU9dGhpcyxyPShlLmRvY3VtZW50fHxlLm93bmVyRG9jdW1lbnQpLnF1ZXJ5U2VsZWN0b3JBbGwodCksbj0wO3Jbbl0mJnJbbl0hPT1lOykrK247cmV0dXJuISFyW25dfSxFbGVtZW50LnByb3RvdHlwZS5jbG9zZXN0PWZ1bmN0aW9uKHQpe2Zvcih2YXIgZT10aGlzO2U7KXtpZihlLm1hdGNoZXModCkpcmV0dXJuIGU7ZT0iU1ZHRWxlbWVudCJpbiB3aW5kb3cmJmUgaW5zdGFuY2VvZiBTVkdFbGVtZW50P2UucGFyZW50Tm9kZTplLnBhcmVudEVsZW1lbnR9cmV0dXJuIG51bGx9LGZ1bmN0aW9uKHQsZSl7ZnVuY3Rpb24gcih0KXtpZigxL3Q9PS0xLzAmJih0PTApLHQ+TWF0aC5wb3coMiwzMiktMSl0aHJvdyBuZXcgUmFuZ2VFcnJvcigiSW52YWxpZCBhcnJheSBsZW5ndGgiKTt2YXIgZT1bXTtyZXR1cm4gZS5sZW5ndGg9dCxlfWZ1bmN0aW9uIG4odCxlKXt2YXIgcj1hcmd1bWVudHMubGVuZ3RoPjI/YXJndW1lbnRzWzJdOltdO2lmKCExPT09Yyh0KSl0aHJvdyBuZXcgVHlwZUVycm9yKE9iamVjdC5wcm90b3R5cGUudG9TdHJpbmcuY2FsbCh0KSsiaXMgbm90IGEgZnVuY3Rpb24uIik7cmV0dXJuIHQuYXBwbHkoZSxyKX1mdW5jdGlvbiBpKHQsZSxyKXt2YXIgbj17dmFsdWU6cix3cml0YWJsZTohMCxlbnVtZXJhYmxlOiEwLGNvbmZpZ3VyYWJsZTohMH07dHJ5e3JldHVybiBPYmplY3QuZGVmaW5lUHJvcGVydHkodCxlLG4pLCEwfWNhdGNoKHQpe3JldHVybiExfX1mdW5jdGlvbiBvKHQsZSxyKXt2YXIgbj1pKHQsZSxyKTtpZighbil0aHJvdyBuZXcgVHlwZUVycm9yKCJDYW5ub3QgYXNzaWduIHZhbHVlIGAiK09iamVjdC5wcm90b3R5cGUudG9TdHJpbmcuY2FsbChyKSsiYCB0byBwcm9wZXJ0eSBgIitPYmplY3QucHJvdG90eXBlLnRvU3RyaW5nLmNhbGwoZSkrImAgb24gb2JqZWN0IGAiK09iamVjdC5wcm90b3R5cGUudG9TdHJpbmcuY2FsbCh0KSsiYCIpO3JldHVybiBufWZ1bmN0aW9uIHModCxlLHIpe3ZhciBuPXt2YWx1ZTpyLHdyaXRhYmxlOiEwLGVudW1lcmFibGU6ITEsY29uZmlndXJhYmxlOiEwfTtPYmplY3QuZGVmaW5lUHJvcGVydHkodCxlLG4pfWZ1bmN0aW9uIGEodCxlKXtyZXR1cm4gdFtlXX1mdW5jdGlvbiBjKHQpe3JldHVybiJmdW5jdGlvbiI9PXR5cGVvZiB0fWZ1bmN0aW9uIGwodCl7aWYobnVsbD09PXR8fHQ9PT1lKXRocm93IFR5cGVFcnJvcigpO3JldHVybiBPYmplY3QodCl9ZnVuY3Rpb24gdSh0LGUpe3JldHVybiBsKHQpW2VdfWZ1bmN0aW9uIHAodCxyKXt2YXIgbj11KHQscik7aWYobnVsbD09PW58fG49PT1lKXJldHVybiBlO2lmKCExPT09YyhuKSl0aHJvdyBuZXcgVHlwZUVycm9yKCJNZXRob2Qgbm90IGNhbGxhYmxlOiAiK3IpO3JldHVybiBufWZ1bmN0aW9uIGgoZSl7c3dpdGNoKHR5cGVvZiBlKXtjYXNlInVuZGVmaW5lZCI6cmV0dXJuInVuZGVmaW5lZCI7Y2FzZSJib29sZWFuIjpyZXR1cm4iYm9vbGVhbiI7Y2FzZSJudW1iZXIiOnJldHVybiJudW1iZXIiO2Nhc2Uic3RyaW5nIjpyZXR1cm4ic3RyaW5nIjtjYXNlInN5bWJvbCI6cmV0dXJuInN5bWJvbCI7ZGVmYXVsdDpyZXR1cm4gbnVsbD09PWU/Im51bGwiOiJTeW1ib2wiaW4gdCYmKGUgaW5zdGFuY2VvZiB0LlN5bWJvbHx8ZS5jb25zdHJ1Y3Rvcj09PXQuU3ltYm9sKT8ic3ltYm9sIjoib2JqZWN0In19dmFyIGY7ZnVuY3Rpb24gZCh0LGUpe2lmKCJib29sZWFuIiE9PWgoZSkpdGhyb3cgbmV3IEVycm9yO3ZhciByPXt9O3JldHVybiBpKHIsInZhbHVlIix0KSxpKHIsImRvbmUiLGUpLHJ9ZnVuY3Rpb24geSh0LGUpe3ZhciByPWFyZ3VtZW50c1syXXx8e30sbj1mdW5jdGlvbih0LGUpe3ZhciByPWEodCwicHJvdG90eXBlIik7cmV0dXJuIm9iamVjdCIhPT1oKHIpJiYocj1lKSxyfSh0LGUpLGk9T2JqZWN0LmNyZWF0ZShuKTtmb3IodmFyIG8gaW4gcilPYmplY3QucHJvdG90eXBlLmhhc093blByb3BlcnR5LmNhbGwocixvKSYmT2JqZWN0LmRlZmluZVByb3BlcnR5KGksbyx7Y29uZmlndXJhYmxlOiEwLGVudW1lcmFibGU6ITEsd3JpdGFibGU6ITAsdmFsdWU6cltvXX0pO3JldHVybiBpfWZ1bmN0aW9uIGIodCl7cmV0dXJuIm9iamVjdCI9PT1oKHQpJiYiZnVuY3Rpb24iPT10eXBlb2YgdCYmISF0LnByb3RvdHlwZX1mdW5jdGlvbiBnKHQpe3ZhciBlPWFyZ3VtZW50cy5sZW5ndGg+Mj9hcmd1bWVudHNbMl06dCxyPWFyZ3VtZW50cy5sZW5ndGg+MT9hcmd1bWVudHNbMV06W107aWYoIWIodCkpdGhyb3cgbmV3IFR5cGVFcnJvcigiRiBtdXN0IGJlIGEgY29uc3RydWN0b3IuIik7aWYoIWIoZSkpdGhyb3cgbmV3IFR5cGVFcnJvcigibmV3VGFyZ2V0IG11c3QgYmUgYSBjb25zdHJ1Y3Rvci4iKTtyZXR1cm4gZT09PXQ/bmV3KEZ1bmN0aW9uLnByb3RvdHlwZS5iaW5kLmFwcGx5KHQsW251bGxdLmNvbmNhdChyKSkpOm4odCx5KGUsT2JqZWN0LnByb3RvdHlwZSkscil9ZnVuY3Rpb24gdih0LHIpe2lmKCJvYmplY3QiIT09aCh0WyJbW0l0ZXJhdG9yXV0iXSkpdGhyb3cgbmV3IEVycm9yKE9iamVjdC5wcm90b3R5cGUudG9TdHJpbmcuY2FsbCh0WyJbW0l0ZXJhdG9yXV0iXSkrImlzIG5vdCBhbiBPYmplY3QuIik7dmFyIGk9dFsiW1tJdGVyYXRvcl1dIl0sbz1wKGksInJldHVybiIpO2lmKG89PT1lKXJldHVybiByO3RyeXt2YXIgcz1uKG8saSl9Y2F0Y2godCl7dmFyIGE9dH1pZihyKXJldHVybiByO2lmKGEpdGhyb3cgYTtpZigib2JqZWN0IiE9PWgocykpdGhyb3cgbmV3IFR5cGVFcnJvcigiSXRlcmF0b3IncyByZXR1cm4gbWV0aG9kIHJldHVybmVkIGEgbm9uLW9iamVjdC4iKTtyZXR1cm4gcn1mdW5jdGlvbiBtKHQpe2lmKCJvYmplY3QiIT09aCh0KSl0aHJvdyBuZXcgRXJyb3IoT2JqZWN0LnByb3RvdHlwZS50b1N0cmluZy5jYWxsKHQpKyJpcyBub3QgYW4gT2JqZWN0LiIpO3JldHVybiBlPWEodCwiZG9uZSIpLEJvb2xlYW4oZSk7dmFyIGV9ZnVuY3Rpb24gXyh0KXt2YXIgZT1mdW5jdGlvbih0KXtpZihhcmd1bWVudHMubGVuZ3RoPDIpdmFyIGU9bih0WyJbW05leHRNZXRob2RdXSJdLHRbIltbSXRlcmF0b3JdXSJdKTtlbHNlIGU9bih0WyJbW05leHRNZXRob2RdXSJdLHRbIltbSXRlcmF0b3JdXSJdLFthcmd1bWVudHNbMV1dKTtpZigib2JqZWN0IiE9PWgoZSkpdGhyb3cgbmV3IFR5cGVFcnJvcigiYmFkIGl0ZXJhdG9yIik7cmV0dXJuIGV9KHQpO3JldHVybiEwIT09bShlKSYmZX1mdW5jdGlvbiB3KHQpe2lmKCJvYmplY3QiIT09aCh0KSl0aHJvdyBuZXcgRXJyb3IoT2JqZWN0LnByb3RvdHlwZS50b1N0cmluZy5jYWxsKHQpKyJpcyBub3QgYW4gT2JqZWN0LiIpO3JldHVybiBhKHQsInZhbHVlIil9ZnVuY3Rpb24gUyh0LGUpe3JldHVybiBoKHQpPT09aChlKSYmKCJudW1iZXIiPT09aCh0KT8hKCFpc05hTih0KXx8IWlzTmFOKGUpKXx8MS90PT0xLzAmJjEvZT09LTEvMHx8MS90PT0tMS8wJiYxL2U9PTEvMHx8dD09PWU6ZnVuY3Rpb24odCxlKXtyZXR1cm4gdD09PWV9KHQsZSkpfWZ1bmN0aW9uIEUodCl7aWYoInN5bWJvbCI9PT1oKHQpKXRocm93IG5ldyBUeXBlRXJyb3IoIkNhbm5vdCBjb252ZXJ0IGEgU3ltYm9sIHZhbHVlIHRvIGEgbnVtYmVyIik7dmFyIGU9TnVtYmVyKHQpO3JldHVybiBpc05hTihlKT8wOjEvZT09MS8wfHwxL2U9PS0xLzB8fGU9PT0xLzB8fGU9PT0tMS8wP2U6KGU8MD8tMToxKSpNYXRoLmZsb29yKE1hdGguYWJzKGUpKX1mdW5jdGlvbiBPKHQpe3ZhciBlPUUodCk7cmV0dXJuIGU8PTA/MDpNYXRoLm1pbihlLE1hdGgucG93KDIsNTMpLTEpfWZ1bmN0aW9uIGoocil7dmFyIGk9YXJndW1lbnRzLmxlbmd0aD4xP2FyZ3VtZW50c1sxXTplO2lmKCJvYmplY3QiPT09aChyKSl7aWYoYXJndW1lbnRzLmxlbmd0aDwyKXZhciBvPSJkZWZhdWx0IjtlbHNlIGk9PT1TdHJpbmc/bz0ic3RyaW5nIjppPT09TnVtYmVyJiYobz0ibnVtYmVyIik7dmFyIHM9ImZ1bmN0aW9uIj09dHlwZW9mIHQuU3ltYm9sJiYic3ltYm9sIj09dHlwZW9mIHQuU3ltYm9sLnRvUHJpbWl0aXZlP3Aocix0LlN5bWJvbC50b1ByaW1pdGl2ZSk6ZTtpZihzIT09ZSl7dmFyIGw9bihzLHIsW29dKTtpZigib2JqZWN0IiE9PWgobCkpcmV0dXJuIGw7dGhyb3cgbmV3IFR5cGVFcnJvcigiQ2Fubm90IGNvbnZlcnQgZXhvdGljIG9iamVjdCB0byBwcmltaXRpdmUuIil9cmV0dXJuImRlZmF1bHQiPT09byYmKG89Im51bWJlciIpLGZ1bmN0aW9uKHQsZSl7aWYoInN0cmluZyI9PT1lKXZhciByPVsidG9TdHJpbmciLCJ2YWx1ZU9mIl07ZWxzZSByPVsidmFsdWVPZiIsInRvU3RyaW5nIl07Zm9yKHZhciBpPTA7aTxyLmxlbmd0aDsrK2kpe3ZhciBvPWEodCxyW2ldKTtpZihjKG8pKXt2YXIgcz1uKG8sdCk7aWYoIm9iamVjdCIhPT1oKHMpKXJldHVybiBzfX10aHJvdyBuZXcgVHlwZUVycm9yKCJDYW5ub3QgY29udmVydCB0byBwcmltaXRpdmUuIil9KHIsbyl9cmV0dXJuIHJ9ZnVuY3Rpb24gVCh0KXtzd2l0Y2goaCh0KSl7Y2FzZSJzeW1ib2wiOnRocm93IG5ldyBUeXBlRXJyb3IoIkNhbm5vdCBjb252ZXJ0IGEgU3ltYm9sIHZhbHVlIHRvIGEgc3RyaW5nIik7Y2FzZSJvYmplY3QiOnJldHVybiBUKGoodCxTdHJpbmcpKTtkZWZhdWx0OnJldHVybiBTdHJpbmcodCl9fWZ1bmN0aW9uIFAodCl7dmFyIGU9bihhcmd1bWVudHMubGVuZ3RoPjE/YXJndW1lbnRzWzFdOnAodCxTeW1ib2wuaXRlcmF0b3IpLHQpO2lmKCJvYmplY3QiIT09aChlKSl0aHJvdyBuZXcgVHlwZUVycm9yKCJiYWQgaXRlcmF0b3IiKTt2YXIgcj11KGUsIm5leHQiKSxpPU9iamVjdC5jcmVhdGUobnVsbCk7cmV0dXJuIGlbIltbSXRlcmF0b3JdXSJdPWUsaVsiW1tOZXh0TWV0aG9kXV0iXT1yLGlbIltbRG9uZV1dIl09ITEsaX1zKE9iamVjdCwia2V5cyIsZnVuY3Rpb24oKXtmdW5jdGlvbiB0KCl7dmFyIHQ7dHJ5e3Q9T2JqZWN0LmNyZWF0ZSh7fSl9Y2F0Y2godCl7cmV0dXJuITB9cmV0dXJuIGkuY2FsbCh0LCJfX3Byb3RvX18iKX12YXIgcj1PYmplY3QucHJvdG90eXBlLmhhc093blByb3BlcnR5LG49T2JqZWN0LnByb3RvdHlwZS50b1N0cmluZyxpPU9iamVjdC5wcm90b3R5cGUucHJvcGVydHlJc0VudW1lcmFibGUsbz0haS5jYWxsKHt0b1N0cmluZzpudWxsfSwidG9TdHJpbmciKSxzPWkuY2FsbCgoZnVuY3Rpb24oKXt9KSwicHJvdG90eXBlIiksYT1bInRvU3RyaW5nIiwidG9Mb2NhbGVTdHJpbmciLCJ2YWx1ZU9mIiwiaGFzT3duUHJvcGVydHkiLCJpc1Byb3RvdHlwZU9mIiwicHJvcGVydHlJc0VudW1lcmFibGUiLCJjb25zdHJ1Y3RvciJdLGM9ZnVuY3Rpb24odCl7dmFyIGU9dC5jb25zdHJ1Y3RvcjtyZXR1cm4gZSYmZS5wcm90b3R5cGU9PT10fSxsPXskY29uc29sZTohMCwkZXh0ZXJuYWw6ITAsJGZyYW1lOiEwLCRmcmFtZUVsZW1lbnQ6ITAsJGZyYW1lczohMCwkaW5uZXJIZWlnaHQ6ITAsJGlubmVyV2lkdGg6ITAsJG91dGVySGVpZ2h0OiEwLCRvdXRlcldpZHRoOiEwLCRwYWdlWE9mZnNldDohMCwkcGFnZVlPZmZzZXQ6ITAsJHBhcmVudDohMCwkc2Nyb2xsTGVmdDohMCwkc2Nyb2xsVG9wOiEwLCRzY3JvbGxYOiEwLCRzY3JvbGxZOiEwLCRzZWxmOiEwLCR3ZWJraXRJbmRleGVkREI6ITAsJHdlYmtpdFN0b3JhZ2VJbmZvOiEwLCR3aW5kb3c6ITB9LHU9ZnVuY3Rpb24oKXtpZigidW5kZWZpbmVkIj09dHlwZW9mIHdpbmRvdylyZXR1cm4hMTtmb3IodmFyIHQgaW4gd2luZG93KXRyeXtpZighbFsiJCIrdF0mJnIuY2FsbCh3aW5kb3csdCkmJm51bGwhPT13aW5kb3dbdF0mJiJvYmplY3QiPT10eXBlb2Ygd2luZG93W3RdKXRyeXtjKHdpbmRvd1t0XSl9Y2F0Y2godCl7cmV0dXJuITB9fWNhdGNoKHQpe3JldHVybiEwfXJldHVybiExfSgpLHA9ZnVuY3Rpb24odCl7aWYoInVuZGVmaW5lZCI9PXR5cGVvZiB3aW5kb3d8fCF1KXJldHVybiBjKHQpO3RyeXtyZXR1cm4gYyh0KX1jYXRjaCh0KXtyZXR1cm4hMX19O3JldHVybiBmdW5jdGlvbihpKXt2YXIgYz0iW29iamVjdCBGdW5jdGlvbl0iPT09bi5jYWxsKGkpLGw9ZnVuY3Rpb24odCl7dmFyIGU9bi5jYWxsKHQpLHI9IltvYmplY3QgQXJndW1lbnRzXSI9PT1lO3JldHVybiByfHwocj0iW29iamVjdCBBcnJheV0iIT09ZSYmbnVsbCE9PXQmJiJvYmplY3QiPT10eXBlb2YgdCYmIm51bWJlciI9PXR5cGVvZiB0Lmxlbmd0aCYmdC5sZW5ndGg+PTAmJiJbb2JqZWN0IEZ1bmN0aW9uXSI9PT1uLmNhbGwodC5jYWxsZWUpKSxyfShpKSx1PSJbb2JqZWN0IFN0cmluZ10iPT09bi5jYWxsKGkpLGg9W107aWYoaT09PWV8fG51bGw9PT1pKXRocm93IG5ldyBUeXBlRXJyb3IoIkNhbm5vdCBjb252ZXJ0IHVuZGVmaW5lZCBvciBudWxsIHRvIG9iamVjdCIpO3ZhciBmPXMmJmM7aWYodSYmaS5sZW5ndGg+MCYmIXIuY2FsbChpLDApKWZvcih2YXIgZD0wO2Q8aS5sZW5ndGg7KytkKWgucHVzaChTdHJpbmcoZCkpO2lmKGwmJmkubGVuZ3RoPjApZm9yKHZhciB5PTA7eTxpLmxlbmd0aDsrK3kpaC5wdXNoKFN0cmluZyh5KSk7ZWxzZSBmb3IodmFyIGIgaW4gaSl0KCkmJiJfX3Byb3RvX18iPT09Ynx8ZiYmInByb3RvdHlwZSI9PT1ifHwhci5jYWxsKGksYil8fGgucHVzaChTdHJpbmcoYikpO2lmKG8pZm9yKHZhciBnPXAoaSksdj0wO3Y8YS5sZW5ndGg7Kyt2KWcmJiJjb25zdHJ1Y3RvciI9PT1hW3ZdfHwhci5jYWxsKGksYVt2XSl8fGgucHVzaChhW3ZdKTtyZXR1cm4gaH19KCkpLGY9T2JqZWN0LmlzRXh0ZW5zaWJsZSxzKE9iamVjdCwiaXNFeHRlbnNpYmxlIiwoZnVuY3Rpb24odCl7cmV0dXJuIm9iamVjdCI9PT1oKHQpJiYoIWZ8fGYodCkpfSkpLHMoQXJyYXkucHJvdG90eXBlLCJpbmNsdWRlcyIsKGZ1bmN0aW9uKHQpe3ZhciBlPWwodGhpcykscj1PKGEoZSwibGVuZ3RoIikpO2lmKDA9PT1yKXJldHVybiExO3ZhciBuPUUoYXJndW1lbnRzWzFdKTtpZihuPj0wKXZhciBpPW47ZWxzZShpPXIrbik8MCYmKGk9MCk7Zm9yKDtpPHI7KXtpZihTKHQsYShlLFQoaSkpKSlyZXR1cm4hMDtpKz0xfXJldHVybiExfSkpLGZ1bmN0aW9uKCl7dmFyIGU9e30udG9TdHJpbmcscj0iIi5zcGxpdCxuPVtdLmNvbmNhdCxpPU9iamVjdC5wcm90b3R5cGUuaGFzT3duUHJvcGVydHksbz1PYmplY3QuZ2V0T3duUHJvcGVydHlOYW1lc3x8T2JqZWN0LmtleXMsYT0ib2JqZWN0Ij09dHlwZW9mIHQ/byh0KTpbXTtzKE9iamVjdCwiZ2V0T3duUHJvcGVydHlOYW1lcyIsKGZ1bmN0aW9uKHQpe3ZhciBzPWwodCk7aWYoIltvYmplY3QgV2luZG93XSI9PT1lLmNhbGwocykpdHJ5e3JldHVybiBvKHMpfWNhdGNoKHQpe3JldHVybiBuLmNhbGwoW10sYSl9cz0iW29iamVjdCBTdHJpbmddIj09ZS5jYWxsKHMpP3IuY2FsbChzLCIiKTpPYmplY3Qocyk7Zm9yKHZhciBjPW8ocyksdT1bImxlbmd0aCIsInByb3RvdHlwZSJdLHA9MDtwPHUubGVuZ3RoO3ArKyl7dmFyIGg9dVtwXTtpLmNhbGwocyxoKSYmIWMuaW5jbHVkZXMoaCkmJmMucHVzaChoKX1pZihjLmluY2x1ZGVzKCJfX3Byb3RvX18iKSl7dmFyIGY9Yy5pbmRleE9mKCJfX3Byb3RvX18iKTtjLnNwbGljZShmLDEpfXJldHVybiBjfSkpfSgpLGZ1bmN0aW9uKCl7dmFyIHQ9T2JqZWN0LmdldE93blByb3BlcnR5RGVzY3JpcHRvcixlPWZ1bmN0aW9uKCl7dHJ5e3JldHVybiAxPT09T2JqZWN0LmRlZmluZVByb3BlcnR5KGRvY3VtZW50LmNyZWF0ZUVsZW1lbnQoImRpdiIpLCJvbmUiLHtnZXQ6ZnVuY3Rpb24oKXtyZXR1cm4gMX19KS5vbmV9Y2F0Y2godCl7cmV0dXJuITF9fSxyPXt9LnRvU3RyaW5nLG49IiIuc3BsaXQ7cyhPYmplY3QsImdldE93blByb3BlcnR5RGVzY3JpcHRvciIsKGZ1bmN0aW9uKGksbyl7dmFyIHM9bChpKTtzPSgic3RyaW5nIj09PWgocyl8fHMgaW5zdGFuY2VvZiBTdHJpbmcpJiYiW29iamVjdCBTdHJpbmddIj09ci5jYWxsKGkpP24uY2FsbChpLCIiKTpPYmplY3QoaSk7dmFyIGE9ZnVuY3Rpb24odCl7dmFyIGU9aih0LFN0cmluZyk7cmV0dXJuInN5bWJvbCI9PT1oKGUpP2U6VChlKX0obyk7aWYoZSl0cnl7cmV0dXJuIHQocyxhKX1jYXRjaCh0KXt9aWYoZnVuY3Rpb24odCxlKXtyZXR1cm4gT2JqZWN0LnByb3RvdHlwZS5oYXNPd25Qcm9wZXJ0eS5jYWxsKHQsZSl9KHMsYSkpcmV0dXJue2VudW1lcmFibGU6ITAsY29uZmlndXJhYmxlOiEwLHdyaXRhYmxlOiEwLHZhbHVlOnNbYV19fSkpfSgpLGZ1bmN0aW9uKHIsbixpKXt2YXIgbyxzPWZ1bmN0aW9uKCl7dHJ5e3ZhciB0PXt9O3JldHVybiByLmRlZmluZVByb3BlcnR5KHQsInQiLHtjb25maWd1cmFibGU6ITAsZW51bWVyYWJsZTohMSxnZXQ6ZnVuY3Rpb24oKXtyZXR1cm4hMH0sc2V0OmV9KSwhIXQudH1jYXRjaCh0KXtyZXR1cm4hMX19KCksYT0wLGM9IiIrTWF0aC5yYW5kb20oKSxsPSJfXwFzeW1ib2w6Iix1PSJfXwFzeW1ib2xAQCIrYyxwPXt9LGY9ImRlZmluZVByb3BlcnR5IixkPSJkZWZpbmVQcm9wZXJ0aWVzIix5PSJnZXRPd25Qcm9wZXJ0eU5hbWVzIixiPSJnZXRPd25Qcm9wZXJ0eURlc2NyaXB0b3IiLGc9InByb3BlcnR5SXNFbnVtZXJhYmxlIix2PXIucHJvdG90eXBlLG09di5oYXNPd25Qcm9wZXJ0eSxfPXZbZ10sdz12LnRvU3RyaW5nLFM9QXJyYXkucHJvdG90eXBlLmNvbmNhdCxFPXIuZ2V0T3duUHJvcGVydHlOYW1lcz9yLmdldE93blByb3BlcnR5TmFtZXModCk6W10sTz1yW3ldLGo9ZnVuY3Rpb24odCl7aWYoIltvYmplY3QgV2luZG93XSI9PT13LmNhbGwodCkpdHJ5e3JldHVybiBPKHQpfWNhdGNoKHQpe3JldHVybiBTLmNhbGwoW10sRSl9cmV0dXJuIE8odCl9LFQ9cltiXSxQPXIuY3JlYXRlLEE9ci5rZXlzLE49ci5mcmVlemV8fHIsQz1yW2ZdLEk9cltkXSxMPVQocix5KSxNPWZ1bmN0aW9uKHQsZSxyKXtpZighbS5jYWxsKHQsdSkpdHJ5e0ModCx1LHtlbnVtZXJhYmxlOiExLGNvbmZpZ3VyYWJsZTohMSx3cml0YWJsZTohMSx2YWx1ZTp7fX0pfWNhdGNoKGUpe3RbdV09e319dFt1XVsiQEAiK2VdPXJ9LEQ9ZnVuY3Rpb24oKXt9LHg9ZnVuY3Rpb24odCl7cmV0dXJuIHQhPXUmJiFtLmNhbGwoRix0KX0sUj1mdW5jdGlvbih0KXtyZXR1cm4gdCE9dSYmbS5jYWxsKEYsdCl9LGs9ZnVuY3Rpb24odCl7dmFyIGU9IiIrdDtyZXR1cm4gUihlKT9tLmNhbGwodGhpcyxlKSYmdGhpc1t1XSYmdGhpc1t1XVsiQEAiK2VdOl8uY2FsbCh0aGlzLHQpfSxIPWZ1bmN0aW9uKHQpe3ZhciBlPXtlbnVtZXJhYmxlOiExLGNvbmZpZ3VyYWJsZTohMCxnZXQ6RCxzZXQ6ZnVuY3Rpb24oZSl7byh0aGlzLHQse2VudW1lcmFibGU6ITEsY29uZmlndXJhYmxlOiEwLHdyaXRhYmxlOiEwLHZhbHVlOmV9KSxNKHRoaXMsdCwhMCl9fTt0cnl7Qyh2LHQsZSl9Y2F0Y2gocil7dlt0XT1lLnZhbHVlfUZbdF09QyhyKHQpLCJjb25zdHJ1Y3RvciIsVSk7dmFyIG49VCgkLnByb3RvdHlwZSwiZGVzY3JpcHRpb24iKTtyZXR1cm4gbiYmQyhGW3RdLCJkZXNjcmlwdGlvbiIsbiksTihGW3RdKX0sRz1mdW5jdGlvbih0KXt2YXIgcj1mdW5jdGlvbih0KXtpZigic3ltYm9sIj09PWgodCkpcmV0dXJuIHQ7dGhyb3cgVHlwZUVycm9yKHQrIiBpcyBub3QgYSBzeW1ib2wiKX0odCk7aWYoVil7dmFyIG49SyhyKTtpZigiIiE9PW4pcmV0dXJuIG4uc2xpY2UoMSwtMSl9aWYocFtyXSE9PWUpcmV0dXJuIHBbcl07dmFyIGk9ci50b1N0cmluZygpLG89aS5sYXN0SW5kZXhPZigiMC4iKTtyZXR1cm4iIj09PShpPWkuc2xpY2UoMTAsbykpP2U6aX0sJD1mdW5jdGlvbiB0KCl7dmFyIG49YXJndW1lbnRzWzBdO2lmKHRoaXMgaW5zdGFuY2VvZiB0KXRocm93IG5ldyBUeXBlRXJyb3IoIlN5bWJvbCBpcyBub3QgYSBjb25zdHJ1Y3RvciIpO3ZhciBpPWwuY29uY2F0KG58fCIiLGMsKythKTtuPT09ZXx8bnVsbCE9PW4mJiFpc05hTihuKSYmIiIhPT1TdHJpbmcobil8fChwW2ldPVN0cmluZyhuKSk7dmFyIG89SChpKTtyZXR1cm4gc3x8ci5kZWZpbmVQcm9wZXJ0eShvLCJkZXNjcmlwdGlvbiIse2NvbmZpZ3VyYWJsZTohMCxlbnVtZXJhYmxlOiExLHZhbHVlOkcobyl9KSxvfSxGPVAobnVsbCksVT17dmFsdWU6JH0sej1mdW5jdGlvbih0KXtyZXR1cm4gRlt0XX0sQj1mdW5jdGlvbih0LGUscil7dmFyIG49IiIrZTtyZXR1cm4gUihuKT8obyh0LG4sci5lbnVtZXJhYmxlP2Z1bmN0aW9uKHQpe3ZhciBlPVAodCk7cmV0dXJuIGUuZW51bWVyYWJsZT0hMSxlfShyKTpyKSxNKHQsbiwhIXIuZW51bWVyYWJsZSkpOkModCxlLHIpLHR9LFc9ZnVuY3Rpb24odCl7cmV0dXJuIGoodCkuZmlsdGVyKHQ9PT12P2Z1bmN0aW9uKHQpe3JldHVybiBmdW5jdGlvbihlKXtyZXR1cm4gbS5jYWxsKHQsdSkmJm0uY2FsbCh0W3VdLCJAQCIrZSl9fSh0KTpSKS5tYXAoeil9O0wudmFsdWU9QixDKHIsZixMKSxMLnZhbHVlPVcsQyhyLCJnZXRPd25Qcm9wZXJ0eVN5bWJvbHMiLEwpLEwudmFsdWU9ZnVuY3Rpb24odCl7cmV0dXJuIGoodCkuZmlsdGVyKHgpfSxDKHIseSxMKSxMLnZhbHVlPWZ1bmN0aW9uKHQsZSl7dmFyIHI9VyhlKTtyZXR1cm4gci5sZW5ndGg/QShlKS5jb25jYXQocikuZm9yRWFjaCgoZnVuY3Rpb24ocil7ay5jYWxsKGUscikmJkIodCxyLGVbcl0pfSkpOkkodCxlKSx0fSxDKHIsZCxMKSxMLnZhbHVlPWssQyh2LGcsTCksTC52YWx1ZT0kLEMoaSwiU3ltYm9sIixMKSxMLnZhbHVlPWZ1bmN0aW9uKHQpe3ZhciBlPWwuY29uY2F0KGwsdCxjKTtyZXR1cm4gZSBpbiB2P0ZbZV06SChlKX0sQygkLCJmb3IiLEwpLEwudmFsdWU9ZnVuY3Rpb24odCl7aWYoeCh0KSl0aHJvdyBuZXcgVHlwZUVycm9yKHQrIiBpcyBub3QgYSBzeW1ib2wiKTtyZXR1cm4gbS5jYWxsKEYsdCk/dC5zbGljZSgyMCwtYy5sZW5ndGgpOnZvaWQgMH0sQygkLCJrZXlGb3IiLEwpLEwudmFsdWU9ZnVuY3Rpb24odCxlKXt2YXIgcj1UKHQsZSk7cmV0dXJuIHImJlIoZSkmJihyLmVudW1lcmFibGU9ay5jYWxsKHQsZSkpLHJ9LEMocixiLEwpLEwudmFsdWU9ZnVuY3Rpb24odCxlKXtyZXR1cm4gMT09PWFyZ3VtZW50cy5sZW5ndGh8fHZvaWQgMD09PWU/UCh0KTpmdW5jdGlvbih0LGUpe3ZhciByPVAodCk7cmV0dXJuIGooZSkuZm9yRWFjaCgoZnVuY3Rpb24odCl7ay5jYWxsKGUsdCkmJkIocix0LGVbdF0pfSkpLHJ9KHQsZSl9LEMociwiY3JlYXRlIixMKTt2YXIgcT1udWxsPT09ZnVuY3Rpb24oKXtyZXR1cm4gdGhpc30uY2FsbChudWxsKTtpZihMLnZhbHVlPXE/ZnVuY3Rpb24oKXt2YXIgdD13LmNhbGwodGhpcyk7cmV0dXJuIltvYmplY3QgU3RyaW5nXSI9PT10JiZSKHRoaXMpPyJbb2JqZWN0IFN5bWJvbF0iOnR9OmZ1bmN0aW9uKCl7aWYodGhpcz09PXdpbmRvdylyZXR1cm4iW29iamVjdCBOdWxsXSI7dmFyIHQ9dy5jYWxsKHRoaXMpO3JldHVybiJbb2JqZWN0IFN0cmluZ10iPT09dCYmUih0aGlzKT8iW29iamVjdCBTeW1ib2xdIjp0fSxDKHYsInRvU3RyaW5nIixMKSxvPWZ1bmN0aW9uKHQsZSxyKXt2YXIgbj1UKHYsZSk7ZGVsZXRlIHZbZV0sQyh0LGUsciksdCE9PXYmJkModixlLG4pfSxmdW5jdGlvbigpe3RyeXt2YXIgdD17fTtyZXR1cm4gci5kZWZpbmVQcm9wZXJ0eSh0LCJ0Iix7Y29uZmlndXJhYmxlOiEwLGVudW1lcmFibGU6ITEsZ2V0OmZ1bmN0aW9uKCl7cmV0dXJuITB9LHNldDplfSksISF0LnR9Y2F0Y2godCl7cmV0dXJuITF9fSgpKXt2YXIgSzt0cnl7Sz1GdW5jdGlvbigicyIsInZhciB2ID0gcy52YWx1ZU9mKCk7IHJldHVybiB7IFt2XSgpIHt9IH1bdl0ubmFtZTsiKX1jYXRjaCh0KXt9dmFyIFY9SyYmImluZmVycmVkIj09PWZ1bmN0aW9uKCl7fS5uYW1lP0s6bnVsbDtyLmRlZmluZVByb3BlcnR5KGkuU3ltYm9sLnByb3RvdHlwZSwiZGVzY3JpcHRpb24iLHtjb25maWd1cmFibGU6ITAsZW51bWVyYWJsZTohMSxnZXQ6ZnVuY3Rpb24oKXtyZXR1cm4gRyh0aGlzKX19KX19KE9iamVjdCwwLHQpLE9iamVjdC5kZWZpbmVQcm9wZXJ0eSh0LlN5bWJvbCwiaXRlcmF0b3IiLHt2YWx1ZTp0LlN5bWJvbCgiaXRlcmF0b3IiKX0pLE9iamVjdC5kZWZpbmVQcm9wZXJ0eShTeW1ib2wsInNwZWNpZXMiLHt2YWx1ZTpTeW1ib2woInNwZWNpZXMiKX0pLGZ1bmN0aW9uKHQpe2Z1bmN0aW9uIHIodCxlKXtpZigib2JqZWN0IiE9PWgodCkpdGhyb3cgbmV3IFR5cGVFcnJvcigiY3JlYXRlTWFwSXRlcmF0b3IgY2FsbGVkIG9uIGluY29tcGF0aWJsZSByZWNlaXZlciAiK09iamVjdC5wcm90b3R5cGUudG9TdHJpbmcuY2FsbCh0KSk7aWYoITAhPT10Ll9lczZNYXApdGhyb3cgbmV3IFR5cGVFcnJvcigiY3JlYXRlTWFwSXRlcmF0b3IgY2FsbGVkIG9uIGluY29tcGF0aWJsZSByZWNlaXZlciAiK09iamVjdC5wcm90b3R5cGUudG9TdHJpbmcuY2FsbCh0KSk7dmFyIHI9T2JqZWN0LmNyZWF0ZShnKTtyZXR1cm4gT2JqZWN0LmRlZmluZVByb3BlcnR5KHIsIltbTWFwXV0iLHtjb25maWd1cmFibGU6ITAsZW51bWVyYWJsZTohMSx3cml0YWJsZTohMCx2YWx1ZTp0fSksT2JqZWN0LmRlZmluZVByb3BlcnR5KHIsIltbTWFwTmV4dEluZGV4XV0iLHtjb25maWd1cmFibGU6ITAsZW51bWVyYWJsZTohMSx3cml0YWJsZTohMCx2YWx1ZTowfSksT2JqZWN0LmRlZmluZVByb3BlcnR5KHIsIltbTWFwSXRlcmF0aW9uS2luZF1dIix7Y29uZmlndXJhYmxlOiEwLGVudW1lcmFibGU6ITEsd3JpdGFibGU6ITAsdmFsdWU6ZX0pLHJ9dmFyIG49ZnVuY3Rpb24oKXt0cnl7dmFyIHQ9e307cmV0dXJuIE9iamVjdC5kZWZpbmVQcm9wZXJ0eSh0LCJ0Iix7Y29uZmlndXJhYmxlOiEwLGVudW1lcmFibGU6ITEsZ2V0OmZ1bmN0aW9uKCl7cmV0dXJuITB9LHNldDplfSksISF0LnR9Y2F0Y2godCl7cmV0dXJuITF9fSgpLGk9MCxvPVN5bWJvbCgibWV0YV8iKygxZTgqTWF0aC5yYW5kb20oKSsiIikucmVwbGFjZSgiLiIsIiIpKSxhPWZ1bmN0aW9uKHQpe2lmKCJvYmplY3QiPT10eXBlb2YgdD9udWxsIT09dDoiZnVuY3Rpb24iPT10eXBlb2YgdCl7aWYoIU9iamVjdC5pc0V4dGVuc2libGUodCkpcmV0dXJuITE7aWYoIU9iamVjdC5wcm90b3R5cGUuaGFzT3duUHJvcGVydHkuY2FsbCh0LG8pKXt2YXIgZT10eXBlb2YgdCsiLSIrICsraTtPYmplY3QuZGVmaW5lUHJvcGVydHkodCxvLHtjb25maWd1cmFibGU6ITEsZW51bWVyYWJsZTohMSx3cml0YWJsZTohMSx2YWx1ZTplfSl9cmV0dXJuIHRbb119cmV0dXJuIiIrdH0sbD1mdW5jdGlvbih0LHIpe3ZhciBuPWEocik7aWYoITE9PT1uKXJldHVybiB1KHQscik7dmFyIGk9dC5fdGFibGVbbl07cmV0dXJuIGkhPT1lJiZpfSx1PWZ1bmN0aW9uKHQsZSl7Zm9yKHZhciByPTA7cjx0Ll9rZXlzLmxlbmd0aDtyKyspe3ZhciBuPXQuX2tleXNbcl07aWYobiE9PWYmJlMobixlKSlyZXR1cm4gcn1yZXR1cm4hMX0scD1mdW5jdGlvbih0LGUscil7dmFyIG49YShlKTtyZXR1cm4hMSE9PW4mJighMT09PXI/ZGVsZXRlIHQuX3RhYmxlW25dOnQuX3RhYmxlW25dPXIsITApfSxmPVN5bWJvbCgidW5kZWYiKSxiPWZ1bmN0aW9uIHQoKXtpZighKHRoaXMgaW5zdGFuY2VvZiB0KSl0aHJvdyBuZXcgVHlwZUVycm9yKCdDb25zdHJ1Y3RvciBNYXAgcmVxdWlyZXMgIm5ldyInKTt2YXIgcj15KHRoaXMsdC5wcm90b3R5cGUse190YWJsZTp7fSxfa2V5czpbXSxfdmFsdWVzOltdLF9zaXplOjAsX2VzNk1hcDohMH0pO258fE9iamVjdC5kZWZpbmVQcm9wZXJ0eShyLCJzaXplIix7Y29uZmlndXJhYmxlOiEwLGVudW1lcmFibGU6ITEsd3JpdGFibGU6ITAsdmFsdWU6MH0pO3ZhciBpPWFyZ3VtZW50cy5sZW5ndGg+MD9hcmd1bWVudHNbMF06ZTtpZihudWxsPT09aXx8aT09PWUpcmV0dXJuIHI7dmFyIG89ci5zZXQ7aWYoIWMobykpdGhyb3cgbmV3IFR5cGVFcnJvcigiTWFwLnByb3RvdHlwZS5zZXQgaXMgbm90IGEgZnVuY3Rpb24iKTt0cnl7Zm9yKHZhciBzPVAoaSk7Oyl7dmFyIGE9XyhzKTtpZighMT09PWEpcmV0dXJuIHI7dmFyIGw9dyhhKTtpZigib2JqZWN0IiE9PWgobCkpdHJ5e3Rocm93IG5ldyBUeXBlRXJyb3IoIkl0ZXJhdG9yIHZhbHVlICIrbCsiIGlzIG5vdCBhbiBlbnRyeSBvYmplY3QiKX1jYXRjaCh0KXtyZXR1cm4gdihzLHQpfXRyeXt2YXIgdT1sWzBdLHA9bFsxXTtvLmNhbGwocix1LHApfWNhdGNoKHQpe3JldHVybiB2KHMsdCl9fX1jYXRjaCh0KXtpZihBcnJheS5pc0FycmF5KGkpfHwiW29iamVjdCBBcmd1bWVudHNdIj09PU9iamVjdC5wcm90b3R5cGUudG9TdHJpbmcuY2FsbChpKXx8aS5jYWxsZWUpe3ZhciBmLGQ9aS5sZW5ndGg7Zm9yKGY9MDtmPGQ7ZisrKW8uY2FsbChyLGlbZl1bMF0saVtmXVsxXSl9fXJldHVybiByfTtPYmplY3QuZGVmaW5lUHJvcGVydHkoYiwicHJvdG90eXBlIix7Y29uZmlndXJhYmxlOiExLGVudW1lcmFibGU6ITEsd3JpdGFibGU6ITEsdmFsdWU6e319KSxuP09iamVjdC5kZWZpbmVQcm9wZXJ0eShiLFN5bWJvbC5zcGVjaWVzLHtjb25maWd1cmFibGU6ITAsZW51bWVyYWJsZTohMSxnZXQ6ZnVuY3Rpb24oKXtyZXR1cm4gdGhpc30sc2V0OmV9KTpzKGIsU3ltYm9sLnNwZWNpZXMsYikscyhiLnByb3RvdHlwZSwiY2xlYXIiLChmdW5jdGlvbigpe3ZhciB0PXRoaXM7aWYoIm9iamVjdCIhPT1oKHQpKXRocm93IG5ldyBUeXBlRXJyb3IoIk1ldGhvZCBNYXAucHJvdG90eXBlLmNsZWFyIGNhbGxlZCBvbiBpbmNvbXBhdGlibGUgcmVjZWl2ZXIgIitPYmplY3QucHJvdG90eXBlLnRvU3RyaW5nLmNhbGwodCkpO2lmKCEwIT09dC5fZXM2TWFwKXRocm93IG5ldyBUeXBlRXJyb3IoIk1ldGhvZCBNYXAucHJvdG90eXBlLmNsZWFyIGNhbGxlZCBvbiBpbmNvbXBhdGlibGUgcmVjZWl2ZXIgIitPYmplY3QucHJvdG90eXBlLnRvU3RyaW5nLmNhbGwodCkpO2Zvcih2YXIgcj10Ll9rZXlzLGk9MDtpPHIubGVuZ3RoO2krKyl0Ll9rZXlzW2ldPWYsdC5fdmFsdWVzW2ldPWY7cmV0dXJuIHRoaXMuX3NpemU9MCxufHwodGhpcy5zaXplPXRoaXMuX3NpemUpLHRoaXMuX3RhYmxlPXt9LGV9KSkscyhiLnByb3RvdHlwZSwiY29uc3RydWN0b3IiLGIpLHMoYi5wcm90b3R5cGUsImRlbGV0ZSIsKGZ1bmN0aW9uKHQpe3ZhciBlPXRoaXM7aWYoIm9iamVjdCIhPT1oKGUpKXRocm93IG5ldyBUeXBlRXJyb3IoIk1ldGhvZCBNYXAucHJvdG90eXBlLmNsZWFyIGNhbGxlZCBvbiBpbmNvbXBhdGlibGUgcmVjZWl2ZXIgIitPYmplY3QucHJvdG90eXBlLnRvU3RyaW5nLmNhbGwoZSkpO2lmKCEwIT09ZS5fZXM2TWFwKXRocm93IG5ldyBUeXBlRXJyb3IoIk1ldGhvZCBNYXAucHJvdG90eXBlLmNsZWFyIGNhbGxlZCBvbiBpbmNvbXBhdGlibGUgcmVjZWl2ZXIgIitPYmplY3QucHJvdG90eXBlLnRvU3RyaW5nLmNhbGwoZSkpO3ZhciByPWwoZSx0KTtpZighMSE9PXIpe3ZhciBpPWUuX2tleXNbcl07aWYoaSE9PWYmJlMoaSx0KSlyZXR1cm4gdGhpcy5fa2V5c1tyXT1mLHRoaXMuX3ZhbHVlc1tyXT1mLHRoaXMuX3NpemU9LS10aGlzLl9zaXplLG58fCh0aGlzLnNpemU9dGhpcy5fc2l6ZSkscCh0aGlzLHQsITEpLCEwfXJldHVybiExfSkpLHMoYi5wcm90b3R5cGUsImVudHJpZXMiLChmdW5jdGlvbigpe3JldHVybiByKHRoaXMsImtleSt2YWx1ZSIpfSkpLHMoYi5wcm90b3R5cGUsImZvckVhY2giLChmdW5jdGlvbih0KXt2YXIgcj10aGlzO2lmKCJvYmplY3QiIT09aChyKSl0aHJvdyBuZXcgVHlwZUVycm9yKCJNZXRob2QgTWFwLnByb3RvdHlwZS5mb3JFYWNoIGNhbGxlZCBvbiBpbmNvbXBhdGlibGUgcmVjZWl2ZXIgIitPYmplY3QucHJvdG90eXBlLnRvU3RyaW5nLmNhbGwocikpO2lmKCEwIT09ci5fZXM2TWFwKXRocm93IG5ldyBUeXBlRXJyb3IoIk1ldGhvZCBNYXAucHJvdG90eXBlLmZvckVhY2ggY2FsbGVkIG9uIGluY29tcGF0aWJsZSByZWNlaXZlciAiK09iamVjdC5wcm90b3R5cGUudG9TdHJpbmcuY2FsbChyKSk7aWYoIWModCkpdGhyb3cgbmV3IFR5cGVFcnJvcihPYmplY3QucHJvdG90eXBlLnRvU3RyaW5nLmNhbGwodCkrIiBpcyBub3QgYSBmdW5jdGlvbi4iKTtpZihhcmd1bWVudHNbMV0pdmFyIG49YXJndW1lbnRzWzFdO2Zvcih2YXIgaT1yLl9rZXlzLG89MDtvPGkubGVuZ3RoO28rKylyLl9rZXlzW29dIT09ZiYmci5fdmFsdWVzW29dIT09ZiYmdC5jYWxsKG4sci5fdmFsdWVzW29dLHIuX2tleXNbb10scik7cmV0dXJuIGV9KSkscyhiLnByb3RvdHlwZSwiZ2V0IiwoZnVuY3Rpb24odCl7dmFyIHI9dGhpcztpZigib2JqZWN0IiE9PWgocikpdGhyb3cgbmV3IFR5cGVFcnJvcigiTWV0aG9kIE1hcC5wcm90b3R5cGUuZ2V0IGNhbGxlZCBvbiBpbmNvbXBhdGlibGUgcmVjZWl2ZXIgIitPYmplY3QucHJvdG90eXBlLnRvU3RyaW5nLmNhbGwocikpO2lmKCEwIT09ci5fZXM2TWFwKXRocm93IG5ldyBUeXBlRXJyb3IoIk1ldGhvZCBNYXAucHJvdG90eXBlLmdldCBjYWxsZWQgb24gaW5jb21wYXRpYmxlIHJlY2VpdmVyICIrT2JqZWN0LnByb3RvdHlwZS50b1N0cmluZy5jYWxsKHIpKTt2YXIgbj1sKHIsdCk7aWYoITEhPT1uKXt2YXIgaT1yLl9rZXlzW25dO2lmKGkhPT1mJiZTKGksdCkpcmV0dXJuIHIuX3ZhbHVlc1tuXX1yZXR1cm4gZX0pKSxzKGIucHJvdG90eXBlLCJoYXMiLChmdW5jdGlvbih0KXt2YXIgZT10aGlzO2lmKCJvYmplY3QiIT10eXBlb2YgZSl0aHJvdyBuZXcgVHlwZUVycm9yKCJNZXRob2QgTWFwLnByb3RvdHlwZS5oYXMgY2FsbGVkIG9uIGluY29tcGF0aWJsZSByZWNlaXZlciAiK09iamVjdC5wcm90b3R5cGUudG9TdHJpbmcuY2FsbChlKSk7aWYoITAhPT1lLl9lczZNYXApdGhyb3cgbmV3IFR5cGVFcnJvcigiTWV0aG9kIE1hcC5wcm90b3R5cGUuaGFzIGNhbGxlZCBvbiBpbmNvbXBhdGlibGUgcmVjZWl2ZXIgIitPYmplY3QucHJvdG90eXBlLnRvU3RyaW5nLmNhbGwoZSkpO3ZhciByPWwoZSx0KTtpZighMSE9PXIpe3ZhciBuPWUuX2tleXNbcl07aWYobiE9PWYmJlMobix0KSlyZXR1cm4hMH1yZXR1cm4hMX0pKSxzKGIucHJvdG90eXBlLCJrZXlzIiwoZnVuY3Rpb24oKXtyZXR1cm4gcih0aGlzLCJrZXkiKX0pKSxzKGIucHJvdG90eXBlLCJzZXQiLChmdW5jdGlvbih0LGUpe3ZhciByPXRoaXM7aWYoIm9iamVjdCIhPT1oKHIpKXRocm93IG5ldyBUeXBlRXJyb3IoIk1ldGhvZCBNYXAucHJvdG90eXBlLnNldCBjYWxsZWQgb24gaW5jb21wYXRpYmxlIHJlY2VpdmVyICIrT2JqZWN0LnByb3RvdHlwZS50b1N0cmluZy5jYWxsKHIpKTtpZighMCE9PXIuX2VzNk1hcCl0aHJvdyBuZXcgVHlwZUVycm9yKCJNZXRob2QgTWFwLnByb3RvdHlwZS5zZXQgY2FsbGVkIG9uIGluY29tcGF0aWJsZSByZWNlaXZlciAiK09iamVjdC5wcm90b3R5cGUudG9TdHJpbmcuY2FsbChyKSk7dmFyIGk9bChyLHQpO2lmKCExIT09aSlyLl92YWx1ZXNbaV09ZTtlbHNley0wPT09dCYmKHQ9MCk7dmFyIG89eyJbW0tleV1dIjp0LCJbW1ZhbHVlXV0iOmV9O3IuX2tleXMucHVzaChvWyJbW0tleV1dIl0pLHIuX3ZhbHVlcy5wdXNoKG9bIltbVmFsdWVdXSJdKSxwKHIsdCxyLl9rZXlzLmxlbmd0aC0xKSwrK3IuX3NpemUsbnx8KHIuc2l6ZT1yLl9zaXplKX1yZXR1cm4gcn0pKSxuJiZPYmplY3QuZGVmaW5lUHJvcGVydHkoYi5wcm90b3R5cGUsInNpemUiLHtjb25maWd1cmFibGU6ITAsZW51bWVyYWJsZTohMSxnZXQ6ZnVuY3Rpb24oKXt2YXIgdD10aGlzO2lmKCJvYmplY3QiIT09aCh0KSl0aHJvdyBuZXcgVHlwZUVycm9yKCJNZXRob2QgTWFwLnByb3RvdHlwZS5zaXplIGNhbGxlZCBvbiBpbmNvbXBhdGlibGUgcmVjZWl2ZXIgIitPYmplY3QucHJvdG90eXBlLnRvU3RyaW5nLmNhbGwodCkpO2lmKCEwIT09dC5fZXM2TWFwKXRocm93IG5ldyBUeXBlRXJyb3IoIk1ldGhvZCBNYXAucHJvdG90eXBlLnNpemUgY2FsbGVkIG9uIGluY29tcGF0aWJsZSByZWNlaXZlciAiK09iamVjdC5wcm90b3R5cGUudG9TdHJpbmcuY2FsbCh0KSk7cmV0dXJuIHRoaXMuX3NpemV9LHNldDplfSkscyhiLnByb3RvdHlwZSwidmFsdWVzIiwoZnVuY3Rpb24oKXtyZXR1cm4gcih0aGlzLCJ2YWx1ZSIpfSkpLHMoYi5wcm90b3R5cGUsU3ltYm9sLml0ZXJhdG9yLGIucHJvdG90eXBlLmVudHJpZXMpLCJuYW1lImluIGJ8fE9iamVjdC5kZWZpbmVQcm9wZXJ0eShiLCJuYW1lIix7Y29uZmlndXJhYmxlOiEwLGVudW1lcmFibGU6ITEsd3JpdGFibGU6ITEsdmFsdWU6Ik1hcCJ9KTt2YXIgZz17fTtPYmplY3QuZGVmaW5lUHJvcGVydHkoZywiaXNNYXBJdGVyYXRvciIse2NvbmZpZ3VyYWJsZTohMSxlbnVtZXJhYmxlOiExLHdyaXRhYmxlOiExLHZhbHVlOiEwfSkscyhnLCJuZXh0IiwoZnVuY3Rpb24oKXt2YXIgdD10aGlzO2lmKCJvYmplY3QiIT09aCh0KSl0aHJvdyBuZXcgVHlwZUVycm9yKCJNZXRob2QgJU1hcEl0ZXJhdG9yUHJvdG90eXBlJS5uZXh0IGNhbGxlZCBvbiBpbmNvbXBhdGlibGUgcmVjZWl2ZXIgIitPYmplY3QucHJvdG90eXBlLnRvU3RyaW5nLmNhbGwodCkpO2lmKCF0LmlzTWFwSXRlcmF0b3IpdGhyb3cgbmV3IFR5cGVFcnJvcigiTWV0aG9kICVNYXBJdGVyYXRvclByb3RvdHlwZSUubmV4dCBjYWxsZWQgb24gaW5jb21wYXRpYmxlIHJlY2VpdmVyICIrT2JqZWN0LnByb3RvdHlwZS50b1N0cmluZy5jYWxsKHQpKTt2YXIgcj10WyJbW01hcF1dIl0sbj10WyJbW01hcE5leHRJbmRleF1dIl0saT10WyJbW01hcEl0ZXJhdGlvbktpbmRdXSJdO2lmKHI9PT1lKXJldHVybiBkKGUsITApO2lmKCFyLl9lczZNYXApdGhyb3cgbmV3IEVycm9yKE9iamVjdC5wcm90b3R5cGUudG9TdHJpbmcuY2FsbChyKSsiIGhhcyBhIFtbTWFwRGF0YV1dIGludGVybmFsIHNsb3QuIik7Zm9yKHZhciBvPXIuX2tleXMubGVuZ3RoO248bzspe3ZhciBzPU9iamVjdC5jcmVhdGUobnVsbCk7aWYoc1siW1tLZXldXSJdPXIuX2tleXNbbl0sc1siW1tWYWx1ZV1dIl09ci5fdmFsdWVzW25dLG4rPTEsdFsiW1tNYXBOZXh0SW5kZXhdXSJdPW4sc1siW1tLZXldXSJdIT09Zil7aWYoImtleSI9PT1pKXZhciBhPXNbIltbS2V5XV0iXTtlbHNlIGlmKCJ2YWx1ZSI9PT1pKWE9c1siW1tWYWx1ZV1dIl07ZWxzZXtpZigia2V5K3ZhbHVlIiE9PWkpdGhyb3cgbmV3IEVycm9yO2E9W3NbIltbS2V5XV0iXSxzWyJbW1ZhbHVlXV0iXV19cmV0dXJuIGQoYSwhMSl9fXJldHVybiB0WyJbW01hcF1dIl09ZSxkKGUsITApfSkpLHMoZyxTeW1ib2wuaXRlcmF0b3IsKGZ1bmN0aW9uKCl7cmV0dXJuIHRoaXN9KSk7dHJ5e3ModCwiTWFwIixiKX1jYXRjaChlKXt0Lk1hcD1ifX0odCksZnVuY3Rpb24odCl7ZnVuY3Rpb24gcih0LGUpe2lmKCJvYmplY3QiIT10eXBlb2YgdCl0aHJvdyBuZXcgVHlwZUVycm9yKCJjcmVhdGVTZXRJdGVyYXRvciBjYWxsZWQgb24gaW5jb21wYXRpYmxlIHJlY2VpdmVyICIrT2JqZWN0LnByb3RvdHlwZS50b1N0cmluZy5jYWxsKHQpKTtpZighMCE9PXQuX2VzNlNldCl0aHJvdyBuZXcgVHlwZUVycm9yKCJjcmVhdGVTZXRJdGVyYXRvciBjYWxsZWQgb24gaW5jb21wYXRpYmxlIHJlY2VpdmVyICIrT2JqZWN0LnByb3RvdHlwZS50b1N0cmluZy5jYWxsKHQpKTt2YXIgcj1PYmplY3QuY3JlYXRlKGwpO3JldHVybiBPYmplY3QuZGVmaW5lUHJvcGVydHkociwiW1tJdGVyYXRlZFNldF1dIix7Y29uZmlndXJhYmxlOiEwLGVudW1lcmFibGU6ITEsd3JpdGFibGU6ITAsdmFsdWU6dH0pLE9iamVjdC5kZWZpbmVQcm9wZXJ0eShyLCJbW1NldE5leHRJbmRleF1dIix7Y29uZmlndXJhYmxlOiEwLGVudW1lcmFibGU6ITEsd3JpdGFibGU6ITAsdmFsdWU6MH0pLE9iamVjdC5kZWZpbmVQcm9wZXJ0eShyLCJbW1NldEl0ZXJhdGlvbktpbmRdXSIse2NvbmZpZ3VyYWJsZTohMCxlbnVtZXJhYmxlOiExLHdyaXRhYmxlOiEwLHZhbHVlOmV9KSxyfXZhciBuPWZ1bmN0aW9uKCl7dHJ5e3ZhciB0PXt9O3JldHVybiBPYmplY3QuZGVmaW5lUHJvcGVydHkodCwidCIse2NvbmZpZ3VyYWJsZTohMCxlbnVtZXJhYmxlOiExLGdldDpmdW5jdGlvbigpe3JldHVybiEwfSxzZXQ6ZX0pLCEhdC50fWNhdGNoKHQpe3JldHVybiExfX0oKSxpPVN5bWJvbCgidW5kZWYiKSxvPWZ1bmN0aW9uIHQoKXtpZighKHRoaXMgaW5zdGFuY2VvZiB0KSl0aHJvdyBuZXcgVHlwZUVycm9yKCdDb25zdHJ1Y3RvciBTZXQgcmVxdWlyZXMgIm5ldyInKTt2YXIgcj15KHRoaXMsdC5wcm90b3R5cGUse192YWx1ZXM6W10sX3NpemU6MCxfZXM2U2V0OiEwfSk7bnx8T2JqZWN0LmRlZmluZVByb3BlcnR5KHIsInNpemUiLHtjb25maWd1cmFibGU6ITAsZW51bWVyYWJsZTohMSx3cml0YWJsZTohMCx2YWx1ZTowfSk7dmFyIGk9YXJndW1lbnRzLmxlbmd0aD4wP2FyZ3VtZW50c1swXTplO2lmKG51bGw9PT1pfHxpPT09ZSlyZXR1cm4gcjt2YXIgbz1yLmFkZDtpZighYyhvKSl0aHJvdyBuZXcgVHlwZUVycm9yKCJTZXQucHJvdG90eXBlLmFkZCBpcyBub3QgYSBmdW5jdGlvbiIpO3RyeXtmb3IodmFyIHM9UChpKTs7KXt2YXIgYT1fKHMpO2lmKCExPT09YSlyZXR1cm4gcjt2YXIgbD13KGEpO3RyeXtvLmNhbGwocixsKX1jYXRjaCh0KXtyZXR1cm4gdihzLHQpfX19Y2F0Y2godCl7aWYoIUFycmF5LmlzQXJyYXkoaSkmJiJbb2JqZWN0IEFyZ3VtZW50c10iIT09T2JqZWN0LnByb3RvdHlwZS50b1N0cmluZy5jYWxsKGkpJiYhaS5jYWxsZWUpdGhyb3cgdDt2YXIgdSxwPWkubGVuZ3RoO2Zvcih1PTA7dTxwO3UrKylvLmNhbGwocixpW3VdKX1yZXR1cm4gcn07T2JqZWN0LmRlZmluZVByb3BlcnR5KG8sInByb3RvdHlwZSIse2NvbmZpZ3VyYWJsZTohMSxlbnVtZXJhYmxlOiExLHdyaXRhYmxlOiExLHZhbHVlOnt9fSksbj9PYmplY3QuZGVmaW5lUHJvcGVydHkobyxTeW1ib2wuc3BlY2llcyx7Y29uZmlndXJhYmxlOiEwLGVudW1lcmFibGU6ITEsZ2V0OmZ1bmN0aW9uKCl7cmV0dXJuIHRoaXN9LHNldDplfSk6cyhvLFN5bWJvbC5zcGVjaWVzLG8pLHMoby5wcm90b3R5cGUsImFkZCIsKGZ1bmN0aW9uKHQpe3ZhciBlPXRoaXM7aWYoIm9iamVjdCIhPXR5cGVvZiBlKXRocm93IG5ldyBUeXBlRXJyb3IoIk1ldGhvZCBTZXQucHJvdG90eXBlLmFkZCBjYWxsZWQgb24gaW5jb21wYXRpYmxlIHJlY2VpdmVyICIrT2JqZWN0LnByb3RvdHlwZS50b1N0cmluZy5jYWxsKGUpKTtpZighMCE9PWUuX2VzNlNldCl0aHJvdyBuZXcgVHlwZUVycm9yKCJNZXRob2QgU2V0LnByb3RvdHlwZS5hZGQgY2FsbGVkIG9uIGluY29tcGF0aWJsZSByZWNlaXZlciAiK09iamVjdC5wcm90b3R5cGUudG9TdHJpbmcuY2FsbChlKSk7Zm9yKHZhciByPWUuX3ZhbHVlcyxvPTA7bzxyLmxlbmd0aDtvKyspe3ZhciBzPXJbb107aWYocyE9PWkmJlMocyx0KSlyZXR1cm4gZX1yZXR1cm4gMD09PXQmJjEvdD09LTEvMCYmKHQ9MCksZS5fdmFsdWVzLnB1c2godCksdGhpcy5fc2l6ZT0rK3RoaXMuX3NpemUsbnx8KHRoaXMuc2l6ZT10aGlzLl9zaXplKSxlfSkpLHMoby5wcm90b3R5cGUsImNsZWFyIiwoZnVuY3Rpb24oKXt2YXIgdD10aGlzO2lmKCJvYmplY3QiIT10eXBlb2YgdCl0aHJvdyBuZXcgVHlwZUVycm9yKCJNZXRob2QgU2V0LnByb3RvdHlwZS5jbGVhciBjYWxsZWQgb24gaW5jb21wYXRpYmxlIHJlY2VpdmVyICIrT2JqZWN0LnByb3RvdHlwZS50b1N0cmluZy5jYWxsKHQpKTtpZighMCE9PXQuX2VzNlNldCl0aHJvdyBuZXcgVHlwZUVycm9yKCJNZXRob2QgU2V0LnByb3RvdHlwZS5jbGVhciBjYWxsZWQgb24gaW5jb21wYXRpYmxlIHJlY2VpdmVyICIrT2JqZWN0LnByb3RvdHlwZS50b1N0cmluZy5jYWxsKHQpKTtmb3IodmFyIHI9dC5fdmFsdWVzLG89MDtvPHIubGVuZ3RoO28rKylyW29dPWk7cmV0dXJuIHRoaXMuX3NpemU9MCxufHwodGhpcy5zaXplPXRoaXMuX3NpemUpLGV9KSkscyhvLnByb3RvdHlwZSwiY29uc3RydWN0b3IiLG8pLHMoby5wcm90b3R5cGUsImRlbGV0ZSIsKGZ1bmN0aW9uKHQpe3ZhciBlPXRoaXM7aWYoIm9iamVjdCIhPXR5cGVvZiBlKXRocm93IG5ldyBUeXBlRXJyb3IoIk1ldGhvZCBTZXQucHJvdG90eXBlLmRlbGV0ZSBjYWxsZWQgb24gaW5jb21wYXRpYmxlIHJlY2VpdmVyICIrT2JqZWN0LnByb3RvdHlwZS50b1N0cmluZy5jYWxsKGUpKTtpZighMCE9PWUuX2VzNlNldCl0aHJvdyBuZXcgVHlwZUVycm9yKCJNZXRob2QgU2V0LnByb3RvdHlwZS5kZWxldGUgY2FsbGVkIG9uIGluY29tcGF0aWJsZSByZWNlaXZlciAiK09iamVjdC5wcm90b3R5cGUudG9TdHJpbmcuY2FsbChlKSk7Zm9yKHZhciByPWUuX3ZhbHVlcyxvPTA7bzxyLmxlbmd0aDtvKyspe3ZhciBzPXJbb107aWYocyE9PWkmJlMocyx0KSlyZXR1cm4gcltvXT1pLHRoaXMuX3NpemU9LS10aGlzLl9zaXplLG58fCh0aGlzLnNpemU9dGhpcy5fc2l6ZSksITB9cmV0dXJuITF9KSkscyhvLnByb3RvdHlwZSwiZW50cmllcyIsKGZ1bmN0aW9uKCl7cmV0dXJuIHIodGhpcywia2V5K3ZhbHVlIil9KSkscyhvLnByb3RvdHlwZSwiZm9yRWFjaCIsKGZ1bmN0aW9uKHQpe3ZhciByPXRoaXM7aWYoIm9iamVjdCIhPXR5cGVvZiByKXRocm93IG5ldyBUeXBlRXJyb3IoIk1ldGhvZCBTZXQucHJvdG90eXBlLmZvckVhY2ggY2FsbGVkIG9uIGluY29tcGF0aWJsZSByZWNlaXZlciAiK09iamVjdC5wcm90b3R5cGUudG9TdHJpbmcuY2FsbChyKSk7aWYoITAhPT1yLl9lczZTZXQpdGhyb3cgbmV3IFR5cGVFcnJvcigiTWV0aG9kIFNldC5wcm90b3R5cGUuZm9yRWFjaCBjYWxsZWQgb24gaW5jb21wYXRpYmxlIHJlY2VpdmVyICIrT2JqZWN0LnByb3RvdHlwZS50b1N0cmluZy5jYWxsKHIpKTtpZighYyh0KSl0aHJvdyBuZXcgVHlwZUVycm9yKE9iamVjdC5wcm90b3R5cGUudG9TdHJpbmcuY2FsbCh0KSsiIGlzIG5vdCBhIGZ1bmN0aW9uLiIpO2lmKGFyZ3VtZW50c1sxXSl2YXIgbj1hcmd1bWVudHNbMV07Zm9yKHZhciBvPXIuX3ZhbHVlcyxzPTA7czxvLmxlbmd0aDtzKyspe3ZhciBhPW9bc107YSE9PWkmJnQuY2FsbChuLGEsYSxyKX1yZXR1cm4gZX0pKSxzKG8ucHJvdG90eXBlLCJoYXMiLChmdW5jdGlvbih0KXt2YXIgZT10aGlzO2lmKCJvYmplY3QiIT10eXBlb2YgZSl0aHJvdyBuZXcgVHlwZUVycm9yKCJNZXRob2QgU2V0LnByb3RvdHlwZS5mb3JFYWNoIGNhbGxlZCBvbiBpbmNvbXBhdGlibGUgcmVjZWl2ZXIgIitPYmplY3QucHJvdG90eXBlLnRvU3RyaW5nLmNhbGwoZSkpO2lmKCEwIT09ZS5fZXM2U2V0KXRocm93IG5ldyBUeXBlRXJyb3IoIk1ldGhvZCBTZXQucHJvdG90eXBlLmZvckVhY2ggY2FsbGVkIG9uIGluY29tcGF0aWJsZSByZWNlaXZlciAiK09iamVjdC5wcm90b3R5cGUudG9TdHJpbmcuY2FsbChlKSk7Zm9yKHZhciByPWUuX3ZhbHVlcyxuPTA7bjxyLmxlbmd0aDtuKyspe3ZhciBvPXJbbl07aWYobyE9PWkmJlMobyx0KSlyZXR1cm4hMH1yZXR1cm4hMX0pKTt2YXIgYT1mdW5jdGlvbigpe3JldHVybiByKHRoaXMsInZhbHVlIil9O3Moby5wcm90b3R5cGUsInZhbHVlcyIsYSkscyhvLnByb3RvdHlwZSwia2V5cyIsYSksbiYmT2JqZWN0LmRlZmluZVByb3BlcnR5KG8ucHJvdG90eXBlLCJzaXplIix7Y29uZmlndXJhYmxlOiEwLGVudW1lcmFibGU6ITEsZ2V0OmZ1bmN0aW9uKCl7dmFyIHQ9dGhpcztpZigib2JqZWN0IiE9dHlwZW9mIHQpdGhyb3cgbmV3IFR5cGVFcnJvcigiTWV0aG9kIFNldC5wcm90b3R5cGUuc2l6ZSBjYWxsZWQgb24gaW5jb21wYXRpYmxlIHJlY2VpdmVyICIrT2JqZWN0LnByb3RvdHlwZS50b1N0cmluZy5jYWxsKHQpKTtpZighMCE9PXQuX2VzNlNldCl0aHJvdyBuZXcgVHlwZUVycm9yKCJNZXRob2QgU2V0LnByb3RvdHlwZS5zaXplIGNhbGxlZCBvbiBpbmNvbXBhdGlibGUgcmVjZWl2ZXIgIitPYmplY3QucHJvdG90eXBlLnRvU3RyaW5nLmNhbGwodCkpO2Zvcih2YXIgZT10Ll92YWx1ZXMscj0wLG49MDtuPGUubGVuZ3RoO24rKyllW25dIT09aSYmKHIrPTEpO3JldHVybiByfSxzZXQ6ZX0pLHMoby5wcm90b3R5cGUsU3ltYm9sLml0ZXJhdG9yLGEpLCJuYW1lImluIG98fE9iamVjdC5kZWZpbmVQcm9wZXJ0eShvLCJuYW1lIix7Y29uZmlndXJhYmxlOiEwLGVudW1lcmFibGU6ITEsd3JpdGFibGU6ITEsdmFsdWU6IlNldCJ9KTt2YXIgbD17fTtPYmplY3QuZGVmaW5lUHJvcGVydHkobCwiaXNTZXRJdGVyYXRvciIse2NvbmZpZ3VyYWJsZTohMSxlbnVtZXJhYmxlOiExLHdyaXRhYmxlOiExLHZhbHVlOiEwfSkscyhsLCJuZXh0IiwoZnVuY3Rpb24oKXt2YXIgdD10aGlzO2lmKCJvYmplY3QiIT10eXBlb2YgdCl0aHJvdyBuZXcgVHlwZUVycm9yKCJNZXRob2QgJVNldEl0ZXJhdG9yUHJvdG90eXBlJS5uZXh0IGNhbGxlZCBvbiBpbmNvbXBhdGlibGUgcmVjZWl2ZXIgIitPYmplY3QucHJvdG90eXBlLnRvU3RyaW5nLmNhbGwodCkpO2lmKCF0LmlzU2V0SXRlcmF0b3IpdGhyb3cgbmV3IFR5cGVFcnJvcigiTWV0aG9kICVTZXRJdGVyYXRvclByb3RvdHlwZSUubmV4dCBjYWxsZWQgb24gaW5jb21wYXRpYmxlIHJlY2VpdmVyICIrT2JqZWN0LnByb3RvdHlwZS50b1N0cmluZy5jYWxsKHQpKTt2YXIgcj10WyJbW0l0ZXJhdGVkU2V0XV0iXSxuPXRbIltbU2V0TmV4dEluZGV4XV0iXSxvPXRbIltbU2V0SXRlcmF0aW9uS2luZF1dIl07aWYocj09PWUpcmV0dXJuIGQoZSwhMCk7aWYoIXIuX2VzNlNldCl0aHJvdyBuZXcgRXJyb3IoT2JqZWN0LnByb3RvdHlwZS50b1N0cmluZy5jYWxsKHIpKyIgZG9lcyBub3QgaGF2ZSBbW1NldERhdGFdXSBpbnRlcm5hbCBzbG90LiIpO2Zvcih2YXIgcz1yLl92YWx1ZXMsYT1zLmxlbmd0aDtuPGE7KXt2YXIgYz1zW25dO2lmKG4rPTEsdFsiW1tTZXROZXh0SW5kZXhdXSJdPW4sYyE9PWkpcmV0dXJuIGQoImtleSt2YWx1ZSI9PT1vP1tjLGNdOmMsITEpfXJldHVybiB0WyJbW0l0ZXJhdGVkU2V0XV0iXT1lLGQoZSwhMCl9KSkscyhsLFN5bWJvbC5pdGVyYXRvciwoZnVuY3Rpb24oKXtyZXR1cm4gdGhpc30pKTt0cnl7cyh0LCJTZXQiLG8pfWNhdGNoKGUpe3QuU2V0PW99fSh0KSxmdW5jdGlvbigpe2Z1bmN0aW9uIHQodCl7cmV0dXJuInN0cmluZyI9PXR5cGVvZiB0fHwib2JqZWN0Ij09dHlwZW9mIHQmJiJbb2JqZWN0IFN0cmluZ10iPT09aS5jYWxsKHQpfXZhciBpPU9iamVjdC5wcm90b3R5cGUudG9TdHJpbmcsdT1TdHJpbmcucHJvdG90eXBlLm1hdGNoO3MoQXJyYXksImZyb20iLChmdW5jdGlvbihpKXt2YXIgcz10aGlzLGg9YXJndW1lbnRzLmxlbmd0aD4xP2FyZ3VtZW50c1sxXTplO2lmKGg9PT1lKXZhciBmPSExO2Vsc2V7aWYoITE9PT1jKGgpKXRocm93IG5ldyBUeXBlRXJyb3IoT2JqZWN0LnByb3RvdHlwZS50b1N0cmluZy5jYWxsKGgpKyIgaXMgbm90IGEgZnVuY3Rpb24uIik7dmFyIGQ9YXJndW1lbnRzLmxlbmd0aD4yP2FyZ3VtZW50c1syXTplO2lmKGQhPT1lKXZhciB5PWQ7ZWxzZSB5PWU7Zj0hMH12YXIgbT1wKGksU3ltYm9sLml0ZXJhdG9yKTtpZihtIT09ZSl7aWYoYihzKSl2YXIgUz1nKHMpO2Vsc2UgUz1yKDApO2Zvcih2YXIgRT1QKGksbSksaj0wOzspe2lmKGo+PU1hdGgucG93KDIsNTMpLTEpcmV0dXJuIHYoRSxuZXcgVHlwZUVycm9yKCJJdGVyYXRpb24gY291bnQgY2FuIG5vdCBiZSBncmVhdGVyIHRoYW4gb3IgZXF1YWwgOTAwNzE5OTI1NDc0MDk5MS4iKSk7dmFyIEE9VChqKSxOPV8oRSk7aWYoITE9PT1OKXJldHVybiBTLmxlbmd0aD1qLFM7dmFyIEM9dyhOKTtpZihmKXRyeXt2YXIgST1uKGgseSxbQyxqXSl9Y2F0Y2godCl7cmV0dXJuIHYoRSx0KX1lbHNlIEk9Qzt0cnl7byhTLEEsSSl9Y2F0Y2godCl7cmV0dXJuIHYoRSx0KX1qKz0xfX1pZih0KGkpKXZhciBMPXUuY2FsbChpLC9bXHVEODAwLVx1REJGRl1bXHVEQzAwLVx1REZGRl0/fFteXHVEODAwLVx1REZGRl18Li9nKXx8W107ZWxzZSBMPWwoaSk7dmFyIE09TyhhKEwsImxlbmd0aCIpKTtmb3IoUz1iKHMpP2cocyxbTV0pOnIoTSksaj0wO2o8TTspe3ZhciBEPWEoTCxBPVQoaikpO28oUyxBLEk9ITA9PT1mP24oaCx5LFtELGpdKTpEKSxqKz0xfXJldHVybiBTLmxlbmd0aD1NLFN9KSl9KCksZnVuY3Rpb24odCl7ZnVuY3Rpb24gcihlKXtyZXR1cm4hIWUmJigiU3ltYm9sImluIHQmJiJpdGVyYXRvciJpbiB0LlN5bWJvbCYmImZ1bmN0aW9uIj09dHlwZW9mIGVbU3ltYm9sLml0ZXJhdG9yXXx8ISFBcnJheS5pc0FycmF5KGUpKX0hZnVuY3Rpb24oKXtmdW5jdGlvbiBuKHQpe3ZhciBlPSIiLHI9ITA7cmV0dXJuIHQuZm9yRWFjaCgoZnVuY3Rpb24odCl7dmFyIG49ZW5jb2RlVVJJQ29tcG9uZW50KHQubmFtZSksaT1lbmNvZGVVUklDb21wb25lbnQodC52YWx1ZSk7cnx8KGUrPSImIiksZSs9bisiPSIraSxyPSExfSkpLGUucmVwbGFjZSgvJTIwL2csIisiKX1mdW5jdGlvbiBpKHQpe3JldHVybiB0LnJlcGxhY2UoLygoJVswLTlBLUZhLWZdezJ9KSopL2csKGZ1bmN0aW9uKHQsZSl7cmV0dXJuIGRlY29kZVVSSUNvbXBvbmVudChlKX0pKX1mdW5jdGlvbiBvKHQsZSl7dmFyIHI9dC5zcGxpdCgiJiIpO2UmJi0xPT09clswXS5pbmRleE9mKCI9IikmJihyWzBdPSI9IityWzBdKTt2YXIgbj1bXTtyLmZvckVhY2goKGZ1bmN0aW9uKHQpe2lmKDAhPT10Lmxlbmd0aCl7dmFyIGU9dC5pbmRleE9mKCI9Iik7aWYoLTEhPT1lKXZhciByPXQuc3Vic3RyaW5nKDAsZSksaT10LnN1YnN0cmluZyhlKzEpO2Vsc2Ugcj10LGk9IiI7cj1yLnJlcGxhY2UoL1wrL2csIiAiKSxpPWkucmVwbGFjZSgvXCsvZywiICIpLG4ucHVzaCh7bmFtZTpyLHZhbHVlOml9KX19KSk7dmFyIG89W107cmV0dXJuIG4uZm9yRWFjaCgoZnVuY3Rpb24odCl7by5wdXNoKHtuYW1lOmkodC5uYW1lKSx2YWx1ZTppKHQudmFsdWUpfSl9KSksb31mdW5jdGlvbiBzKHQpe3ZhciBpPXRoaXM7dGhpcy5fbGlzdD1bXSx0PT09ZXx8bnVsbD09PXR8fCh0IGluc3RhbmNlb2Ygcz90aGlzLl9saXN0PW8oU3RyaW5nKHQpKToib2JqZWN0Ij09dHlwZW9mIHQmJnIodCk/QXJyYXkuZnJvbSh0KS5mb3JFYWNoKChmdW5jdGlvbih0KXtpZighcih0KSl0aHJvdyBUeXBlRXJyb3IoKTt2YXIgZT1BcnJheS5mcm9tKHQpO2lmKDIhPT1lLmxlbmd0aCl0aHJvdyBUeXBlRXJyb3IoKTtpLl9saXN0LnB1c2goe25hbWU6U3RyaW5nKGVbMF0pLHZhbHVlOlN0cmluZyhlWzFdKX0pfSkpOiJvYmplY3QiPT10eXBlb2YgdCYmdD9PYmplY3Qua2V5cyh0KS5mb3JFYWNoKChmdW5jdGlvbihlKXtpLl9saXN0LnB1c2goe25hbWU6U3RyaW5nKGUpLHZhbHVlOlN0cmluZyh0W2VdKX0pfSkpOigiPyI9PT0odD1TdHJpbmcodCkpLnN1YnN0cmluZygwLDEpJiYodD10LnN1YnN0cmluZygxKSksdGhpcy5fbGlzdD1vKHQpKSksdGhpcy5fdXJsX29iamVjdD1udWxsLHRoaXMuX3NldExpc3Q9ZnVuY3Rpb24odCl7YXx8KGkuX2xpc3Q9dCl9O3ZhciBhPSExO3RoaXMuX3VwZGF0ZV9zdGVwcz1mdW5jdGlvbigpe2F8fChhPSEwLGkuX3VybF9vYmplY3QmJigiYWJvdXQ6Ij09PWkuX3VybF9vYmplY3QucHJvdG9jb2wmJi0xIT09aS5fdXJsX29iamVjdC5wYXRobmFtZS5pbmRleE9mKCI/IikmJihpLl91cmxfb2JqZWN0LnBhdGhuYW1lPWkuX3VybF9vYmplY3QucGF0aG5hbWUuc3BsaXQoIj8iKVswXSksaS5fdXJsX29iamVjdC5zZWFyY2g9bihpLl9saXN0KSxhPSExKSl9fWZ1bmN0aW9uIGEodCxyKXt2YXIgbj0wO3RoaXMubmV4dD1mdW5jdGlvbigpe2lmKG4+PXQubGVuZ3RoKXJldHVybntkb25lOiEwLHZhbHVlOmV9O3ZhciBpPXRbbisrXTtyZXR1cm57ZG9uZTohMSx2YWx1ZToia2V5Ij09PXI/aS5uYW1lOiJ2YWx1ZSI9PT1yP2kudmFsdWU6W2kubmFtZSxpLnZhbHVlXX19fWZ1bmN0aW9uIGMoZSxyKXtmdW5jdGlvbiBuKCl7dmFyIHQ9YS5ocmVmLnJlcGxhY2UoLyMkfFw/JHxcPyg/PSMpL2csIiIpO2EuaHJlZiE9PXQmJihhLmhyZWY9dCl9ZnVuY3Rpb24gaSgpe2guX3NldExpc3QoYS5zZWFyY2g/byhhLnNlYXJjaC5zdWJzdHJpbmcoMSkpOltdKSxoLl91cGRhdGVfc3RlcHMoKX1pZighKHRoaXMgaW5zdGFuY2VvZiB0LlVSTCkpdGhyb3cgbmV3IFR5cGVFcnJvcigiRmFpbGVkIHRvIGNvbnN0cnVjdCAnVVJMJzogUGxlYXNlIHVzZSB0aGUgJ25ldycgb3BlcmF0b3IuIik7ciYmKGU9ZnVuY3Rpb24oKXtpZihsKXJldHVybiBuZXcgdShlLHIpLmhyZWY7dmFyIHQ7dHJ5e3ZhciBuO2lmKCJbb2JqZWN0IE9wZXJhTWluaV0iPT09T2JqZWN0LnByb3RvdHlwZS50b1N0cmluZy5jYWxsKHdpbmRvdy5vcGVyYW1pbmkpPygodD1kb2N1bWVudC5jcmVhdGVFbGVtZW50KCJpZnJhbWUiKSkuc3R5bGUuZGlzcGxheT0ibm9uZSIsZG9jdW1lbnQuZG9jdW1lbnRFbGVtZW50LmFwcGVuZENoaWxkKHQpLG49dC5jb250ZW50V2luZG93LmRvY3VtZW50KTpkb2N1bWVudC5pbXBsZW1lbnRhdGlvbiYmZG9jdW1lbnQuaW1wbGVtZW50YXRpb24uY3JlYXRlSFRNTERvY3VtZW50P249ZG9jdW1lbnQuaW1wbGVtZW50YXRpb24uY3JlYXRlSFRNTERvY3VtZW50KCIiKTpkb2N1bWVudC5pbXBsZW1lbnRhdGlvbiYmZG9jdW1lbnQuaW1wbGVtZW50YXRpb24uY3JlYXRlRG9jdW1lbnQ/KChuPWRvY3VtZW50LmltcGxlbWVudGF0aW9uLmNyZWF0ZURvY3VtZW50KCJodHRwOi8vd3d3LnczLm9yZy8xOTk5L3hodG1sIiwiaHRtbCIsbnVsbCkpLmRvY3VtZW50RWxlbWVudC5hcHBlbmRDaGlsZChuLmNyZWF0ZUVsZW1lbnQoImhlYWQiKSksbi5kb2N1bWVudEVsZW1lbnQuYXBwZW5kQ2hpbGQobi5jcmVhdGVFbGVtZW50KCJib2R5IikpKTp3aW5kb3cuQWN0aXZlWE9iamVjdCYmKChuPW5ldyB3aW5kb3cuQWN0aXZlWE9iamVjdCgiaHRtbGZpbGUiKSkud3JpdGUoIjxoZWFkPjwvaGVhZD48Ym9keT48L2JvZHk+Iiksbi5jbG9zZSgpKSwhbil0aHJvdyBFcnJvcigiYmFzZSBub3Qgc3VwcG9ydGVkIik7dmFyIGk9bi5jcmVhdGVFbGVtZW50KCJiYXNlIik7aS5ocmVmPXIsbi5nZXRFbGVtZW50c0J5VGFnTmFtZSgiaGVhZCIpWzBdLmFwcGVuZENoaWxkKGkpO3ZhciBvPW4uY3JlYXRlRWxlbWVudCgiYSIpO3JldHVybiBvLmhyZWY9ZSxvLmhyZWZ9ZmluYWxseXt0JiZ0LnBhcmVudE5vZGUucmVtb3ZlQ2hpbGQodCl9fSgpKTt2YXIgYT1mdW5jdGlvbih0KXtpZihsKXJldHVybiBuZXcgdSh0KTt2YXIgZT1kb2N1bWVudC5jcmVhdGVFbGVtZW50KCJhIik7cmV0dXJuIGUuaHJlZj10LGV9KGV8fCIiKSxjPWZ1bmN0aW9uKCl7aWYoISgiZGVmaW5lUHJvcGVydGllcyJpbiBPYmplY3QpKXJldHVybiExO3RyeXt2YXIgdD17fTtyZXR1cm4gT2JqZWN0LmRlZmluZVByb3BlcnRpZXModCx7cHJvcDp7Z2V0OmZ1bmN0aW9uKCl7cmV0dXJuITB9fX0pLHQucHJvcH1jYXRjaCh0KXtyZXR1cm4hMX19KCkscD1jP3RoaXM6ZG9jdW1lbnQuY3JlYXRlRWxlbWVudCgiYSIpLGg9bmV3IHMoYS5zZWFyY2g/YS5zZWFyY2guc3Vic3RyaW5nKDEpOm51bGwpO3JldHVybiBoLl91cmxfb2JqZWN0PXAsT2JqZWN0LmRlZmluZVByb3BlcnRpZXMocCx7aHJlZjp7Z2V0OmZ1bmN0aW9uKCl7cmV0dXJuIGEuaHJlZn0sc2V0OmZ1bmN0aW9uKHQpe2EuaHJlZj10LG4oKSxpKCl9LGVudW1lcmFibGU6ITAsY29uZmlndXJhYmxlOiEwfSxvcmlnaW46e2dldDpmdW5jdGlvbigpe3JldHVybiJkYXRhOiI9PT10aGlzLnByb3RvY29sLnRvTG93ZXJDYXNlKCk/bnVsbDoib3JpZ2luImluIGE/YS5vcmlnaW46dGhpcy5wcm90b2NvbCsiLy8iK3RoaXMuaG9zdH0sZW51bWVyYWJsZTohMCxjb25maWd1cmFibGU6ITB9LHByb3RvY29sOntnZXQ6ZnVuY3Rpb24oKXtyZXR1cm4gYS5wcm90b2NvbH0sc2V0OmZ1bmN0aW9uKHQpe2EucHJvdG9jb2w9dH0sZW51bWVyYWJsZTohMCxjb25maWd1cmFibGU6ITB9LHVzZXJuYW1lOntnZXQ6ZnVuY3Rpb24oKXtyZXR1cm4gYS51c2VybmFtZX0sc2V0OmZ1bmN0aW9uKHQpe2EudXNlcm5hbWU9dH0sZW51bWVyYWJsZTohMCxjb25maWd1cmFibGU6ITB9LHBhc3N3b3JkOntnZXQ6ZnVuY3Rpb24oKXtyZXR1cm4gYS5wYXNzd29yZH0sc2V0OmZ1bmN0aW9uKHQpe2EucGFzc3dvcmQ9dH0sZW51bWVyYWJsZTohMCxjb25maWd1cmFibGU6ITB9LGhvc3Q6e2dldDpmdW5jdGlvbigpe3ZhciB0PXsiaHR0cDoiOi86ODAkLywiaHR0cHM6IjovOjQ0MyQvLCJmdHA6IjovOjIxJC99W2EucHJvdG9jb2xdO3JldHVybiB0P2EuaG9zdC5yZXBsYWNlKHQsIiIpOmEuaG9zdH0sc2V0OmZ1bmN0aW9uKHQpe2EuaG9zdD10fSxlbnVtZXJhYmxlOiEwLGNvbmZpZ3VyYWJsZTohMH0saG9zdG5hbWU6e2dldDpmdW5jdGlvbigpe3JldHVybiBhLmhvc3RuYW1lfSxzZXQ6ZnVuY3Rpb24odCl7YS5ob3N0bmFtZT10fSxlbnVtZXJhYmxlOiEwLGNvbmZpZ3VyYWJsZTohMH0scG9ydDp7Z2V0OmZ1bmN0aW9uKCl7cmV0dXJuIGEucG9ydH0sc2V0OmZ1bmN0aW9uKHQpe2EucG9ydD10fSxlbnVtZXJhYmxlOiEwLGNvbmZpZ3VyYWJsZTohMH0scGF0aG5hbWU6e2dldDpmdW5jdGlvbigpe3JldHVybiIvIiE9PWEucGF0aG5hbWUuY2hhckF0KDApPyIvIithLnBhdGhuYW1lOmEucGF0aG5hbWV9LHNldDpmdW5jdGlvbih0KXthLnBhdGhuYW1lPXR9LGVudW1lcmFibGU6ITAsY29uZmlndXJhYmxlOiEwfSxzZWFyY2g6e2dldDpmdW5jdGlvbigpe3JldHVybiBhLnNlYXJjaH0sc2V0OmZ1bmN0aW9uKHQpe2Euc2VhcmNoIT09dCYmKGEuc2VhcmNoPXQsbigpLGkoKSl9LGVudW1lcmFibGU6ITAsY29uZmlndXJhYmxlOiEwfSxzZWFyY2hQYXJhbXM6e2dldDpmdW5jdGlvbigpe3JldHVybiBofSxlbnVtZXJhYmxlOiEwLGNvbmZpZ3VyYWJsZTohMH0saGFzaDp7Z2V0OmZ1bmN0aW9uKCl7cmV0dXJuIGEuaGFzaH0sc2V0OmZ1bmN0aW9uKHQpe2EuaGFzaD10LG4oKX0sZW51bWVyYWJsZTohMCxjb25maWd1cmFibGU6ITB9LHRvU3RyaW5nOnt2YWx1ZTpmdW5jdGlvbigpe3JldHVybiBhLnRvU3RyaW5nKCl9LGVudW1lcmFibGU6ITEsY29uZmlndXJhYmxlOiEwfSx2YWx1ZU9mOnt2YWx1ZTpmdW5jdGlvbigpe3JldHVybiBhLnZhbHVlT2YoKX0sZW51bWVyYWJsZTohMSxjb25maWd1cmFibGU6ITB9fSkscH12YXIgbCx1PXQuVVJMO3RyeXtpZih1KXtpZigic2VhcmNoUGFyYW1zImluKGw9bmV3IHQuVVJMKCJodHRwOi8vZXhhbXBsZS5jb20iKSkpe3ZhciBwPW5ldyBjKCJodHRwOi8vZXhhbXBsZS5jb20iKTtpZihwLnNlYXJjaD0iYT0xJmI9MiIsImh0dHA6Ly9leGFtcGxlLmNvbS8/YT0xJmI9MiI9PT1wLmhyZWYmJihwLnNlYXJjaD0iIiwiaHR0cDovL2V4YW1wbGUuY29tLyI9PT1wLmhyZWYpKXJldHVybn0iaHJlZiJpbiBsfHwobD1lKSxsPWV9fWNhdGNoKHQpe31pZihPYmplY3QuZGVmaW5lUHJvcGVydGllcyhzLnByb3RvdHlwZSx7YXBwZW5kOnt2YWx1ZTpmdW5jdGlvbih0LGUpe3RoaXMuX2xpc3QucHVzaCh7bmFtZTp0LHZhbHVlOmV9KSx0aGlzLl91cGRhdGVfc3RlcHMoKX0sd3JpdGFibGU6ITAsZW51bWVyYWJsZTohMCxjb25maWd1cmFibGU6ITB9LGRlbGV0ZTp7dmFsdWU6ZnVuY3Rpb24odCl7Zm9yKHZhciBlPTA7ZTx0aGlzLl9saXN0Lmxlbmd0aDspdGhpcy5fbGlzdFtlXS5uYW1lPT09dD90aGlzLl9saXN0LnNwbGljZShlLDEpOisrZTt0aGlzLl91cGRhdGVfc3RlcHMoKX0sd3JpdGFibGU6ITAsZW51bWVyYWJsZTohMCxjb25maWd1cmFibGU6ITB9LGdldDp7dmFsdWU6ZnVuY3Rpb24odCl7Zm9yKHZhciBlPTA7ZTx0aGlzLl9saXN0Lmxlbmd0aDsrK2UpaWYodGhpcy5fbGlzdFtlXS5uYW1lPT09dClyZXR1cm4gdGhpcy5fbGlzdFtlXS52YWx1ZTtyZXR1cm4gbnVsbH0sd3JpdGFibGU6ITAsZW51bWVyYWJsZTohMCxjb25maWd1cmFibGU6ITB9LGdldEFsbDp7dmFsdWU6ZnVuY3Rpb24odCl7Zm9yKHZhciBlPVtdLHI9MDtyPHRoaXMuX2xpc3QubGVuZ3RoOysrcil0aGlzLl9saXN0W3JdLm5hbWU9PT10JiZlLnB1c2godGhpcy5fbGlzdFtyXS52YWx1ZSk7cmV0dXJuIGV9LHdyaXRhYmxlOiEwLGVudW1lcmFibGU6ITAsY29uZmlndXJhYmxlOiEwfSxoYXM6e3ZhbHVlOmZ1bmN0aW9uKHQpe2Zvcih2YXIgZT0wO2U8dGhpcy5fbGlzdC5sZW5ndGg7KytlKWlmKHRoaXMuX2xpc3RbZV0ubmFtZT09PXQpcmV0dXJuITA7cmV0dXJuITF9LHdyaXRhYmxlOiEwLGVudW1lcmFibGU6ITAsY29uZmlndXJhYmxlOiEwfSxzZXQ6e3ZhbHVlOmZ1bmN0aW9uKHQsZSl7Zm9yKHZhciByPSExLG49MDtuPHRoaXMuX2xpc3QubGVuZ3RoOyl0aGlzLl9saXN0W25dLm5hbWU9PT10P3I/dGhpcy5fbGlzdC5zcGxpY2UobiwxKToodGhpcy5fbGlzdFtuXS52YWx1ZT1lLHI9ITAsKytuKTorK247cnx8dGhpcy5fbGlzdC5wdXNoKHtuYW1lOnQsdmFsdWU6ZX0pLHRoaXMuX3VwZGF0ZV9zdGVwcygpfSx3cml0YWJsZTohMCxlbnVtZXJhYmxlOiEwLGNvbmZpZ3VyYWJsZTohMH0sZW50cmllczp7dmFsdWU6ZnVuY3Rpb24oKXtyZXR1cm4gbmV3IGEodGhpcy5fbGlzdCwia2V5K3ZhbHVlIil9LHdyaXRhYmxlOiEwLGVudW1lcmFibGU6ITAsY29uZmlndXJhYmxlOiEwfSxrZXlzOnt2YWx1ZTpmdW5jdGlvbigpe3JldHVybiBuZXcgYSh0aGlzLl9saXN0LCJrZXkiKX0sd3JpdGFibGU6ITAsZW51bWVyYWJsZTohMCxjb25maWd1cmFibGU6ITB9LHZhbHVlczp7dmFsdWU6ZnVuY3Rpb24oKXtyZXR1cm4gbmV3IGEodGhpcy5fbGlzdCwidmFsdWUiKX0sd3JpdGFibGU6ITAsZW51bWVyYWJsZTohMCxjb25maWd1cmFibGU6ITB9LGZvckVhY2g6e3ZhbHVlOmZ1bmN0aW9uKHQpe3ZhciByPWFyZ3VtZW50cy5sZW5ndGg+MT9hcmd1bWVudHNbMV06ZTt0aGlzLl9saXN0LmZvckVhY2goKGZ1bmN0aW9uKGUpe3QuY2FsbChyLGUudmFsdWUsZS5uYW1lKX0pKX0sd3JpdGFibGU6ITAsZW51bWVyYWJsZTohMCxjb25maWd1cmFibGU6ITB9LHRvU3RyaW5nOnt2YWx1ZTpmdW5jdGlvbigpe3JldHVybiBuKHRoaXMuX2xpc3QpfSx3cml0YWJsZTohMCxlbnVtZXJhYmxlOiExLGNvbmZpZ3VyYWJsZTohMH0sc29ydDp7dmFsdWU6ZnVuY3Rpb24oKXtmb3IodmFyIHQ9dGhpcy5lbnRyaWVzKCksZT10Lm5leHQoKSxyPVtdLG49e307IWUuZG9uZTspe3ZhciBpPWUudmFsdWUsbz1pWzBdO3IucHVzaChvKSxPYmplY3QucHJvdG90eXBlLmhhc093blByb3BlcnR5LmNhbGwobixvKXx8KG5bb109W10pLG5bb10ucHVzaChpWzFdKSxlPXQubmV4dCgpfXIuc29ydCgpO2Zvcih2YXIgcz0wO3M8ci5sZW5ndGg7cysrKXRoaXMuZGVsZXRlKHJbc10pO2Zvcih2YXIgYT0wO2E8ci5sZW5ndGg7YSsrKW89clthXSx0aGlzLmFwcGVuZChvLG5bb10uc2hpZnQoKSl9fX0pLCJTeW1ib2wiaW4gdCYmIml0ZXJhdG9yImluIHQuU3ltYm9sJiYoT2JqZWN0LmRlZmluZVByb3BlcnR5KHMucHJvdG90eXBlLHQuU3ltYm9sLml0ZXJhdG9yLHt2YWx1ZTpzLnByb3RvdHlwZS5lbnRyaWVzLHdyaXRhYmxlOiEwLGVudW1lcmFibGU6ITAsY29uZmlndXJhYmxlOiEwfSksT2JqZWN0LmRlZmluZVByb3BlcnR5KGEucHJvdG90eXBlLHQuU3ltYm9sLml0ZXJhdG9yLHt2YWx1ZTpmdW5jdGlvbigpe3JldHVybiB0aGlzfSx3cml0YWJsZTohMCxlbnVtZXJhYmxlOiEwLGNvbmZpZ3VyYWJsZTohMH0pKSx1KWZvcih2YXIgaCBpbiB1KU9iamVjdC5wcm90b3R5cGUuaGFzT3duUHJvcGVydHkuY2FsbCh1LGgpJiYiZnVuY3Rpb24iPT10eXBlb2YgdVtoXSYmKGNbaF09dVtoXSk7dC5VUkw9Yyx0LlVSTFNlYXJjaFBhcmFtcz1zfSgpLGZ1bmN0aW9uKCl7aWYoIjEiIT09bmV3IHQuVVJMU2VhcmNoUGFyYW1zKFtbImEiLDFdXSkuZ2V0KCJhIil8fCIxIiE9PW5ldyB0LlVSTFNlYXJjaFBhcmFtcyh7YToxfSkuZ2V0KCJhIikpe3ZhciBlPXQuVVJMU2VhcmNoUGFyYW1zO3QuVVJMU2VhcmNoUGFyYW1zPWZ1bmN0aW9uKHQpe2lmKHQmJiJvYmplY3QiPT10eXBlb2YgdCYmcih0KSl7dmFyIG49bmV3IGU7cmV0dXJuIEFycmF5LmZyb20odCkuZm9yRWFjaCgoZnVuY3Rpb24odCl7aWYoIXIodCkpdGhyb3cgVHlwZUVycm9yKCk7dmFyIGU9QXJyYXkuZnJvbSh0KTtpZigyIT09ZS5sZW5ndGgpdGhyb3cgVHlwZUVycm9yKCk7bi5hcHBlbmQoZVswXSxlWzFdKX0pKSxufXJldHVybiB0JiYib2JqZWN0Ij09dHlwZW9mIHQ/KG49bmV3IGUsT2JqZWN0LmtleXModCkuZm9yRWFjaCgoZnVuY3Rpb24oZSl7bi5zZXQoZSx0W2VdKX0pKSxuKTpuZXcgZSh0KX19fSgpfSh0KX0oIm9iamVjdCI9PXR5cGVvZiB3aW5kb3cmJndpbmRvd3x8Im9iamVjdCI9PXR5cGVvZiBzZWxmJiZzZWxmfHwib2JqZWN0Ij09dHlwZW9mIGdsb2JhbCYmZ2xvYmFsfHx7fSkseXQuaW50ZXJuYWxzLmxlZ2FjeS5zZXRMZWdhY3koKSx5dC5pbnRlcm5hbHMucmVnaXN0ZXIoeXQuY29yZS5BcnR3b3JrU2VsZWN0b3IuQVJUV09SS19VU0UseXQuY29yZS5BcnR3b3JrKX0oKTsKLy8jIHNvdXJjZU1hcHBpbmdVUkw9ZHNmci5ub21vZHVsZS5taW4uanMubWFwCg==\");\n  </script>\n    <script type=\"module\" crossorigin src=\"/assets/index-DY91ErW_.js\"></script>\n    <link rel=\"stylesheet\" crossorigin href=\"/assets/index-W_8dVt3q.css\">\n  </head>\n  <body>\n    <div id=\"app\"></div>\n  </body>\n</html>\n",
      "ip": "148.253.96.193",
      "timestamp": "2024-05-26T00:23:14.579309307Z",
      "curl-command": "curl -X 'GET' -H 'Accept: */*' -H 'Accept-Language: en' -H 'User-Agent: Nuclei - Open-source project (github.com/projectdiscovery/nuclei)' 'https://proprietaire.dossierfacile.logement.gouv.fr/'",
      "matcher-status": true
    },
    {
      "template": "http/technologies/waf-detect.yaml",
      "template-url": "https://templates.nuclei.sh/public/waf-detect",
      "template-id": "waf-detect",
      "template-path": "/home/runner/nuclei-templates/http/technologies/waf-detect.yaml",
      "info": {
        "name": "WAF Detection",
        "author": [
          "dwisiswant0",
          "lu4nx"
        ],
        "tags": [
          "waf",
          "tech",
          "misc"
        ],
        "description": "A web application firewall was detected.",
        "reference": [
          "https://github.com/ekultek/whatwaf"
        ],
        "severity": "info",
        "metadata": {
          "max-request": 1
        },
        "classification": {
          "cve-id": null,
          "cwe-id": [
            "cwe-200"
          ]
        }
      },
      "matcher-name": "securesphere",
      "type": "http",
      "host": "https://proprietaire.dossierfacile.logement.gouv.fr/",
      "matched-at": "https://proprietaire.dossierfacile.logement.gouv.fr/",
      "request": "POST / HTTP/1.1\r\nHost: proprietaire.dossierfacile.logement.gouv.fr\r\nUser-Agent: Nuclei - Open-source project (github.com/projectdiscovery/nuclei)\r\nConnection: close\r\nContent-Length: 27\r\nContent-Type: application/x-www-form-urlencoded\r\nAccept-Encoding: gzip\r\n\r\n_=<script>alert(1)</script>",
      "response": "HTTP/1.1 404 Not Found\r\nConnection: close\r\nContent-Length: 140\r\nContent-Security-Policy: default-src 'none'\r\nContent-Type: text/html; charset=utf-8\r\nDate: Sun, 26 May 2024 00:23:44 GMT\r\nStrict-Transport-Security: max-age=31536000\r\nX-Content-Type-Options: nosniff\r\nX-Frame-Options: deny\r\nX-Powered-By: Express\r\nX-Request-Id: 8e8643e9-a257-4b75-927f-8e27a894398a\r\n\r\n<!DOCTYPE html>\n<html lang=\"en\">\n<head>\n<meta charset=\"utf-8\">\n<title>Error</title>\n</head>\n<body>\n<pre>Cannot POST /</pre>\n</body>\n</html>\n",
      "ip": "148.253.96.193",
      "timestamp": "2024-05-26T00:23:44.059014852Z",
      "curl-command": "curl -X 'POST' -d '_=<script>alert(1)</script>' -H 'Content-Type: application/x-www-form-urlencoded' -H 'Host: proprietaire.dossierfacile.logement.gouv.fr' -H 'User-Agent: Nuclei - Open-source project (github.com/projectdiscovery/nuclei)' 'https://proprietaire.dossierfacile.logement.gouv.fr/'",
      "matcher-status": true
    },
    {
      "template": "ssl/detect-ssl-issuer.yaml",
      "template-url": "https://templates.nuclei.sh/public/ssl-issuer",
      "template-id": "ssl-issuer",
      "template-path": "/home/runner/nuclei-templates/ssl/detect-ssl-issuer.yaml",
      "info": {
        "name": "Detect SSL Certificate Issuer",
        "author": [
          "lingtren"
        ],
        "tags": [
          "ssl",
          "tls"
        ],
        "description": "Extract the issuer's organization from the target's certificate. Issuers are entities which sign and distribute certificates.\n",
        "severity": "info",
        "metadata": {
          "max-request": 1
        }
      },
      "type": "ssl",
      "host": "proprietaire.dossierfacile.logement.gouv.fr",
      "matched-at": "proprietaire.dossierfacile.logement.gouv.fr:443",
      "extracted-results": [
        "Let's Encrypt"
      ],
      "ip": "148.253.96.193",
      "timestamp": "2024-05-26T00:29:28.096393444Z",
      "matcher-status": true
    },
    {
      "template": "ssl/ssl-dns-names.yaml",
      "template-url": "https://templates.nuclei.sh/public/ssl-dns-names",
      "template-id": "ssl-dns-names",
      "template-path": "/home/runner/nuclei-templates/ssl/ssl-dns-names.yaml",
      "info": {
        "name": "SSL DNS Names",
        "author": [
          "pdteam"
        ],
        "tags": [
          "ssl",
          "tls"
        ],
        "description": "Extract the Subject Alternative Name (SAN) from the target's certificate. SAN facilitates the usage of additional hostnames with the same certificate.\n",
        "severity": "info",
        "metadata": {
          "max-request": 1
        }
      },
      "type": "ssl",
      "host": "proprietaire.dossierfacile.logement.gouv.fr",
      "matched-at": "proprietaire.dossierfacile.logement.gouv.fr:443",
      "extracted-results": [
        "proprietaire.dossierfacile.logement.gouv.fr"
      ],
      "ip": "148.253.96.193",
      "timestamp": "2024-05-26T00:29:28.096517796Z",
      "matcher-status": true
    },
    {
      "template": "ssl/tls-version.yaml",
      "template-url": "https://templates.nuclei.sh/public/tls-version",
      "template-id": "tls-version",
      "template-path": "/home/runner/nuclei-templates/ssl/tls-version.yaml",
      "info": {
        "name": "TLS Version - Detect",
        "author": [
          "pdteam",
          "pussycat0x"
        ],
        "tags": [
          "ssl",
          "tls"
        ],
        "description": "TLS version detection is a security process used to determine the version of the Transport Layer Security (TLS) protocol used by a computer or server.\nIt is important to detect the TLS version in order to ensure secure communication between two computers or servers.\n",
        "severity": "info",
        "metadata": {
          "max-request": 4
        }
      },
      "type": "ssl",
      "host": "proprietaire.dossierfacile.logement.gouv.fr",
      "matched-at": "proprietaire.dossierfacile.logement.gouv.fr:443",
      "extracted-results": [
        "tls12"
      ],
      "ip": "148.253.96.193",
      "timestamp": "2024-05-26T00:29:30.798146662Z",
      "matcher-status": true
    },
    {
      "template": "ssl/tls-version.yaml",
      "template-url": "https://templates.nuclei.sh/public/tls-version",
      "template-id": "tls-version",
      "template-path": "/home/runner/nuclei-templates/ssl/tls-version.yaml",
      "info": {
        "name": "TLS Version - Detect",
        "author": [
          "pdteam",
          "pussycat0x"
        ],
        "tags": [
          "ssl",
          "tls"
        ],
        "description": "TLS version detection is a security process used to determine the version of the Transport Layer Security (TLS) protocol used by a computer or server.\nIt is important to detect the TLS version in order to ensure secure communication between two computers or servers.\n",
        "severity": "info",
        "metadata": {
          "max-request": 4
        }
      },
      "type": "ssl",
      "host": "proprietaire.dossierfacile.logement.gouv.fr",
      "matched-at": "proprietaire.dossierfacile.logement.gouv.fr:443",
      "extracted-results": [
        "tls13"
      ],
      "ip": "148.253.96.193",
      "timestamp": "2024-05-26T00:29:31.005103258Z",
      "matcher-status": true
    }
  ]
]
